/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  bigint: number;
  citext: any;
  json: any;
  jsonb: any;
  numeric: any;
  time: string;
  timestamp: string;
  timestamptz: string;
  timetz: string;
  uuid: string;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_comparison_exp = {
  _eq?: InputMaybe<Scalars['Boolean']>;
  _gt?: InputMaybe<Scalars['Boolean']>;
  _gte?: InputMaybe<Scalars['Boolean']>;
  _in?: InputMaybe<Array<Scalars['Boolean']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Boolean']>;
  _lte?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Scalars['Boolean']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']>>;
};

export type ExternalContactByIdInput = {
  external_id: Scalars['Int'];
};

export type ExternalContactByIdOutput = {
  __typename?: 'ExternalContactByIdOutput';
  cards?: Maybe<Scalars['Int']>;
  email?: Maybe<Scalars['String']>;
  followers?: Maybe<Scalars['Int']>;
  full_name?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  internal_contact?: Maybe<contacts>;
  last_activity?: Maybe<Scalars['String']>;
  mobile_number?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_comparison_exp = {
  _eq?: InputMaybe<Scalars['Int']>;
  _gt?: InputMaybe<Scalars['Int']>;
  _gte?: InputMaybe<Scalars['Int']>;
  _in?: InputMaybe<Array<Scalars['Int']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Int']>;
  _lte?: InputMaybe<Scalars['Int']>;
  _neq?: InputMaybe<Scalars['Int']>;
  _nin?: InputMaybe<Array<Scalars['Int']>>;
};

export type MockarooAPI = {
  __typename?: 'MockarooAPI';
  cards?: Maybe<Scalars['Int']>;
  email?: Maybe<Scalars['String']>;
  external_id?: Maybe<Scalars['Int']>;
  followers?: Maybe<Scalars['Int']>;
  full_name?: Maybe<Scalars['String']>;
  last_activity?: Maybe<Scalars['String']>;
  mockarooContact?: Maybe<contacts>;
  username?: Maybe<Scalars['String']>;
};

export type MockarooInput = {
  external_id?: InputMaybe<Scalars['Int']>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_comparison_exp = {
  _eq?: InputMaybe<Scalars['String']>;
  _gt?: InputMaybe<Scalars['String']>;
  _gte?: InputMaybe<Scalars['String']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['String']>;
  _in?: InputMaybe<Array<Scalars['String']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['String']>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['String']>;
  _lt?: InputMaybe<Scalars['String']>;
  _lte?: InputMaybe<Scalars['String']>;
  _neq?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['String']>;
  _nin?: InputMaybe<Array<Scalars['String']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['String']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['String']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "account_agents" */
export type account_agents = {
  __typename?: 'account_agents';
  accept_calls?: Maybe<Scalars['Boolean']>;
  account_id?: Maybe<Scalars['bigint']>;
  availability?: Maybe<Scalars['Int']>;
  avatar_url?: Maybe<Scalars['String']>;
  call_agent_password?: Maybe<Scalars['String']>;
  call_agent_username?: Maybe<Scalars['String']>;
  display_name?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['citext']>;
  id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  invited_by?: Maybe<account_agents>;
  inviter_id?: Maybe<Scalars['bigint']>;
  is_enabled?: Maybe<Scalars['Boolean']>;
  joined_as_agent_at?: Maybe<Scalars['timestamptz']>;
  last_active_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  phone_country_code?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  role?: Maybe<Scalars['String']>;
  /** An array relationship */
  team_members: Array<team_members>;
  /** An aggregate relationship */
  team_members_aggregate: team_members_aggregate;
  tokens?: Maybe<Scalars['jsonb']>;
  user_created_at?: Maybe<Scalars['timestamptz']>;
  verified?: Maybe<Scalars['Boolean']>;
};


/** columns and relationships of "account_agents" */
export type account_agentsteam_membersArgs = {
  distinct_on?: InputMaybe<Array<team_members_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_members_order_by>>;
  where?: InputMaybe<team_members_bool_exp>;
};


/** columns and relationships of "account_agents" */
export type account_agentsteam_members_aggregateArgs = {
  distinct_on?: InputMaybe<Array<team_members_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_members_order_by>>;
  where?: InputMaybe<team_members_bool_exp>;
};


/** columns and relationships of "account_agents" */
export type account_agentstokensArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "account_agents" */
export type account_agents_aggregate = {
  __typename?: 'account_agents_aggregate';
  aggregate?: Maybe<account_agents_aggregate_fields>;
  nodes: Array<account_agents>;
};

/** aggregate fields of "account_agents" */
export type account_agents_aggregate_fields = {
  __typename?: 'account_agents_aggregate_fields';
  avg?: Maybe<account_agents_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<account_agents_max_fields>;
  min?: Maybe<account_agents_min_fields>;
  stddev?: Maybe<account_agents_stddev_fields>;
  stddev_pop?: Maybe<account_agents_stddev_pop_fields>;
  stddev_samp?: Maybe<account_agents_stddev_samp_fields>;
  sum?: Maybe<account_agents_sum_fields>;
  var_pop?: Maybe<account_agents_var_pop_fields>;
  var_samp?: Maybe<account_agents_var_samp_fields>;
  variance?: Maybe<account_agents_variance_fields>;
};


/** aggregate fields of "account_agents" */
export type account_agents_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<account_agents_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type account_agents_avg_fields = {
  __typename?: 'account_agents_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "account_agents". All fields are combined with a logical 'AND'. */
export type account_agents_bool_exp = {
  _and?: InputMaybe<Array<account_agents_bool_exp>>;
  _not?: InputMaybe<account_agents_bool_exp>;
  _or?: InputMaybe<Array<account_agents_bool_exp>>;
  accept_calls?: InputMaybe<Boolean_comparison_exp>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  availability?: InputMaybe<Int_comparison_exp>;
  avatar_url?: InputMaybe<String_comparison_exp>;
  call_agent_password?: InputMaybe<String_comparison_exp>;
  call_agent_username?: InputMaybe<String_comparison_exp>;
  display_name?: InputMaybe<String_comparison_exp>;
  email?: InputMaybe<citext_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  invited_by?: InputMaybe<account_agents_bool_exp>;
  inviter_id?: InputMaybe<bigint_comparison_exp>;
  is_enabled?: InputMaybe<Boolean_comparison_exp>;
  joined_as_agent_at?: InputMaybe<timestamptz_comparison_exp>;
  last_active_at?: InputMaybe<timestamptz_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  password?: InputMaybe<String_comparison_exp>;
  phone_country_code?: InputMaybe<String_comparison_exp>;
  phone_number?: InputMaybe<String_comparison_exp>;
  role?: InputMaybe<String_comparison_exp>;
  team_members?: InputMaybe<team_members_bool_exp>;
  team_members_aggregate?: InputMaybe<team_members_aggregate_bool_exp>;
  tokens?: InputMaybe<jsonb_comparison_exp>;
  user_created_at?: InputMaybe<timestamptz_comparison_exp>;
  verified?: InputMaybe<Boolean_comparison_exp>;
};

/** input type for inserting data into table "account_agents" */
export type account_agents_insert_input = {
  accept_calls?: InputMaybe<Scalars['Boolean']>;
  account_id?: InputMaybe<Scalars['bigint']>;
  availability?: InputMaybe<Scalars['Int']>;
  avatar_url?: InputMaybe<Scalars['String']>;
  call_agent_password?: InputMaybe<Scalars['String']>;
  call_agent_username?: InputMaybe<Scalars['String']>;
  display_name?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['citext']>;
  id?: InputMaybe<Scalars['bigint']>;
  invited_by?: InputMaybe<account_agents_obj_rel_insert_input>;
  inviter_id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  joined_as_agent_at?: InputMaybe<Scalars['timestamptz']>;
  last_active_at?: InputMaybe<Scalars['timestamptz']>;
  name?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  phone_country_code?: InputMaybe<Scalars['String']>;
  phone_number?: InputMaybe<Scalars['String']>;
  role?: InputMaybe<Scalars['String']>;
  team_members?: InputMaybe<team_members_arr_rel_insert_input>;
  tokens?: InputMaybe<Scalars['jsonb']>;
  user_created_at?: InputMaybe<Scalars['timestamptz']>;
  verified?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate max on columns */
export type account_agents_max_fields = {
  __typename?: 'account_agents_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  availability?: Maybe<Scalars['Int']>;
  avatar_url?: Maybe<Scalars['String']>;
  call_agent_password?: Maybe<Scalars['String']>;
  call_agent_username?: Maybe<Scalars['String']>;
  display_name?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['citext']>;
  id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  joined_as_agent_at?: Maybe<Scalars['timestamptz']>;
  last_active_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  phone_country_code?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  role?: Maybe<Scalars['String']>;
  user_created_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type account_agents_min_fields = {
  __typename?: 'account_agents_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  availability?: Maybe<Scalars['Int']>;
  avatar_url?: Maybe<Scalars['String']>;
  call_agent_password?: Maybe<Scalars['String']>;
  call_agent_username?: Maybe<Scalars['String']>;
  display_name?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['citext']>;
  id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  joined_as_agent_at?: Maybe<Scalars['timestamptz']>;
  last_active_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  phone_country_code?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  role?: Maybe<Scalars['String']>;
  user_created_at?: Maybe<Scalars['timestamptz']>;
};

/** input type for inserting object relation for remote table "account_agents" */
export type account_agents_obj_rel_insert_input = {
  data: account_agents_insert_input;
};

/** Ordering options when selecting data from "account_agents". */
export type account_agents_order_by = {
  accept_calls?: InputMaybe<order_by>;
  account_id?: InputMaybe<order_by>;
  availability?: InputMaybe<order_by>;
  avatar_url?: InputMaybe<order_by>;
  call_agent_password?: InputMaybe<order_by>;
  call_agent_username?: InputMaybe<order_by>;
  display_name?: InputMaybe<order_by>;
  email?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  invited_by?: InputMaybe<account_agents_order_by>;
  inviter_id?: InputMaybe<order_by>;
  is_enabled?: InputMaybe<order_by>;
  joined_as_agent_at?: InputMaybe<order_by>;
  last_active_at?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  password?: InputMaybe<order_by>;
  phone_country_code?: InputMaybe<order_by>;
  phone_number?: InputMaybe<order_by>;
  role?: InputMaybe<order_by>;
  team_members_aggregate?: InputMaybe<team_members_aggregate_order_by>;
  tokens?: InputMaybe<order_by>;
  user_created_at?: InputMaybe<order_by>;
  verified?: InputMaybe<order_by>;
};

/** select columns of table "account_agents" */
export enum account_agents_select_column {
  /** column name */
  accept_calls = 'accept_calls',
  /** column name */
  account_id = 'account_id',
  /** column name */
  availability = 'availability',
  /** column name */
  avatar_url = 'avatar_url',
  /** column name */
  call_agent_password = 'call_agent_password',
  /** column name */
  call_agent_username = 'call_agent_username',
  /** column name */
  display_name = 'display_name',
  /** column name */
  email = 'email',
  /** column name */
  id = 'id',
  /** column name */
  inviter_id = 'inviter_id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  joined_as_agent_at = 'joined_as_agent_at',
  /** column name */
  last_active_at = 'last_active_at',
  /** column name */
  name = 'name',
  /** column name */
  password = 'password',
  /** column name */
  phone_country_code = 'phone_country_code',
  /** column name */
  phone_number = 'phone_number',
  /** column name */
  role = 'role',
  /** column name */
  tokens = 'tokens',
  /** column name */
  user_created_at = 'user_created_at',
  /** column name */
  verified = 'verified'
}

/** aggregate stddev on columns */
export type account_agents_stddev_fields = {
  __typename?: 'account_agents_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type account_agents_stddev_pop_fields = {
  __typename?: 'account_agents_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type account_agents_stddev_samp_fields = {
  __typename?: 'account_agents_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "account_agents" */
export type account_agents_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: account_agents_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type account_agents_stream_cursor_value_input = {
  accept_calls?: InputMaybe<Scalars['Boolean']>;
  account_id?: InputMaybe<Scalars['bigint']>;
  availability?: InputMaybe<Scalars['Int']>;
  avatar_url?: InputMaybe<Scalars['String']>;
  call_agent_password?: InputMaybe<Scalars['String']>;
  call_agent_username?: InputMaybe<Scalars['String']>;
  display_name?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['citext']>;
  id?: InputMaybe<Scalars['bigint']>;
  inviter_id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  joined_as_agent_at?: InputMaybe<Scalars['timestamptz']>;
  last_active_at?: InputMaybe<Scalars['timestamptz']>;
  name?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  phone_country_code?: InputMaybe<Scalars['String']>;
  phone_number?: InputMaybe<Scalars['String']>;
  role?: InputMaybe<Scalars['String']>;
  tokens?: InputMaybe<Scalars['jsonb']>;
  user_created_at?: InputMaybe<Scalars['timestamptz']>;
  verified?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate sum on columns */
export type account_agents_sum_fields = {
  __typename?: 'account_agents_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  availability?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type account_agents_var_pop_fields = {
  __typename?: 'account_agents_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type account_agents_var_samp_fields = {
  __typename?: 'account_agents_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type account_agents_variance_fields = {
  __typename?: 'account_agents_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
};

/** SMTP or Sendgrid configurations for sending email notification */
export type account_email_config = {
  __typename?: 'account_email_config';
  /** An object relationship */
  account: accounts;
  account_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  created_by?: Maybe<account_agents>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  default_email: Scalars['String'];
  default_email_name?: Maybe<Scalars['String']>;
  invitation_email?: Maybe<Scalars['String']>;
  invitation_email_name?: Maybe<Scalars['String']>;
  notification_email?: Maybe<Scalars['String']>;
  notification_email_name?: Maybe<Scalars['String']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider: Scalars['Int'];
  sendgrid_api_key?: Maybe<Scalars['String']>;
  sla_cc_emails?: Maybe<Scalars['String']>;
  sla_to_emails?: Maybe<Scalars['String']>;
  smtp_host_address?: Maybe<Scalars['String']>;
  smtp_password?: Maybe<Scalars['String']>;
  smtp_port?: Maybe<Scalars['Int']>;
  smtp_requires_ssl: Scalars['Boolean'];
  smtp_username?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  updated_by?: Maybe<account_agents>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};

/** aggregated selection of "account_email_config" */
export type account_email_config_aggregate = {
  __typename?: 'account_email_config_aggregate';
  aggregate?: Maybe<account_email_config_aggregate_fields>;
  nodes: Array<account_email_config>;
};

/** aggregate fields of "account_email_config" */
export type account_email_config_aggregate_fields = {
  __typename?: 'account_email_config_aggregate_fields';
  avg?: Maybe<account_email_config_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<account_email_config_max_fields>;
  min?: Maybe<account_email_config_min_fields>;
  stddev?: Maybe<account_email_config_stddev_fields>;
  stddev_pop?: Maybe<account_email_config_stddev_pop_fields>;
  stddev_samp?: Maybe<account_email_config_stddev_samp_fields>;
  sum?: Maybe<account_email_config_sum_fields>;
  var_pop?: Maybe<account_email_config_var_pop_fields>;
  var_samp?: Maybe<account_email_config_var_samp_fields>;
  variance?: Maybe<account_email_config_variance_fields>;
};


/** aggregate fields of "account_email_config" */
export type account_email_config_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<account_email_config_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type account_email_config_avg_fields = {
  __typename?: 'account_email_config_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "account_email_config". All fields are combined with a logical 'AND'. */
export type account_email_config_bool_exp = {
  _and?: InputMaybe<Array<account_email_config_bool_exp>>;
  _not?: InputMaybe<account_email_config_bool_exp>;
  _or?: InputMaybe<Array<account_email_config_bool_exp>>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<Int_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  created_by?: InputMaybe<account_agents_bool_exp>;
  created_by_user_id?: InputMaybe<bigint_comparison_exp>;
  default_email?: InputMaybe<String_comparison_exp>;
  default_email_name?: InputMaybe<String_comparison_exp>;
  invitation_email?: InputMaybe<String_comparison_exp>;
  invitation_email_name?: InputMaybe<String_comparison_exp>;
  notification_email?: InputMaybe<String_comparison_exp>;
  notification_email_name?: InputMaybe<String_comparison_exp>;
  provider?: InputMaybe<Int_comparison_exp>;
  sendgrid_api_key?: InputMaybe<String_comparison_exp>;
  sla_cc_emails?: InputMaybe<String_comparison_exp>;
  sla_to_emails?: InputMaybe<String_comparison_exp>;
  smtp_host_address?: InputMaybe<String_comparison_exp>;
  smtp_password?: InputMaybe<String_comparison_exp>;
  smtp_port?: InputMaybe<Int_comparison_exp>;
  smtp_requires_ssl?: InputMaybe<Boolean_comparison_exp>;
  smtp_username?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  updated_by?: InputMaybe<account_agents_bool_exp>;
  updated_by_user_id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "account_email_config" */
export enum account_email_config_constraint {
  /** unique or primary key constraint on columns "account_id" */
  notification_email_config_pkey = 'notification_email_config_pkey'
}

/** input type for incrementing numeric columns in table "account_email_config" */
export type account_email_config_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: InputMaybe<Scalars['Int']>;
  smtp_port?: InputMaybe<Scalars['Int']>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "account_email_config" */
export type account_email_config_insert_input = {
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<account_agents_obj_rel_insert_input>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  default_email?: InputMaybe<Scalars['String']>;
  default_email_name?: InputMaybe<Scalars['String']>;
  invitation_email?: InputMaybe<Scalars['String']>;
  invitation_email_name?: InputMaybe<Scalars['String']>;
  notification_email?: InputMaybe<Scalars['String']>;
  notification_email_name?: InputMaybe<Scalars['String']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: InputMaybe<Scalars['Int']>;
  sendgrid_api_key?: InputMaybe<Scalars['String']>;
  sla_cc_emails?: InputMaybe<Scalars['String']>;
  sla_to_emails?: InputMaybe<Scalars['String']>;
  smtp_host_address?: InputMaybe<Scalars['String']>;
  smtp_password?: InputMaybe<Scalars['String']>;
  smtp_port?: InputMaybe<Scalars['Int']>;
  smtp_requires_ssl?: InputMaybe<Scalars['Boolean']>;
  smtp_username?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  updated_by?: InputMaybe<account_agents_obj_rel_insert_input>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type account_email_config_max_fields = {
  __typename?: 'account_email_config_max_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  default_email?: Maybe<Scalars['String']>;
  default_email_name?: Maybe<Scalars['String']>;
  invitation_email?: Maybe<Scalars['String']>;
  invitation_email_name?: Maybe<Scalars['String']>;
  notification_email?: Maybe<Scalars['String']>;
  notification_email_name?: Maybe<Scalars['String']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: Maybe<Scalars['Int']>;
  sendgrid_api_key?: Maybe<Scalars['String']>;
  sla_cc_emails?: Maybe<Scalars['String']>;
  sla_to_emails?: Maybe<Scalars['String']>;
  smtp_host_address?: Maybe<Scalars['String']>;
  smtp_password?: Maybe<Scalars['String']>;
  smtp_port?: Maybe<Scalars['Int']>;
  smtp_username?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type account_email_config_min_fields = {
  __typename?: 'account_email_config_min_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  default_email?: Maybe<Scalars['String']>;
  default_email_name?: Maybe<Scalars['String']>;
  invitation_email?: Maybe<Scalars['String']>;
  invitation_email_name?: Maybe<Scalars['String']>;
  notification_email?: Maybe<Scalars['String']>;
  notification_email_name?: Maybe<Scalars['String']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: Maybe<Scalars['Int']>;
  sendgrid_api_key?: Maybe<Scalars['String']>;
  sla_cc_emails?: Maybe<Scalars['String']>;
  sla_to_emails?: Maybe<Scalars['String']>;
  smtp_host_address?: Maybe<Scalars['String']>;
  smtp_password?: Maybe<Scalars['String']>;
  smtp_port?: Maybe<Scalars['Int']>;
  smtp_username?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "account_email_config" */
export type account_email_config_mutation_response = {
  __typename?: 'account_email_config_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<account_email_config>;
};

/** input type for inserting object relation for remote table "account_email_config" */
export type account_email_config_obj_rel_insert_input = {
  data: account_email_config_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<account_email_config_on_conflict>;
};

/** on_conflict condition type for table "account_email_config" */
export type account_email_config_on_conflict = {
  constraint: account_email_config_constraint;
  update_columns?: Array<account_email_config_update_column>;
  where?: InputMaybe<account_email_config_bool_exp>;
};

/** Ordering options when selecting data from "account_email_config". */
export type account_email_config_order_by = {
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by?: InputMaybe<account_agents_order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  default_email?: InputMaybe<order_by>;
  default_email_name?: InputMaybe<order_by>;
  invitation_email?: InputMaybe<order_by>;
  invitation_email_name?: InputMaybe<order_by>;
  notification_email?: InputMaybe<order_by>;
  notification_email_name?: InputMaybe<order_by>;
  provider?: InputMaybe<order_by>;
  sendgrid_api_key?: InputMaybe<order_by>;
  sla_cc_emails?: InputMaybe<order_by>;
  sla_to_emails?: InputMaybe<order_by>;
  smtp_host_address?: InputMaybe<order_by>;
  smtp_password?: InputMaybe<order_by>;
  smtp_port?: InputMaybe<order_by>;
  smtp_requires_ssl?: InputMaybe<order_by>;
  smtp_username?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  updated_by?: InputMaybe<account_agents_order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: account_email_config */
export type account_email_config_pk_columns_input = {
  account_id: Scalars['Int'];
};

/** select columns of table "account_email_config" */
export enum account_email_config_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  default_email = 'default_email',
  /** column name */
  default_email_name = 'default_email_name',
  /** column name */
  invitation_email = 'invitation_email',
  /** column name */
  invitation_email_name = 'invitation_email_name',
  /** column name */
  notification_email = 'notification_email',
  /** column name */
  notification_email_name = 'notification_email_name',
  /** column name */
  provider = 'provider',
  /** column name */
  sendgrid_api_key = 'sendgrid_api_key',
  /** column name */
  sla_cc_emails = 'sla_cc_emails',
  /** column name */
  sla_to_emails = 'sla_to_emails',
  /** column name */
  smtp_host_address = 'smtp_host_address',
  /** column name */
  smtp_password = 'smtp_password',
  /** column name */
  smtp_port = 'smtp_port',
  /** column name */
  smtp_requires_ssl = 'smtp_requires_ssl',
  /** column name */
  smtp_username = 'smtp_username',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  updated_by_user_id = 'updated_by_user_id'
}

/** input type for updating data in table "account_email_config" */
export type account_email_config_set_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  default_email?: InputMaybe<Scalars['String']>;
  default_email_name?: InputMaybe<Scalars['String']>;
  invitation_email?: InputMaybe<Scalars['String']>;
  invitation_email_name?: InputMaybe<Scalars['String']>;
  notification_email?: InputMaybe<Scalars['String']>;
  notification_email_name?: InputMaybe<Scalars['String']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: InputMaybe<Scalars['Int']>;
  sendgrid_api_key?: InputMaybe<Scalars['String']>;
  sla_cc_emails?: InputMaybe<Scalars['String']>;
  sla_to_emails?: InputMaybe<Scalars['String']>;
  smtp_host_address?: InputMaybe<Scalars['String']>;
  smtp_password?: InputMaybe<Scalars['String']>;
  smtp_port?: InputMaybe<Scalars['Int']>;
  smtp_requires_ssl?: InputMaybe<Scalars['Boolean']>;
  smtp_username?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type account_email_config_stddev_fields = {
  __typename?: 'account_email_config_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type account_email_config_stddev_pop_fields = {
  __typename?: 'account_email_config_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type account_email_config_stddev_samp_fields = {
  __typename?: 'account_email_config_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "account_email_config" */
export type account_email_config_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: account_email_config_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type account_email_config_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  default_email?: InputMaybe<Scalars['String']>;
  default_email_name?: InputMaybe<Scalars['String']>;
  invitation_email?: InputMaybe<Scalars['String']>;
  invitation_email_name?: InputMaybe<Scalars['String']>;
  notification_email?: InputMaybe<Scalars['String']>;
  notification_email_name?: InputMaybe<Scalars['String']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: InputMaybe<Scalars['Int']>;
  sendgrid_api_key?: InputMaybe<Scalars['String']>;
  sla_cc_emails?: InputMaybe<Scalars['String']>;
  sla_to_emails?: InputMaybe<Scalars['String']>;
  smtp_host_address?: InputMaybe<Scalars['String']>;
  smtp_password?: InputMaybe<Scalars['String']>;
  smtp_port?: InputMaybe<Scalars['Int']>;
  smtp_requires_ssl?: InputMaybe<Scalars['Boolean']>;
  smtp_username?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type account_email_config_sum_fields = {
  __typename?: 'account_email_config_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: Maybe<Scalars['Int']>;
  smtp_port?: Maybe<Scalars['Int']>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "account_email_config" */
export enum account_email_config_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  default_email = 'default_email',
  /** column name */
  default_email_name = 'default_email_name',
  /** column name */
  invitation_email = 'invitation_email',
  /** column name */
  invitation_email_name = 'invitation_email_name',
  /** column name */
  notification_email = 'notification_email',
  /** column name */
  notification_email_name = 'notification_email_name',
  /** column name */
  provider = 'provider',
  /** column name */
  sendgrid_api_key = 'sendgrid_api_key',
  /** column name */
  sla_cc_emails = 'sla_cc_emails',
  /** column name */
  sla_to_emails = 'sla_to_emails',
  /** column name */
  smtp_host_address = 'smtp_host_address',
  /** column name */
  smtp_password = 'smtp_password',
  /** column name */
  smtp_port = 'smtp_port',
  /** column name */
  smtp_requires_ssl = 'smtp_requires_ssl',
  /** column name */
  smtp_username = 'smtp_username',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  updated_by_user_id = 'updated_by_user_id'
}

export type account_email_config_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<account_email_config_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<account_email_config_set_input>;
  /** filter the rows which have to be updated */
  where: account_email_config_bool_exp;
};

/** aggregate var_pop on columns */
export type account_email_config_var_pop_fields = {
  __typename?: 'account_email_config_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type account_email_config_var_samp_fields = {
  __typename?: 'account_email_config_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type account_email_config_variance_fields = {
  __typename?: 'account_email_config_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  /** 0 - SMTP, 1 - Sendgrid */
  provider?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** Only agents added by administrator for each account are stored here. */
export type account_users = {
  __typename?: 'account_users';
  accept_calls: Scalars['Boolean'];
  /** An object relationship */
  account: accounts;
  account_id: Scalars['bigint'];
  auto_offline: Scalars['Boolean'];
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability: Scalars['Int'];
  avatar_image_key?: Maybe<Scalars['String']>;
  call_agent_password?: Maybe<Scalars['String']>;
  call_agent_username?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  invitation_address?: Maybe<Scalars['String']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  inviter_info?: Maybe<users>;
  is_enabled: Scalars['Boolean'];
  last_active_at?: Maybe<Scalars['timestamptz']>;
  name: Scalars['String'];
  phone_country_code?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  role?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: users;
  user_id: Scalars['bigint'];
  /** An object relationship */
  user_role?: Maybe<user_roles>;
};

/** aggregated selection of "account_users" */
export type account_users_aggregate = {
  __typename?: 'account_users_aggregate';
  aggregate?: Maybe<account_users_aggregate_fields>;
  nodes: Array<account_users>;
};

export type account_users_aggregate_bool_exp = {
  bool_and?: InputMaybe<account_users_aggregate_bool_exp_bool_and>;
  bool_or?: InputMaybe<account_users_aggregate_bool_exp_bool_or>;
  count?: InputMaybe<account_users_aggregate_bool_exp_count>;
};

export type account_users_aggregate_bool_exp_bool_and = {
  arguments: account_users_select_column_account_users_aggregate_bool_exp_bool_and_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<account_users_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type account_users_aggregate_bool_exp_bool_or = {
  arguments: account_users_select_column_account_users_aggregate_bool_exp_bool_or_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<account_users_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type account_users_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<account_users_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<account_users_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "account_users" */
export type account_users_aggregate_fields = {
  __typename?: 'account_users_aggregate_fields';
  avg?: Maybe<account_users_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<account_users_max_fields>;
  min?: Maybe<account_users_min_fields>;
  stddev?: Maybe<account_users_stddev_fields>;
  stddev_pop?: Maybe<account_users_stddev_pop_fields>;
  stddev_samp?: Maybe<account_users_stddev_samp_fields>;
  sum?: Maybe<account_users_sum_fields>;
  var_pop?: Maybe<account_users_var_pop_fields>;
  var_samp?: Maybe<account_users_var_samp_fields>;
  variance?: Maybe<account_users_variance_fields>;
};


/** aggregate fields of "account_users" */
export type account_users_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<account_users_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "account_users" */
export type account_users_aggregate_order_by = {
  avg?: InputMaybe<account_users_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<account_users_max_order_by>;
  min?: InputMaybe<account_users_min_order_by>;
  stddev?: InputMaybe<account_users_stddev_order_by>;
  stddev_pop?: InputMaybe<account_users_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<account_users_stddev_samp_order_by>;
  sum?: InputMaybe<account_users_sum_order_by>;
  var_pop?: InputMaybe<account_users_var_pop_order_by>;
  var_samp?: InputMaybe<account_users_var_samp_order_by>;
  variance?: InputMaybe<account_users_variance_order_by>;
};

/** input type for inserting array relation for remote table "account_users" */
export type account_users_arr_rel_insert_input = {
  data: Array<account_users_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<account_users_on_conflict>;
};

/** aggregate avg on columns */
export type account_users_avg_fields = {
  __typename?: 'account_users_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "account_users" */
export type account_users_avg_order_by = {
  account_id?: InputMaybe<order_by>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inviter_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "account_users". All fields are combined with a logical 'AND'. */
export type account_users_bool_exp = {
  _and?: InputMaybe<Array<account_users_bool_exp>>;
  _not?: InputMaybe<account_users_bool_exp>;
  _or?: InputMaybe<Array<account_users_bool_exp>>;
  accept_calls?: InputMaybe<Boolean_comparison_exp>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  auto_offline?: InputMaybe<Boolean_comparison_exp>;
  availability?: InputMaybe<Int_comparison_exp>;
  avatar_image_key?: InputMaybe<String_comparison_exp>;
  call_agent_password?: InputMaybe<String_comparison_exp>;
  call_agent_username?: InputMaybe<String_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  invitation_address?: InputMaybe<String_comparison_exp>;
  inviter_id?: InputMaybe<bigint_comparison_exp>;
  inviter_info?: InputMaybe<users_bool_exp>;
  is_enabled?: InputMaybe<Boolean_comparison_exp>;
  last_active_at?: InputMaybe<timestamptz_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  phone_country_code?: InputMaybe<String_comparison_exp>;
  phone_number?: InputMaybe<String_comparison_exp>;
  role?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  user?: InputMaybe<users_bool_exp>;
  user_id?: InputMaybe<bigint_comparison_exp>;
  user_role?: InputMaybe<user_roles_bool_exp>;
};

/** unique or primary key constraints on table "account_users" */
export enum account_users_constraint {
  /** unique or primary key constraint on columns "account_id", "user_id" */
  account_users_account_id_user_id_key = 'account_users_account_id_user_id_key',
  /** unique or primary key constraint on columns "id" */
  account_users_pkey = 'account_users_pkey'
}

/** input type for incrementing numeric columns in table "account_users" */
export type account_users_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  inviter_id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "account_users" */
export type account_users_insert_input = {
  accept_calls?: InputMaybe<Scalars['Boolean']>;
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['bigint']>;
  auto_offline?: InputMaybe<Scalars['Boolean']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<Scalars['Int']>;
  avatar_image_key?: InputMaybe<Scalars['String']>;
  call_agent_password?: InputMaybe<Scalars['String']>;
  call_agent_username?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  invitation_address?: InputMaybe<Scalars['String']>;
  inviter_id?: InputMaybe<Scalars['bigint']>;
  inviter_info?: InputMaybe<users_obj_rel_insert_input>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  last_active_at?: InputMaybe<Scalars['timestamptz']>;
  name?: InputMaybe<Scalars['String']>;
  phone_country_code?: InputMaybe<Scalars['String']>;
  phone_number?: InputMaybe<Scalars['String']>;
  role?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<users_obj_rel_insert_input>;
  user_id?: InputMaybe<Scalars['bigint']>;
  user_role?: InputMaybe<user_roles_obj_rel_insert_input>;
};

/** aggregate max on columns */
export type account_users_max_fields = {
  __typename?: 'account_users_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: Maybe<Scalars['Int']>;
  avatar_image_key?: Maybe<Scalars['String']>;
  call_agent_password?: Maybe<Scalars['String']>;
  call_agent_username?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitation_address?: Maybe<Scalars['String']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  last_active_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  phone_country_code?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "account_users" */
export type account_users_max_order_by = {
  account_id?: InputMaybe<order_by>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<order_by>;
  avatar_image_key?: InputMaybe<order_by>;
  call_agent_password?: InputMaybe<order_by>;
  call_agent_username?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  invitation_address?: InputMaybe<order_by>;
  inviter_id?: InputMaybe<order_by>;
  last_active_at?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  phone_country_code?: InputMaybe<order_by>;
  phone_number?: InputMaybe<order_by>;
  role?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type account_users_min_fields = {
  __typename?: 'account_users_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: Maybe<Scalars['Int']>;
  avatar_image_key?: Maybe<Scalars['String']>;
  call_agent_password?: Maybe<Scalars['String']>;
  call_agent_username?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitation_address?: Maybe<Scalars['String']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  last_active_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  phone_country_code?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "account_users" */
export type account_users_min_order_by = {
  account_id?: InputMaybe<order_by>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<order_by>;
  avatar_image_key?: InputMaybe<order_by>;
  call_agent_password?: InputMaybe<order_by>;
  call_agent_username?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  invitation_address?: InputMaybe<order_by>;
  inviter_id?: InputMaybe<order_by>;
  last_active_at?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  phone_country_code?: InputMaybe<order_by>;
  phone_number?: InputMaybe<order_by>;
  role?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** response of any mutation on the table "account_users" */
export type account_users_mutation_response = {
  __typename?: 'account_users_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<account_users>;
};

/** on_conflict condition type for table "account_users" */
export type account_users_on_conflict = {
  constraint: account_users_constraint;
  update_columns?: Array<account_users_update_column>;
  where?: InputMaybe<account_users_bool_exp>;
};

/** Ordering options when selecting data from "account_users". */
export type account_users_order_by = {
  accept_calls?: InputMaybe<order_by>;
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  auto_offline?: InputMaybe<order_by>;
  availability?: InputMaybe<order_by>;
  avatar_image_key?: InputMaybe<order_by>;
  call_agent_password?: InputMaybe<order_by>;
  call_agent_username?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  invitation_address?: InputMaybe<order_by>;
  inviter_id?: InputMaybe<order_by>;
  inviter_info?: InputMaybe<users_order_by>;
  is_enabled?: InputMaybe<order_by>;
  last_active_at?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  phone_country_code?: InputMaybe<order_by>;
  phone_number?: InputMaybe<order_by>;
  role?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user?: InputMaybe<users_order_by>;
  user_id?: InputMaybe<order_by>;
  user_role?: InputMaybe<user_roles_order_by>;
};

/** primary key columns input for table: account_users */
export type account_users_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "account_users" */
export enum account_users_select_column {
  /** column name */
  accept_calls = 'accept_calls',
  /** column name */
  account_id = 'account_id',
  /** column name */
  auto_offline = 'auto_offline',
  /** column name */
  availability = 'availability',
  /** column name */
  avatar_image_key = 'avatar_image_key',
  /** column name */
  call_agent_password = 'call_agent_password',
  /** column name */
  call_agent_username = 'call_agent_username',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  invitation_address = 'invitation_address',
  /** column name */
  inviter_id = 'inviter_id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  last_active_at = 'last_active_at',
  /** column name */
  name = 'name',
  /** column name */
  phone_country_code = 'phone_country_code',
  /** column name */
  phone_number = 'phone_number',
  /** column name */
  role = 'role',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

/** select "account_users_aggregate_bool_exp_bool_and_arguments_columns" columns of table "account_users" */
export enum account_users_select_column_account_users_aggregate_bool_exp_bool_and_arguments_columns {
  /** column name */
  accept_calls = 'accept_calls',
  /** column name */
  auto_offline = 'auto_offline',
  /** column name */
  is_enabled = 'is_enabled'
}

/** select "account_users_aggregate_bool_exp_bool_or_arguments_columns" columns of table "account_users" */
export enum account_users_select_column_account_users_aggregate_bool_exp_bool_or_arguments_columns {
  /** column name */
  accept_calls = 'accept_calls',
  /** column name */
  auto_offline = 'auto_offline',
  /** column name */
  is_enabled = 'is_enabled'
}

/** input type for updating data in table "account_users" */
export type account_users_set_input = {
  accept_calls?: InputMaybe<Scalars['Boolean']>;
  account_id?: InputMaybe<Scalars['bigint']>;
  auto_offline?: InputMaybe<Scalars['Boolean']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<Scalars['Int']>;
  avatar_image_key?: InputMaybe<Scalars['String']>;
  call_agent_password?: InputMaybe<Scalars['String']>;
  call_agent_username?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  invitation_address?: InputMaybe<Scalars['String']>;
  inviter_id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  last_active_at?: InputMaybe<Scalars['timestamptz']>;
  name?: InputMaybe<Scalars['String']>;
  phone_country_code?: InputMaybe<Scalars['String']>;
  phone_number?: InputMaybe<Scalars['String']>;
  role?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type account_users_stddev_fields = {
  __typename?: 'account_users_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "account_users" */
export type account_users_stddev_order_by = {
  account_id?: InputMaybe<order_by>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inviter_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type account_users_stddev_pop_fields = {
  __typename?: 'account_users_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "account_users" */
export type account_users_stddev_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inviter_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type account_users_stddev_samp_fields = {
  __typename?: 'account_users_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "account_users" */
export type account_users_stddev_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inviter_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "account_users" */
export type account_users_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: account_users_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type account_users_stream_cursor_value_input = {
  accept_calls?: InputMaybe<Scalars['Boolean']>;
  account_id?: InputMaybe<Scalars['bigint']>;
  auto_offline?: InputMaybe<Scalars['Boolean']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<Scalars['Int']>;
  avatar_image_key?: InputMaybe<Scalars['String']>;
  call_agent_password?: InputMaybe<Scalars['String']>;
  call_agent_username?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  invitation_address?: InputMaybe<Scalars['String']>;
  inviter_id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  last_active_at?: InputMaybe<Scalars['timestamptz']>;
  name?: InputMaybe<Scalars['String']>;
  phone_country_code?: InputMaybe<Scalars['String']>;
  phone_number?: InputMaybe<Scalars['String']>;
  role?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type account_users_sum_fields = {
  __typename?: 'account_users_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "account_users" */
export type account_users_sum_order_by = {
  account_id?: InputMaybe<order_by>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inviter_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** update columns of table "account_users" */
export enum account_users_update_column {
  /** column name */
  accept_calls = 'accept_calls',
  /** column name */
  account_id = 'account_id',
  /** column name */
  auto_offline = 'auto_offline',
  /** column name */
  availability = 'availability',
  /** column name */
  avatar_image_key = 'avatar_image_key',
  /** column name */
  call_agent_password = 'call_agent_password',
  /** column name */
  call_agent_username = 'call_agent_username',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  invitation_address = 'invitation_address',
  /** column name */
  inviter_id = 'inviter_id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  last_active_at = 'last_active_at',
  /** column name */
  name = 'name',
  /** column name */
  phone_country_code = 'phone_country_code',
  /** column name */
  phone_number = 'phone_number',
  /** column name */
  role = 'role',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

export type account_users_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<account_users_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<account_users_set_input>;
  /** filter the rows which have to be updated */
  where: account_users_bool_exp;
};

/** aggregate var_pop on columns */
export type account_users_var_pop_fields = {
  __typename?: 'account_users_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "account_users" */
export type account_users_var_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inviter_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type account_users_var_samp_fields = {
  __typename?: 'account_users_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "account_users" */
export type account_users_var_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inviter_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type account_users_variance_fields = {
  __typename?: 'account_users_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "account_users" */
export type account_users_variance_order_by = {
  account_id?: InputMaybe<order_by>;
  /** user status: 0 - offline, 1 - online, 2 - busy, 3 - break */
  availability?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inviter_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Main organization account details */
export type accounts = {
  __typename?: 'accounts';
  /** An array relationship */
  account_users: Array<account_users>;
  /** An aggregate relationship */
  account_users_aggregate: account_users_aggregate;
  created_at: Scalars['timestamptz'];
  domain?: Maybe<Scalars['String']>;
  /** An object relationship */
  email_config?: Maybe<account_email_config>;
  id: Scalars['Int'];
  name: Scalars['String'];
  /** An array relationship */
  teams: Array<teams>;
  /** An aggregate relationship */
  teams_aggregate: teams_aggregate;
  /** An array relationship */
  tickets: Array<ticket>;
  /** An aggregate relationship */
  tickets_aggregate: ticket_aggregate;
  updated_at: Scalars['timestamptz'];
};


/** Main organization account details */
export type accountsaccount_usersArgs = {
  distinct_on?: InputMaybe<Array<account_users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_users_order_by>>;
  where?: InputMaybe<account_users_bool_exp>;
};


/** Main organization account details */
export type accountsaccount_users_aggregateArgs = {
  distinct_on?: InputMaybe<Array<account_users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_users_order_by>>;
  where?: InputMaybe<account_users_bool_exp>;
};


/** Main organization account details */
export type accountsteamsArgs = {
  distinct_on?: InputMaybe<Array<teams_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<teams_order_by>>;
  where?: InputMaybe<teams_bool_exp>;
};


/** Main organization account details */
export type accountsteams_aggregateArgs = {
  distinct_on?: InputMaybe<Array<teams_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<teams_order_by>>;
  where?: InputMaybe<teams_bool_exp>;
};


/** Main organization account details */
export type accountsticketsArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};


/** Main organization account details */
export type accountstickets_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};

/** aggregated selection of "accounts" */
export type accounts_aggregate = {
  __typename?: 'accounts_aggregate';
  aggregate?: Maybe<accounts_aggregate_fields>;
  nodes: Array<accounts>;
};

/** aggregate fields of "accounts" */
export type accounts_aggregate_fields = {
  __typename?: 'accounts_aggregate_fields';
  avg?: Maybe<accounts_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<accounts_max_fields>;
  min?: Maybe<accounts_min_fields>;
  stddev?: Maybe<accounts_stddev_fields>;
  stddev_pop?: Maybe<accounts_stddev_pop_fields>;
  stddev_samp?: Maybe<accounts_stddev_samp_fields>;
  sum?: Maybe<accounts_sum_fields>;
  var_pop?: Maybe<accounts_var_pop_fields>;
  var_samp?: Maybe<accounts_var_samp_fields>;
  variance?: Maybe<accounts_variance_fields>;
};


/** aggregate fields of "accounts" */
export type accounts_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<accounts_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type accounts_avg_fields = {
  __typename?: 'accounts_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "accounts". All fields are combined with a logical 'AND'. */
export type accounts_bool_exp = {
  _and?: InputMaybe<Array<accounts_bool_exp>>;
  _not?: InputMaybe<accounts_bool_exp>;
  _or?: InputMaybe<Array<accounts_bool_exp>>;
  account_users?: InputMaybe<account_users_bool_exp>;
  account_users_aggregate?: InputMaybe<account_users_aggregate_bool_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  domain?: InputMaybe<String_comparison_exp>;
  email_config?: InputMaybe<account_email_config_bool_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  teams?: InputMaybe<teams_bool_exp>;
  teams_aggregate?: InputMaybe<teams_aggregate_bool_exp>;
  tickets?: InputMaybe<ticket_bool_exp>;
  tickets_aggregate?: InputMaybe<ticket_aggregate_bool_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "accounts" */
export enum accounts_constraint {
  /** unique or primary key constraint on columns "id" */
  accounts_pkey = 'accounts_pkey'
}

/** input type for incrementing numeric columns in table "accounts" */
export type accounts_inc_input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "accounts" */
export type accounts_insert_input = {
  account_users?: InputMaybe<account_users_arr_rel_insert_input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  domain?: InputMaybe<Scalars['String']>;
  email_config?: InputMaybe<account_email_config_obj_rel_insert_input>;
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  teams?: InputMaybe<teams_arr_rel_insert_input>;
  tickets?: InputMaybe<ticket_arr_rel_insert_input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type accounts_max_fields = {
  __typename?: 'accounts_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  domain?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type accounts_min_fields = {
  __typename?: 'accounts_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  domain?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "accounts" */
export type accounts_mutation_response = {
  __typename?: 'accounts_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<accounts>;
};

/** input type for inserting object relation for remote table "accounts" */
export type accounts_obj_rel_insert_input = {
  data: accounts_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<accounts_on_conflict>;
};

/** on_conflict condition type for table "accounts" */
export type accounts_on_conflict = {
  constraint: accounts_constraint;
  update_columns?: Array<accounts_update_column>;
  where?: InputMaybe<accounts_bool_exp>;
};

/** Ordering options when selecting data from "accounts". */
export type accounts_order_by = {
  account_users_aggregate?: InputMaybe<account_users_aggregate_order_by>;
  created_at?: InputMaybe<order_by>;
  domain?: InputMaybe<order_by>;
  email_config?: InputMaybe<account_email_config_order_by>;
  id?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  teams_aggregate?: InputMaybe<teams_aggregate_order_by>;
  tickets_aggregate?: InputMaybe<ticket_aggregate_order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: accounts */
export type accounts_pk_columns_input = {
  id: Scalars['Int'];
};

/** select columns of table "accounts" */
export enum accounts_select_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  domain = 'domain',
  /** column name */
  id = 'id',
  /** column name */
  name = 'name',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "accounts" */
export type accounts_set_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  domain?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type accounts_stddev_fields = {
  __typename?: 'accounts_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type accounts_stddev_pop_fields = {
  __typename?: 'accounts_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type accounts_stddev_samp_fields = {
  __typename?: 'accounts_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "accounts" */
export type accounts_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: accounts_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type accounts_stream_cursor_value_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  domain?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type accounts_sum_fields = {
  __typename?: 'accounts_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "accounts" */
export enum accounts_update_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  domain = 'domain',
  /** column name */
  id = 'id',
  /** column name */
  name = 'name',
  /** column name */
  updated_at = 'updated_at'
}

export type accounts_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<accounts_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<accounts_set_input>;
  /** filter the rows which have to be updated */
  where: accounts_bool_exp;
};

/** aggregate var_pop on columns */
export type accounts_var_pop_fields = {
  __typename?: 'accounts_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type accounts_var_samp_fields = {
  __typename?: 'accounts_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type accounts_variance_fields = {
  __typename?: 'accounts_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "article_tags" */
export type article_tags = {
  __typename?: 'article_tags';
  article_id: Scalars['bigint'];
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  /** An object relationship */
  knowledge_base_article: knowledge_base_articles;
  /** An object relationship */
  tag: tags;
  tag_id: Scalars['bigint'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "article_tags" */
export type article_tags_aggregate = {
  __typename?: 'article_tags_aggregate';
  aggregate?: Maybe<article_tags_aggregate_fields>;
  nodes: Array<article_tags>;
};

/** aggregate fields of "article_tags" */
export type article_tags_aggregate_fields = {
  __typename?: 'article_tags_aggregate_fields';
  avg?: Maybe<article_tags_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<article_tags_max_fields>;
  min?: Maybe<article_tags_min_fields>;
  stddev?: Maybe<article_tags_stddev_fields>;
  stddev_pop?: Maybe<article_tags_stddev_pop_fields>;
  stddev_samp?: Maybe<article_tags_stddev_samp_fields>;
  sum?: Maybe<article_tags_sum_fields>;
  var_pop?: Maybe<article_tags_var_pop_fields>;
  var_samp?: Maybe<article_tags_var_samp_fields>;
  variance?: Maybe<article_tags_variance_fields>;
};


/** aggregate fields of "article_tags" */
export type article_tags_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<article_tags_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type article_tags_avg_fields = {
  __typename?: 'article_tags_avg_fields';
  article_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "article_tags". All fields are combined with a logical 'AND'. */
export type article_tags_bool_exp = {
  _and?: InputMaybe<Array<article_tags_bool_exp>>;
  _not?: InputMaybe<article_tags_bool_exp>;
  _or?: InputMaybe<Array<article_tags_bool_exp>>;
  article_id?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  knowledge_base_article?: InputMaybe<knowledge_base_articles_bool_exp>;
  tag?: InputMaybe<tags_bool_exp>;
  tag_id?: InputMaybe<bigint_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "article_tags" */
export enum article_tags_constraint {
  /** unique or primary key constraint on columns "article_id", "tag_id" */
  article_tags_article_id_tag_id_key = 'article_tags_article_id_tag_id_key',
  /** unique or primary key constraint on columns "id" */
  article_tags_pkey = 'article_tags_pkey'
}

/** input type for incrementing numeric columns in table "article_tags" */
export type article_tags_inc_input = {
  article_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "article_tags" */
export type article_tags_insert_input = {
  article_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  knowledge_base_article?: InputMaybe<knowledge_base_articles_obj_rel_insert_input>;
  tag?: InputMaybe<tags_obj_rel_insert_input>;
  tag_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type article_tags_max_fields = {
  __typename?: 'article_tags_max_fields';
  article_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  tag_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type article_tags_min_fields = {
  __typename?: 'article_tags_min_fields';
  article_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  tag_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "article_tags" */
export type article_tags_mutation_response = {
  __typename?: 'article_tags_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<article_tags>;
};

/** on_conflict condition type for table "article_tags" */
export type article_tags_on_conflict = {
  constraint: article_tags_constraint;
  update_columns?: Array<article_tags_update_column>;
  where?: InputMaybe<article_tags_bool_exp>;
};

/** Ordering options when selecting data from "article_tags". */
export type article_tags_order_by = {
  article_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  knowledge_base_article?: InputMaybe<knowledge_base_articles_order_by>;
  tag?: InputMaybe<tags_order_by>;
  tag_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: article_tags */
export type article_tags_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "article_tags" */
export enum article_tags_select_column {
  /** column name */
  article_id = 'article_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  tag_id = 'tag_id',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "article_tags" */
export type article_tags_set_input = {
  article_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type article_tags_stddev_fields = {
  __typename?: 'article_tags_stddev_fields';
  article_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type article_tags_stddev_pop_fields = {
  __typename?: 'article_tags_stddev_pop_fields';
  article_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type article_tags_stddev_samp_fields = {
  __typename?: 'article_tags_stddev_samp_fields';
  article_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "article_tags" */
export type article_tags_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: article_tags_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type article_tags_stream_cursor_value_input = {
  article_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type article_tags_sum_fields = {
  __typename?: 'article_tags_sum_fields';
  article_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  tag_id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "article_tags" */
export enum article_tags_update_column {
  /** column name */
  article_id = 'article_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  tag_id = 'tag_id',
  /** column name */
  updated_at = 'updated_at'
}

export type article_tags_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<article_tags_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<article_tags_set_input>;
  /** filter the rows which have to be updated */
  where: article_tags_bool_exp;
};

/** aggregate var_pop on columns */
export type article_tags_var_pop_fields = {
  __typename?: 'article_tags_var_pop_fields';
  article_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type article_tags_var_samp_fields = {
  __typename?: 'article_tags_var_samp_fields';
  article_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type article_tags_variance_fields = {
  __typename?: 'article_tags_variance_fields';
  article_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** All types of attachment details are stored here */
export type attachments = {
  __typename?: 'attachments';
  byte_size?: Maybe<Scalars['bigint']>;
  created_at: Scalars['timestamptz'];
  extension?: Maybe<Scalars['String']>;
  file_name?: Maybe<Scalars['String']>;
  /** image, video, audio */
  file_type?: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  key?: Maybe<Scalars['String']>;
  /** A computed field, executes function "generate_attachment_url" */
  media_url?: Maybe<Scalars['String']>;
  /** An object relationship */
  message?: Maybe<messages>;
  message_id?: Maybe<Scalars['Int']>;
  mime_type?: Maybe<Scalars['String']>;
  /** An object relationship */
  ticket_message?: Maybe<ticket_messages>;
  ticket_message_id?: Maybe<Scalars['bigint']>;
  updated_at: Scalars['timestamptz'];
  url?: Maybe<Scalars['String']>;
};

/** aggregated selection of "attachments" */
export type attachments_aggregate = {
  __typename?: 'attachments_aggregate';
  aggregate?: Maybe<attachments_aggregate_fields>;
  nodes: Array<attachments>;
};

export type attachments_aggregate_bool_exp = {
  count?: InputMaybe<attachments_aggregate_bool_exp_count>;
};

export type attachments_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<attachments_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<attachments_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "attachments" */
export type attachments_aggregate_fields = {
  __typename?: 'attachments_aggregate_fields';
  avg?: Maybe<attachments_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<attachments_max_fields>;
  min?: Maybe<attachments_min_fields>;
  stddev?: Maybe<attachments_stddev_fields>;
  stddev_pop?: Maybe<attachments_stddev_pop_fields>;
  stddev_samp?: Maybe<attachments_stddev_samp_fields>;
  sum?: Maybe<attachments_sum_fields>;
  var_pop?: Maybe<attachments_var_pop_fields>;
  var_samp?: Maybe<attachments_var_samp_fields>;
  variance?: Maybe<attachments_variance_fields>;
};


/** aggregate fields of "attachments" */
export type attachments_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<attachments_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "attachments" */
export type attachments_aggregate_order_by = {
  avg?: InputMaybe<attachments_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<attachments_max_order_by>;
  min?: InputMaybe<attachments_min_order_by>;
  stddev?: InputMaybe<attachments_stddev_order_by>;
  stddev_pop?: InputMaybe<attachments_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<attachments_stddev_samp_order_by>;
  sum?: InputMaybe<attachments_sum_order_by>;
  var_pop?: InputMaybe<attachments_var_pop_order_by>;
  var_samp?: InputMaybe<attachments_var_samp_order_by>;
  variance?: InputMaybe<attachments_variance_order_by>;
};

/** input type for inserting array relation for remote table "attachments" */
export type attachments_arr_rel_insert_input = {
  data: Array<attachments_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<attachments_on_conflict>;
};

/** aggregate avg on columns */
export type attachments_avg_fields = {
  __typename?: 'attachments_avg_fields';
  byte_size?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  ticket_message_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "attachments" */
export type attachments_avg_order_by = {
  byte_size?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  ticket_message_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "attachments". All fields are combined with a logical 'AND'. */
export type attachments_bool_exp = {
  _and?: InputMaybe<Array<attachments_bool_exp>>;
  _not?: InputMaybe<attachments_bool_exp>;
  _or?: InputMaybe<Array<attachments_bool_exp>>;
  byte_size?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  extension?: InputMaybe<String_comparison_exp>;
  file_name?: InputMaybe<String_comparison_exp>;
  file_type?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  key?: InputMaybe<String_comparison_exp>;
  media_url?: InputMaybe<String_comparison_exp>;
  message?: InputMaybe<messages_bool_exp>;
  message_id?: InputMaybe<Int_comparison_exp>;
  mime_type?: InputMaybe<String_comparison_exp>;
  ticket_message?: InputMaybe<ticket_messages_bool_exp>;
  ticket_message_id?: InputMaybe<bigint_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  url?: InputMaybe<String_comparison_exp>;
};

/** unique or primary key constraints on table "attachments" */
export enum attachments_constraint {
  /** unique or primary key constraint on columns "id" */
  attachments_pkey = 'attachments_pkey'
}

/** input type for incrementing numeric columns in table "attachments" */
export type attachments_inc_input = {
  byte_size?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  message_id?: InputMaybe<Scalars['Int']>;
  ticket_message_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "attachments" */
export type attachments_insert_input = {
  byte_size?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  extension?: InputMaybe<Scalars['String']>;
  file_name?: InputMaybe<Scalars['String']>;
  /** image, video, audio */
  file_type?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  key?: InputMaybe<Scalars['String']>;
  message?: InputMaybe<messages_obj_rel_insert_input>;
  message_id?: InputMaybe<Scalars['Int']>;
  mime_type?: InputMaybe<Scalars['String']>;
  ticket_message?: InputMaybe<ticket_messages_obj_rel_insert_input>;
  ticket_message_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  url?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type attachments_max_fields = {
  __typename?: 'attachments_max_fields';
  byte_size?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  extension?: Maybe<Scalars['String']>;
  file_name?: Maybe<Scalars['String']>;
  /** image, video, audio */
  file_type?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  key?: Maybe<Scalars['String']>;
  /** A computed field, executes function "generate_attachment_url" */
  media_url?: Maybe<Scalars['String']>;
  message_id?: Maybe<Scalars['Int']>;
  mime_type?: Maybe<Scalars['String']>;
  ticket_message_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "attachments" */
export type attachments_max_order_by = {
  byte_size?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  extension?: InputMaybe<order_by>;
  file_name?: InputMaybe<order_by>;
  /** image, video, audio */
  file_type?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  key?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  mime_type?: InputMaybe<order_by>;
  ticket_message_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  url?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type attachments_min_fields = {
  __typename?: 'attachments_min_fields';
  byte_size?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  extension?: Maybe<Scalars['String']>;
  file_name?: Maybe<Scalars['String']>;
  /** image, video, audio */
  file_type?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  key?: Maybe<Scalars['String']>;
  /** A computed field, executes function "generate_attachment_url" */
  media_url?: Maybe<Scalars['String']>;
  message_id?: Maybe<Scalars['Int']>;
  mime_type?: Maybe<Scalars['String']>;
  ticket_message_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "attachments" */
export type attachments_min_order_by = {
  byte_size?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  extension?: InputMaybe<order_by>;
  file_name?: InputMaybe<order_by>;
  /** image, video, audio */
  file_type?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  key?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  mime_type?: InputMaybe<order_by>;
  ticket_message_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  url?: InputMaybe<order_by>;
};

/** response of any mutation on the table "attachments" */
export type attachments_mutation_response = {
  __typename?: 'attachments_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<attachments>;
};

/** on_conflict condition type for table "attachments" */
export type attachments_on_conflict = {
  constraint: attachments_constraint;
  update_columns?: Array<attachments_update_column>;
  where?: InputMaybe<attachments_bool_exp>;
};

/** Ordering options when selecting data from "attachments". */
export type attachments_order_by = {
  byte_size?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  extension?: InputMaybe<order_by>;
  file_name?: InputMaybe<order_by>;
  file_type?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  key?: InputMaybe<order_by>;
  media_url?: InputMaybe<order_by>;
  message?: InputMaybe<messages_order_by>;
  message_id?: InputMaybe<order_by>;
  mime_type?: InputMaybe<order_by>;
  ticket_message?: InputMaybe<ticket_messages_order_by>;
  ticket_message_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  url?: InputMaybe<order_by>;
};

/** primary key columns input for table: attachments */
export type attachments_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "attachments" */
export enum attachments_select_column {
  /** column name */
  byte_size = 'byte_size',
  /** column name */
  created_at = 'created_at',
  /** column name */
  extension = 'extension',
  /** column name */
  file_name = 'file_name',
  /** column name */
  file_type = 'file_type',
  /** column name */
  id = 'id',
  /** column name */
  key = 'key',
  /** column name */
  message_id = 'message_id',
  /** column name */
  mime_type = 'mime_type',
  /** column name */
  ticket_message_id = 'ticket_message_id',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  url = 'url'
}

/** input type for updating data in table "attachments" */
export type attachments_set_input = {
  byte_size?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  extension?: InputMaybe<Scalars['String']>;
  file_name?: InputMaybe<Scalars['String']>;
  /** image, video, audio */
  file_type?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  key?: InputMaybe<Scalars['String']>;
  message_id?: InputMaybe<Scalars['Int']>;
  mime_type?: InputMaybe<Scalars['String']>;
  ticket_message_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  url?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type attachments_stddev_fields = {
  __typename?: 'attachments_stddev_fields';
  byte_size?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  ticket_message_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "attachments" */
export type attachments_stddev_order_by = {
  byte_size?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  ticket_message_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type attachments_stddev_pop_fields = {
  __typename?: 'attachments_stddev_pop_fields';
  byte_size?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  ticket_message_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "attachments" */
export type attachments_stddev_pop_order_by = {
  byte_size?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  ticket_message_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type attachments_stddev_samp_fields = {
  __typename?: 'attachments_stddev_samp_fields';
  byte_size?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  ticket_message_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "attachments" */
export type attachments_stddev_samp_order_by = {
  byte_size?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  ticket_message_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "attachments" */
export type attachments_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: attachments_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type attachments_stream_cursor_value_input = {
  byte_size?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  extension?: InputMaybe<Scalars['String']>;
  file_name?: InputMaybe<Scalars['String']>;
  /** image, video, audio */
  file_type?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  key?: InputMaybe<Scalars['String']>;
  message_id?: InputMaybe<Scalars['Int']>;
  mime_type?: InputMaybe<Scalars['String']>;
  ticket_message_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  url?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type attachments_sum_fields = {
  __typename?: 'attachments_sum_fields';
  byte_size?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  message_id?: Maybe<Scalars['Int']>;
  ticket_message_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "attachments" */
export type attachments_sum_order_by = {
  byte_size?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  ticket_message_id?: InputMaybe<order_by>;
};

/** update columns of table "attachments" */
export enum attachments_update_column {
  /** column name */
  byte_size = 'byte_size',
  /** column name */
  created_at = 'created_at',
  /** column name */
  extension = 'extension',
  /** column name */
  file_name = 'file_name',
  /** column name */
  file_type = 'file_type',
  /** column name */
  id = 'id',
  /** column name */
  key = 'key',
  /** column name */
  message_id = 'message_id',
  /** column name */
  mime_type = 'mime_type',
  /** column name */
  ticket_message_id = 'ticket_message_id',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  url = 'url'
}

export type attachments_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<attachments_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<attachments_set_input>;
  /** filter the rows which have to be updated */
  where: attachments_bool_exp;
};

/** aggregate var_pop on columns */
export type attachments_var_pop_fields = {
  __typename?: 'attachments_var_pop_fields';
  byte_size?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  ticket_message_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "attachments" */
export type attachments_var_pop_order_by = {
  byte_size?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  ticket_message_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type attachments_var_samp_fields = {
  __typename?: 'attachments_var_samp_fields';
  byte_size?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  ticket_message_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "attachments" */
export type attachments_var_samp_order_by = {
  byte_size?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  ticket_message_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type attachments_variance_fields = {
  __typename?: 'attachments_variance_fields';
  byte_size?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  ticket_message_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "attachments" */
export type attachments_variance_order_by = {
  byte_size?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  ticket_message_id?: InputMaybe<order_by>;
};

/** columns and relationships of "automation_flow_categories" */
export type automation_flow_categories = {
  __typename?: 'automation_flow_categories';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  name: Scalars['String'];
};

/** aggregated selection of "automation_flow_categories" */
export type automation_flow_categories_aggregate = {
  __typename?: 'automation_flow_categories_aggregate';
  aggregate?: Maybe<automation_flow_categories_aggregate_fields>;
  nodes: Array<automation_flow_categories>;
};

/** aggregate fields of "automation_flow_categories" */
export type automation_flow_categories_aggregate_fields = {
  __typename?: 'automation_flow_categories_aggregate_fields';
  avg?: Maybe<automation_flow_categories_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<automation_flow_categories_max_fields>;
  min?: Maybe<automation_flow_categories_min_fields>;
  stddev?: Maybe<automation_flow_categories_stddev_fields>;
  stddev_pop?: Maybe<automation_flow_categories_stddev_pop_fields>;
  stddev_samp?: Maybe<automation_flow_categories_stddev_samp_fields>;
  sum?: Maybe<automation_flow_categories_sum_fields>;
  var_pop?: Maybe<automation_flow_categories_var_pop_fields>;
  var_samp?: Maybe<automation_flow_categories_var_samp_fields>;
  variance?: Maybe<automation_flow_categories_variance_fields>;
};


/** aggregate fields of "automation_flow_categories" */
export type automation_flow_categories_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<automation_flow_categories_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type automation_flow_categories_avg_fields = {
  __typename?: 'automation_flow_categories_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "automation_flow_categories". All fields are combined with a logical 'AND'. */
export type automation_flow_categories_bool_exp = {
  _and?: InputMaybe<Array<automation_flow_categories_bool_exp>>;
  _not?: InputMaybe<automation_flow_categories_bool_exp>;
  _or?: InputMaybe<Array<automation_flow_categories_bool_exp>>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
};

/** unique or primary key constraints on table "automation_flow_categories" */
export enum automation_flow_categories_constraint {
  /** unique or primary key constraint on columns "name" */
  automation_flow_category_name_key = 'automation_flow_category_name_key',
  /** unique or primary key constraint on columns "id" */
  automation_flow_category_pkey = 'automation_flow_category_pkey'
}

/** input type for incrementing numeric columns in table "automation_flow_categories" */
export type automation_flow_categories_inc_input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "automation_flow_categories" */
export type automation_flow_categories_insert_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type automation_flow_categories_max_fields = {
  __typename?: 'automation_flow_categories_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type automation_flow_categories_min_fields = {
  __typename?: 'automation_flow_categories_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "automation_flow_categories" */
export type automation_flow_categories_mutation_response = {
  __typename?: 'automation_flow_categories_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<automation_flow_categories>;
};

/** input type for inserting object relation for remote table "automation_flow_categories" */
export type automation_flow_categories_obj_rel_insert_input = {
  data: automation_flow_categories_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<automation_flow_categories_on_conflict>;
};

/** on_conflict condition type for table "automation_flow_categories" */
export type automation_flow_categories_on_conflict = {
  constraint: automation_flow_categories_constraint;
  update_columns?: Array<automation_flow_categories_update_column>;
  where?: InputMaybe<automation_flow_categories_bool_exp>;
};

/** Ordering options when selecting data from "automation_flow_categories". */
export type automation_flow_categories_order_by = {
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
};

/** primary key columns input for table: automation_flow_categories */
export type automation_flow_categories_pk_columns_input = {
  id: Scalars['Int'];
};

/** select columns of table "automation_flow_categories" */
export enum automation_flow_categories_select_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  name = 'name'
}

/** input type for updating data in table "automation_flow_categories" */
export type automation_flow_categories_set_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type automation_flow_categories_stddev_fields = {
  __typename?: 'automation_flow_categories_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type automation_flow_categories_stddev_pop_fields = {
  __typename?: 'automation_flow_categories_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type automation_flow_categories_stddev_samp_fields = {
  __typename?: 'automation_flow_categories_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "automation_flow_categories" */
export type automation_flow_categories_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: automation_flow_categories_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type automation_flow_categories_stream_cursor_value_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type automation_flow_categories_sum_fields = {
  __typename?: 'automation_flow_categories_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "automation_flow_categories" */
export enum automation_flow_categories_update_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  name = 'name'
}

export type automation_flow_categories_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<automation_flow_categories_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<automation_flow_categories_set_input>;
  /** filter the rows which have to be updated */
  where: automation_flow_categories_bool_exp;
};

/** aggregate var_pop on columns */
export type automation_flow_categories_var_pop_fields = {
  __typename?: 'automation_flow_categories_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type automation_flow_categories_var_samp_fields = {
  __typename?: 'automation_flow_categories_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type automation_flow_categories_variance_fields = {
  __typename?: 'automation_flow_categories_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "automation_flows" */
export type automation_flows = {
  __typename?: 'automation_flows';
  account_id: Scalars['Int'];
  /** An object relationship */
  category: automation_flow_categories;
  category_id: Scalars['Int'];
  configuration: Scalars['jsonb'];
  created_at: Scalars['timestamptz'];
  created_by_agent_id: Scalars['Int'];
  id: Scalars['Int'];
};


/** columns and relationships of "automation_flows" */
export type automation_flowsconfigurationArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "automation_flows" */
export type automation_flows_aggregate = {
  __typename?: 'automation_flows_aggregate';
  aggregate?: Maybe<automation_flows_aggregate_fields>;
  nodes: Array<automation_flows>;
};

/** aggregate fields of "automation_flows" */
export type automation_flows_aggregate_fields = {
  __typename?: 'automation_flows_aggregate_fields';
  avg?: Maybe<automation_flows_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<automation_flows_max_fields>;
  min?: Maybe<automation_flows_min_fields>;
  stddev?: Maybe<automation_flows_stddev_fields>;
  stddev_pop?: Maybe<automation_flows_stddev_pop_fields>;
  stddev_samp?: Maybe<automation_flows_stddev_samp_fields>;
  sum?: Maybe<automation_flows_sum_fields>;
  var_pop?: Maybe<automation_flows_var_pop_fields>;
  var_samp?: Maybe<automation_flows_var_samp_fields>;
  variance?: Maybe<automation_flows_variance_fields>;
};


/** aggregate fields of "automation_flows" */
export type automation_flows_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<automation_flows_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type automation_flows_append_input = {
  configuration?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type automation_flows_avg_fields = {
  __typename?: 'automation_flows_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "automation_flows". All fields are combined with a logical 'AND'. */
export type automation_flows_bool_exp = {
  _and?: InputMaybe<Array<automation_flows_bool_exp>>;
  _not?: InputMaybe<automation_flows_bool_exp>;
  _or?: InputMaybe<Array<automation_flows_bool_exp>>;
  account_id?: InputMaybe<Int_comparison_exp>;
  category?: InputMaybe<automation_flow_categories_bool_exp>;
  category_id?: InputMaybe<Int_comparison_exp>;
  configuration?: InputMaybe<jsonb_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  created_by_agent_id?: InputMaybe<Int_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
};

/** unique or primary key constraints on table "automation_flows" */
export enum automation_flows_constraint {
  /** unique or primary key constraint on columns "id" */
  automation_flows_pkey = 'automation_flows_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type automation_flows_delete_at_path_input = {
  configuration?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type automation_flows_delete_elem_input = {
  configuration?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type automation_flows_delete_key_input = {
  configuration?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "automation_flows" */
export type automation_flows_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  category_id?: InputMaybe<Scalars['Int']>;
  created_by_agent_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "automation_flows" */
export type automation_flows_insert_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  category?: InputMaybe<automation_flow_categories_obj_rel_insert_input>;
  category_id?: InputMaybe<Scalars['Int']>;
  configuration?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_agent_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type automation_flows_max_fields = {
  __typename?: 'automation_flows_max_fields';
  account_id?: Maybe<Scalars['Int']>;
  category_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_agent_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** aggregate min on columns */
export type automation_flows_min_fields = {
  __typename?: 'automation_flows_min_fields';
  account_id?: Maybe<Scalars['Int']>;
  category_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_agent_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** response of any mutation on the table "automation_flows" */
export type automation_flows_mutation_response = {
  __typename?: 'automation_flows_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<automation_flows>;
};

/** on_conflict condition type for table "automation_flows" */
export type automation_flows_on_conflict = {
  constraint: automation_flows_constraint;
  update_columns?: Array<automation_flows_update_column>;
  where?: InputMaybe<automation_flows_bool_exp>;
};

/** Ordering options when selecting data from "automation_flows". */
export type automation_flows_order_by = {
  account_id?: InputMaybe<order_by>;
  category?: InputMaybe<automation_flow_categories_order_by>;
  category_id?: InputMaybe<order_by>;
  configuration?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
};

/** primary key columns input for table: automation_flows */
export type automation_flows_pk_columns_input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type automation_flows_prepend_input = {
  configuration?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "automation_flows" */
export enum automation_flows_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  category_id = 'category_id',
  /** column name */
  configuration = 'configuration',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_agent_id = 'created_by_agent_id',
  /** column name */
  id = 'id'
}

/** input type for updating data in table "automation_flows" */
export type automation_flows_set_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  category_id?: InputMaybe<Scalars['Int']>;
  configuration?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_agent_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type automation_flows_stddev_fields = {
  __typename?: 'automation_flows_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type automation_flows_stddev_pop_fields = {
  __typename?: 'automation_flows_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type automation_flows_stddev_samp_fields = {
  __typename?: 'automation_flows_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "automation_flows" */
export type automation_flows_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: automation_flows_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type automation_flows_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  category_id?: InputMaybe<Scalars['Int']>;
  configuration?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_agent_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** aggregate sum on columns */
export type automation_flows_sum_fields = {
  __typename?: 'automation_flows_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  category_id?: Maybe<Scalars['Int']>;
  created_by_agent_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "automation_flows" */
export enum automation_flows_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  category_id = 'category_id',
  /** column name */
  configuration = 'configuration',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_agent_id = 'created_by_agent_id',
  /** column name */
  id = 'id'
}

export type automation_flows_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<automation_flows_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<automation_flows_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<automation_flows_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<automation_flows_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<automation_flows_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<automation_flows_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<automation_flows_set_input>;
  /** filter the rows which have to be updated */
  where: automation_flows_bool_exp;
};

/** aggregate var_pop on columns */
export type automation_flows_var_pop_fields = {
  __typename?: 'automation_flows_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type automation_flows_var_samp_fields = {
  __typename?: 'automation_flows_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type automation_flows_variance_fields = {
  __typename?: 'automation_flows_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Automation rules which will execute before certain type of events and apply them accordingly */
export type automation_rules = {
  __typename?: 'automation_rules';
  account_id: Scalars['bigint'];
  actions: Scalars['jsonb'];
  active: Scalars['Boolean'];
  conditions: Scalars['jsonb'];
  created_at: Scalars['timestamptz'];
  description?: Maybe<Scalars['String']>;
  event_name: Scalars['String'];
  id: Scalars['bigint'];
  name: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** Automation rules which will execute before certain type of events and apply them accordingly */
export type automation_rulesactionsArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** Automation rules which will execute before certain type of events and apply them accordingly */
export type automation_rulesconditionsArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "automation_rules" */
export type automation_rules_aggregate = {
  __typename?: 'automation_rules_aggregate';
  aggregate?: Maybe<automation_rules_aggregate_fields>;
  nodes: Array<automation_rules>;
};

/** aggregate fields of "automation_rules" */
export type automation_rules_aggregate_fields = {
  __typename?: 'automation_rules_aggregate_fields';
  avg?: Maybe<automation_rules_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<automation_rules_max_fields>;
  min?: Maybe<automation_rules_min_fields>;
  stddev?: Maybe<automation_rules_stddev_fields>;
  stddev_pop?: Maybe<automation_rules_stddev_pop_fields>;
  stddev_samp?: Maybe<automation_rules_stddev_samp_fields>;
  sum?: Maybe<automation_rules_sum_fields>;
  var_pop?: Maybe<automation_rules_var_pop_fields>;
  var_samp?: Maybe<automation_rules_var_samp_fields>;
  variance?: Maybe<automation_rules_variance_fields>;
};


/** aggregate fields of "automation_rules" */
export type automation_rules_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<automation_rules_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type automation_rules_append_input = {
  actions?: InputMaybe<Scalars['jsonb']>;
  conditions?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type automation_rules_avg_fields = {
  __typename?: 'automation_rules_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "automation_rules". All fields are combined with a logical 'AND'. */
export type automation_rules_bool_exp = {
  _and?: InputMaybe<Array<automation_rules_bool_exp>>;
  _not?: InputMaybe<automation_rules_bool_exp>;
  _or?: InputMaybe<Array<automation_rules_bool_exp>>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  actions?: InputMaybe<jsonb_comparison_exp>;
  active?: InputMaybe<Boolean_comparison_exp>;
  conditions?: InputMaybe<jsonb_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  description?: InputMaybe<String_comparison_exp>;
  event_name?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "automation_rules" */
export enum automation_rules_constraint {
  /** unique or primary key constraint on columns "actions", "account_id", "conditions", "event_name" */
  automation_rules_account_id_event_name_conditions_actions_k = 'automation_rules_account_id_event_name_conditions_actions_k',
  /** unique or primary key constraint on columns "account_id", "name" */
  automation_rules_account_id_name_key = 'automation_rules_account_id_name_key',
  /** unique or primary key constraint on columns "id" */
  automation_rules_pkey = 'automation_rules_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type automation_rules_delete_at_path_input = {
  actions?: InputMaybe<Array<Scalars['String']>>;
  conditions?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type automation_rules_delete_elem_input = {
  actions?: InputMaybe<Scalars['Int']>;
  conditions?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type automation_rules_delete_key_input = {
  actions?: InputMaybe<Scalars['String']>;
  conditions?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "automation_rules" */
export type automation_rules_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "automation_rules" */
export type automation_rules_insert_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  actions?: InputMaybe<Scalars['jsonb']>;
  active?: InputMaybe<Scalars['Boolean']>;
  conditions?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  event_name?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type automation_rules_max_fields = {
  __typename?: 'automation_rules_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  event_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type automation_rules_min_fields = {
  __typename?: 'automation_rules_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  event_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "automation_rules" */
export type automation_rules_mutation_response = {
  __typename?: 'automation_rules_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<automation_rules>;
};

/** on_conflict condition type for table "automation_rules" */
export type automation_rules_on_conflict = {
  constraint: automation_rules_constraint;
  update_columns?: Array<automation_rules_update_column>;
  where?: InputMaybe<automation_rules_bool_exp>;
};

/** Ordering options when selecting data from "automation_rules". */
export type automation_rules_order_by = {
  account_id?: InputMaybe<order_by>;
  actions?: InputMaybe<order_by>;
  active?: InputMaybe<order_by>;
  conditions?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  description?: InputMaybe<order_by>;
  event_name?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: automation_rules */
export type automation_rules_pk_columns_input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type automation_rules_prepend_input = {
  actions?: InputMaybe<Scalars['jsonb']>;
  conditions?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "automation_rules" */
export enum automation_rules_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  actions = 'actions',
  /** column name */
  active = 'active',
  /** column name */
  conditions = 'conditions',
  /** column name */
  created_at = 'created_at',
  /** column name */
  description = 'description',
  /** column name */
  event_name = 'event_name',
  /** column name */
  id = 'id',
  /** column name */
  name = 'name',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "automation_rules" */
export type automation_rules_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  actions?: InputMaybe<Scalars['jsonb']>;
  active?: InputMaybe<Scalars['Boolean']>;
  conditions?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  event_name?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type automation_rules_stddev_fields = {
  __typename?: 'automation_rules_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type automation_rules_stddev_pop_fields = {
  __typename?: 'automation_rules_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type automation_rules_stddev_samp_fields = {
  __typename?: 'automation_rules_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "automation_rules" */
export type automation_rules_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: automation_rules_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type automation_rules_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  actions?: InputMaybe<Scalars['jsonb']>;
  active?: InputMaybe<Scalars['Boolean']>;
  conditions?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  event_name?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type automation_rules_sum_fields = {
  __typename?: 'automation_rules_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "automation_rules" */
export enum automation_rules_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  actions = 'actions',
  /** column name */
  active = 'active',
  /** column name */
  conditions = 'conditions',
  /** column name */
  created_at = 'created_at',
  /** column name */
  description = 'description',
  /** column name */
  event_name = 'event_name',
  /** column name */
  id = 'id',
  /** column name */
  name = 'name',
  /** column name */
  updated_at = 'updated_at'
}

export type automation_rules_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<automation_rules_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<automation_rules_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<automation_rules_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<automation_rules_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<automation_rules_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<automation_rules_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<automation_rules_set_input>;
  /** filter the rows which have to be updated */
  where: automation_rules_bool_exp;
};

/** aggregate var_pop on columns */
export type automation_rules_var_pop_fields = {
  __typename?: 'automation_rules_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type automation_rules_var_samp_fields = {
  __typename?: 'automation_rules_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type automation_rules_variance_fields = {
  __typename?: 'automation_rules_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type bigint_comparison_exp = {
  _eq?: InputMaybe<Scalars['bigint']>;
  _gt?: InputMaybe<Scalars['bigint']>;
  _gte?: InputMaybe<Scalars['bigint']>;
  _in?: InputMaybe<Array<Scalars['bigint']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['bigint']>;
  _lte?: InputMaybe<Scalars['bigint']>;
  _neq?: InputMaybe<Scalars['bigint']>;
  _nin?: InputMaybe<Array<Scalars['bigint']>>;
};

/** History of events for calls. */
export type call_events = {
  __typename?: 'call_events';
  call_id: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  event: Scalars['String'];
  id: Scalars['bigint'];
};


/** History of events for calls. */
export type call_eventsdataArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "call_events" */
export type call_events_aggregate = {
  __typename?: 'call_events_aggregate';
  aggregate?: Maybe<call_events_aggregate_fields>;
  nodes: Array<call_events>;
};

/** aggregate fields of "call_events" */
export type call_events_aggregate_fields = {
  __typename?: 'call_events_aggregate_fields';
  avg?: Maybe<call_events_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<call_events_max_fields>;
  min?: Maybe<call_events_min_fields>;
  stddev?: Maybe<call_events_stddev_fields>;
  stddev_pop?: Maybe<call_events_stddev_pop_fields>;
  stddev_samp?: Maybe<call_events_stddev_samp_fields>;
  sum?: Maybe<call_events_sum_fields>;
  var_pop?: Maybe<call_events_var_pop_fields>;
  var_samp?: Maybe<call_events_var_samp_fields>;
  variance?: Maybe<call_events_variance_fields>;
};


/** aggregate fields of "call_events" */
export type call_events_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<call_events_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type call_events_append_input = {
  data?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type call_events_avg_fields = {
  __typename?: 'call_events_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "call_events". All fields are combined with a logical 'AND'. */
export type call_events_bool_exp = {
  _and?: InputMaybe<Array<call_events_bool_exp>>;
  _not?: InputMaybe<call_events_bool_exp>;
  _or?: InputMaybe<Array<call_events_bool_exp>>;
  call_id?: InputMaybe<uuid_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  data?: InputMaybe<jsonb_comparison_exp>;
  event?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "call_events" */
export enum call_events_constraint {
  /** unique or primary key constraint on columns "id" */
  call_events_pkey = 'call_events_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type call_events_delete_at_path_input = {
  data?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type call_events_delete_elem_input = {
  data?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type call_events_delete_key_input = {
  data?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "call_events" */
export type call_events_inc_input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "call_events" */
export type call_events_insert_input = {
  call_id?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  data?: InputMaybe<Scalars['jsonb']>;
  event?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type call_events_max_fields = {
  __typename?: 'call_events_max_fields';
  call_id?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  event?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type call_events_min_fields = {
  __typename?: 'call_events_min_fields';
  call_id?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  event?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "call_events" */
export type call_events_mutation_response = {
  __typename?: 'call_events_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<call_events>;
};

/** on_conflict condition type for table "call_events" */
export type call_events_on_conflict = {
  constraint: call_events_constraint;
  update_columns?: Array<call_events_update_column>;
  where?: InputMaybe<call_events_bool_exp>;
};

/** Ordering options when selecting data from "call_events". */
export type call_events_order_by = {
  call_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  data?: InputMaybe<order_by>;
  event?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
};

/** primary key columns input for table: call_events */
export type call_events_pk_columns_input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type call_events_prepend_input = {
  data?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "call_events" */
export enum call_events_select_column {
  /** column name */
  call_id = 'call_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  data = 'data',
  /** column name */
  event = 'event',
  /** column name */
  id = 'id'
}

/** input type for updating data in table "call_events" */
export type call_events_set_input = {
  call_id?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  data?: InputMaybe<Scalars['jsonb']>;
  event?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type call_events_stddev_fields = {
  __typename?: 'call_events_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type call_events_stddev_pop_fields = {
  __typename?: 'call_events_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type call_events_stddev_samp_fields = {
  __typename?: 'call_events_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "call_events" */
export type call_events_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: call_events_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type call_events_stream_cursor_value_input = {
  call_id?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  data?: InputMaybe<Scalars['jsonb']>;
  event?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type call_events_sum_fields = {
  __typename?: 'call_events_sum_fields';
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "call_events" */
export enum call_events_update_column {
  /** column name */
  call_id = 'call_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  data = 'data',
  /** column name */
  event = 'event',
  /** column name */
  id = 'id'
}

export type call_events_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<call_events_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<call_events_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<call_events_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<call_events_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<call_events_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<call_events_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<call_events_set_input>;
  /** filter the rows which have to be updated */
  where: call_events_bool_exp;
};

/** aggregate var_pop on columns */
export type call_events_var_pop_fields = {
  __typename?: 'call_events_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type call_events_var_samp_fields = {
  __typename?: 'call_events_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type call_events_variance_fields = {
  __typename?: 'call_events_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** History of calls processed by the call server */
export type calls = {
  __typename?: 'calls';
  account_id: Scalars['bigint'];
  call_type: Scalars['String'];
  ended_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['uuid'];
  phone_number: Scalars['String'];
  started_at: Scalars['timestamptz'];
};

/** aggregated selection of "calls" */
export type calls_aggregate = {
  __typename?: 'calls_aggregate';
  aggregate?: Maybe<calls_aggregate_fields>;
  nodes: Array<calls>;
};

/** aggregate fields of "calls" */
export type calls_aggregate_fields = {
  __typename?: 'calls_aggregate_fields';
  avg?: Maybe<calls_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<calls_max_fields>;
  min?: Maybe<calls_min_fields>;
  stddev?: Maybe<calls_stddev_fields>;
  stddev_pop?: Maybe<calls_stddev_pop_fields>;
  stddev_samp?: Maybe<calls_stddev_samp_fields>;
  sum?: Maybe<calls_sum_fields>;
  var_pop?: Maybe<calls_var_pop_fields>;
  var_samp?: Maybe<calls_var_samp_fields>;
  variance?: Maybe<calls_variance_fields>;
};


/** aggregate fields of "calls" */
export type calls_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<calls_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type calls_avg_fields = {
  __typename?: 'calls_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "calls". All fields are combined with a logical 'AND'. */
export type calls_bool_exp = {
  _and?: InputMaybe<Array<calls_bool_exp>>;
  _not?: InputMaybe<calls_bool_exp>;
  _or?: InputMaybe<Array<calls_bool_exp>>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  call_type?: InputMaybe<String_comparison_exp>;
  ended_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<uuid_comparison_exp>;
  phone_number?: InputMaybe<String_comparison_exp>;
  started_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "calls" */
export enum calls_constraint {
  /** unique or primary key constraint on columns "id" */
  calls_pkey = 'calls_pkey'
}

/** input type for incrementing numeric columns in table "calls" */
export type calls_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "calls" */
export type calls_insert_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  call_type?: InputMaybe<Scalars['String']>;
  ended_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  phone_number?: InputMaybe<Scalars['String']>;
  started_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type calls_max_fields = {
  __typename?: 'calls_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  call_type?: Maybe<Scalars['String']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  phone_number?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type calls_min_fields = {
  __typename?: 'calls_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  call_type?: Maybe<Scalars['String']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  phone_number?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "calls" */
export type calls_mutation_response = {
  __typename?: 'calls_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<calls>;
};

/** on_conflict condition type for table "calls" */
export type calls_on_conflict = {
  constraint: calls_constraint;
  update_columns?: Array<calls_update_column>;
  where?: InputMaybe<calls_bool_exp>;
};

/** Ordering options when selecting data from "calls". */
export type calls_order_by = {
  account_id?: InputMaybe<order_by>;
  call_type?: InputMaybe<order_by>;
  ended_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  phone_number?: InputMaybe<order_by>;
  started_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: calls */
export type calls_pk_columns_input = {
  id: Scalars['uuid'];
};

/** select columns of table "calls" */
export enum calls_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  call_type = 'call_type',
  /** column name */
  ended_at = 'ended_at',
  /** column name */
  id = 'id',
  /** column name */
  phone_number = 'phone_number',
  /** column name */
  started_at = 'started_at'
}

/** input type for updating data in table "calls" */
export type calls_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  call_type?: InputMaybe<Scalars['String']>;
  ended_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  phone_number?: InputMaybe<Scalars['String']>;
  started_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type calls_stddev_fields = {
  __typename?: 'calls_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type calls_stddev_pop_fields = {
  __typename?: 'calls_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type calls_stddev_samp_fields = {
  __typename?: 'calls_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "calls" */
export type calls_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: calls_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type calls_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  call_type?: InputMaybe<Scalars['String']>;
  ended_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  phone_number?: InputMaybe<Scalars['String']>;
  started_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type calls_sum_fields = {
  __typename?: 'calls_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "calls" */
export enum calls_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  call_type = 'call_type',
  /** column name */
  ended_at = 'ended_at',
  /** column name */
  id = 'id',
  /** column name */
  phone_number = 'phone_number',
  /** column name */
  started_at = 'started_at'
}

export type calls_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<calls_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<calls_set_input>;
  /** filter the rows which have to be updated */
  where: calls_bool_exp;
};

/** aggregate var_pop on columns */
export type calls_var_pop_fields = {
  __typename?: 'calls_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type calls_var_samp_fields = {
  __typename?: 'calls_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type calls_variance_fields = {
  __typename?: 'calls_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
};

/** Small snippet of responses which can be used to send fast response. */
export type canned_responses = {
  __typename?: 'canned_responses';
  /** An object relationship */
  account: accounts;
  account_id: Scalars['Int'];
  /** An object relationship */
  category?: Maybe<canned_responses_category>;
  category_id?: Maybe<Scalars['bigint']>;
  content?: Maybe<Scalars['String']>;
  content_html?: Maybe<Scalars['String']>;
  content_markdown?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  created_by?: Maybe<account_agents>;
  created_by_agent_id?: Maybe<Scalars['bigint']>;
  id: Scalars['Int'];
  is_enabled: Scalars['Boolean'];
  short_code: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  use_count: Scalars['bigint'];
};

/** aggregated selection of "canned_responses" */
export type canned_responses_aggregate = {
  __typename?: 'canned_responses_aggregate';
  aggregate?: Maybe<canned_responses_aggregate_fields>;
  nodes: Array<canned_responses>;
};

export type canned_responses_aggregate_bool_exp = {
  bool_and?: InputMaybe<canned_responses_aggregate_bool_exp_bool_and>;
  bool_or?: InputMaybe<canned_responses_aggregate_bool_exp_bool_or>;
  count?: InputMaybe<canned_responses_aggregate_bool_exp_count>;
};

export type canned_responses_aggregate_bool_exp_bool_and = {
  arguments: canned_responses_select_column_canned_responses_aggregate_bool_exp_bool_and_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<canned_responses_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type canned_responses_aggregate_bool_exp_bool_or = {
  arguments: canned_responses_select_column_canned_responses_aggregate_bool_exp_bool_or_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<canned_responses_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type canned_responses_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<canned_responses_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<canned_responses_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "canned_responses" */
export type canned_responses_aggregate_fields = {
  __typename?: 'canned_responses_aggregate_fields';
  avg?: Maybe<canned_responses_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<canned_responses_max_fields>;
  min?: Maybe<canned_responses_min_fields>;
  stddev?: Maybe<canned_responses_stddev_fields>;
  stddev_pop?: Maybe<canned_responses_stddev_pop_fields>;
  stddev_samp?: Maybe<canned_responses_stddev_samp_fields>;
  sum?: Maybe<canned_responses_sum_fields>;
  var_pop?: Maybe<canned_responses_var_pop_fields>;
  var_samp?: Maybe<canned_responses_var_samp_fields>;
  variance?: Maybe<canned_responses_variance_fields>;
};


/** aggregate fields of "canned_responses" */
export type canned_responses_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<canned_responses_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "canned_responses" */
export type canned_responses_aggregate_order_by = {
  avg?: InputMaybe<canned_responses_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<canned_responses_max_order_by>;
  min?: InputMaybe<canned_responses_min_order_by>;
  stddev?: InputMaybe<canned_responses_stddev_order_by>;
  stddev_pop?: InputMaybe<canned_responses_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<canned_responses_stddev_samp_order_by>;
  sum?: InputMaybe<canned_responses_sum_order_by>;
  var_pop?: InputMaybe<canned_responses_var_pop_order_by>;
  var_samp?: InputMaybe<canned_responses_var_samp_order_by>;
  variance?: InputMaybe<canned_responses_variance_order_by>;
};

/** input type for inserting array relation for remote table "canned_responses" */
export type canned_responses_arr_rel_insert_input = {
  data: Array<canned_responses_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<canned_responses_on_conflict>;
};

/** aggregate avg on columns */
export type canned_responses_avg_fields = {
  __typename?: 'canned_responses_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  use_count?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "canned_responses" */
export type canned_responses_avg_order_by = {
  account_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  use_count?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "canned_responses". All fields are combined with a logical 'AND'. */
export type canned_responses_bool_exp = {
  _and?: InputMaybe<Array<canned_responses_bool_exp>>;
  _not?: InputMaybe<canned_responses_bool_exp>;
  _or?: InputMaybe<Array<canned_responses_bool_exp>>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<Int_comparison_exp>;
  category?: InputMaybe<canned_responses_category_bool_exp>;
  category_id?: InputMaybe<bigint_comparison_exp>;
  content?: InputMaybe<String_comparison_exp>;
  content_html?: InputMaybe<String_comparison_exp>;
  content_markdown?: InputMaybe<String_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  created_by?: InputMaybe<account_agents_bool_exp>;
  created_by_agent_id?: InputMaybe<bigint_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  is_enabled?: InputMaybe<Boolean_comparison_exp>;
  short_code?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  use_count?: InputMaybe<bigint_comparison_exp>;
};

/** Categories of canned responses */
export type canned_responses_category = {
  __typename?: 'canned_responses_category';
  account_id: Scalars['bigint'];
  /** An array relationship */
  canned_responses: Array<canned_responses>;
  /** An aggregate relationship */
  canned_responses_aggregate: canned_responses_aggregate;
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  created_by?: Maybe<account_agents>;
  created_by_agent_id: Scalars['bigint'];
  id: Scalars['bigint'];
  is_enabled: Scalars['Boolean'];
  language: Scalars['String'];
  name: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** Categories of canned responses */
export type canned_responses_categorycanned_responsesArgs = {
  distinct_on?: InputMaybe<Array<canned_responses_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<canned_responses_order_by>>;
  where?: InputMaybe<canned_responses_bool_exp>;
};


/** Categories of canned responses */
export type canned_responses_categorycanned_responses_aggregateArgs = {
  distinct_on?: InputMaybe<Array<canned_responses_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<canned_responses_order_by>>;
  where?: InputMaybe<canned_responses_bool_exp>;
};

/** aggregated selection of "canned_responses_category" */
export type canned_responses_category_aggregate = {
  __typename?: 'canned_responses_category_aggregate';
  aggregate?: Maybe<canned_responses_category_aggregate_fields>;
  nodes: Array<canned_responses_category>;
};

/** aggregate fields of "canned_responses_category" */
export type canned_responses_category_aggregate_fields = {
  __typename?: 'canned_responses_category_aggregate_fields';
  avg?: Maybe<canned_responses_category_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<canned_responses_category_max_fields>;
  min?: Maybe<canned_responses_category_min_fields>;
  stddev?: Maybe<canned_responses_category_stddev_fields>;
  stddev_pop?: Maybe<canned_responses_category_stddev_pop_fields>;
  stddev_samp?: Maybe<canned_responses_category_stddev_samp_fields>;
  sum?: Maybe<canned_responses_category_sum_fields>;
  var_pop?: Maybe<canned_responses_category_var_pop_fields>;
  var_samp?: Maybe<canned_responses_category_var_samp_fields>;
  variance?: Maybe<canned_responses_category_variance_fields>;
};


/** aggregate fields of "canned_responses_category" */
export type canned_responses_category_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<canned_responses_category_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type canned_responses_category_avg_fields = {
  __typename?: 'canned_responses_category_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "canned_responses_category". All fields are combined with a logical 'AND'. */
export type canned_responses_category_bool_exp = {
  _and?: InputMaybe<Array<canned_responses_category_bool_exp>>;
  _not?: InputMaybe<canned_responses_category_bool_exp>;
  _or?: InputMaybe<Array<canned_responses_category_bool_exp>>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  canned_responses?: InputMaybe<canned_responses_bool_exp>;
  canned_responses_aggregate?: InputMaybe<canned_responses_aggregate_bool_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  created_by?: InputMaybe<account_agents_bool_exp>;
  created_by_agent_id?: InputMaybe<bigint_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  is_enabled?: InputMaybe<Boolean_comparison_exp>;
  language?: InputMaybe<String_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "canned_responses_category" */
export enum canned_responses_category_constraint {
  /** unique or primary key constraint on columns "id" */
  canned_responses_category_pkey = 'canned_responses_category_pkey'
}

/** input type for incrementing numeric columns in table "canned_responses_category" */
export type canned_responses_category_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_by_agent_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "canned_responses_category" */
export type canned_responses_category_insert_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  canned_responses?: InputMaybe<canned_responses_arr_rel_insert_input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<account_agents_obj_rel_insert_input>;
  created_by_agent_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  language?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type canned_responses_category_max_fields = {
  __typename?: 'canned_responses_category_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_agent_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  language?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type canned_responses_category_min_fields = {
  __typename?: 'canned_responses_category_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_agent_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  language?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "canned_responses_category" */
export type canned_responses_category_mutation_response = {
  __typename?: 'canned_responses_category_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<canned_responses_category>;
};

/** input type for inserting object relation for remote table "canned_responses_category" */
export type canned_responses_category_obj_rel_insert_input = {
  data: canned_responses_category_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<canned_responses_category_on_conflict>;
};

/** on_conflict condition type for table "canned_responses_category" */
export type canned_responses_category_on_conflict = {
  constraint: canned_responses_category_constraint;
  update_columns?: Array<canned_responses_category_update_column>;
  where?: InputMaybe<canned_responses_category_bool_exp>;
};

/** Ordering options when selecting data from "canned_responses_category". */
export type canned_responses_category_order_by = {
  account_id?: InputMaybe<order_by>;
  canned_responses_aggregate?: InputMaybe<canned_responses_aggregate_order_by>;
  created_at?: InputMaybe<order_by>;
  created_by?: InputMaybe<account_agents_order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  is_enabled?: InputMaybe<order_by>;
  language?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: canned_responses_category */
export type canned_responses_category_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "canned_responses_category" */
export enum canned_responses_category_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_agent_id = 'created_by_agent_id',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  language = 'language',
  /** column name */
  name = 'name',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "canned_responses_category" */
export type canned_responses_category_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_agent_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  language?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type canned_responses_category_stddev_fields = {
  __typename?: 'canned_responses_category_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type canned_responses_category_stddev_pop_fields = {
  __typename?: 'canned_responses_category_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type canned_responses_category_stddev_samp_fields = {
  __typename?: 'canned_responses_category_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "canned_responses_category" */
export type canned_responses_category_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: canned_responses_category_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type canned_responses_category_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_agent_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  language?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type canned_responses_category_sum_fields = {
  __typename?: 'canned_responses_category_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_by_agent_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "canned_responses_category" */
export enum canned_responses_category_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_agent_id = 'created_by_agent_id',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  language = 'language',
  /** column name */
  name = 'name',
  /** column name */
  updated_at = 'updated_at'
}

export type canned_responses_category_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<canned_responses_category_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<canned_responses_category_set_input>;
  /** filter the rows which have to be updated */
  where: canned_responses_category_bool_exp;
};

/** aggregate var_pop on columns */
export type canned_responses_category_var_pop_fields = {
  __typename?: 'canned_responses_category_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type canned_responses_category_var_samp_fields = {
  __typename?: 'canned_responses_category_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type canned_responses_category_variance_fields = {
  __typename?: 'canned_responses_category_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** unique or primary key constraints on table "canned_responses" */
export enum canned_responses_constraint {
  /** unique or primary key constraint on columns "id" */
  canned_responses_pkey = 'canned_responses_pkey'
}

/** input type for incrementing numeric columns in table "canned_responses" */
export type canned_responses_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  category_id?: InputMaybe<Scalars['bigint']>;
  created_by_agent_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['Int']>;
  use_count?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "canned_responses" */
export type canned_responses_insert_input = {
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['Int']>;
  category?: InputMaybe<canned_responses_category_obj_rel_insert_input>;
  category_id?: InputMaybe<Scalars['bigint']>;
  content?: InputMaybe<Scalars['String']>;
  content_html?: InputMaybe<Scalars['String']>;
  content_markdown?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<account_agents_obj_rel_insert_input>;
  created_by_agent_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['Int']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  short_code?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  use_count?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type canned_responses_max_fields = {
  __typename?: 'canned_responses_max_fields';
  account_id?: Maybe<Scalars['Int']>;
  category_id?: Maybe<Scalars['bigint']>;
  content?: Maybe<Scalars['String']>;
  content_html?: Maybe<Scalars['String']>;
  content_markdown?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_agent_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['Int']>;
  short_code?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  use_count?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "canned_responses" */
export type canned_responses_max_order_by = {
  account_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  content?: InputMaybe<order_by>;
  content_html?: InputMaybe<order_by>;
  content_markdown?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  short_code?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  use_count?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type canned_responses_min_fields = {
  __typename?: 'canned_responses_min_fields';
  account_id?: Maybe<Scalars['Int']>;
  category_id?: Maybe<Scalars['bigint']>;
  content?: Maybe<Scalars['String']>;
  content_html?: Maybe<Scalars['String']>;
  content_markdown?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_agent_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['Int']>;
  short_code?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  use_count?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "canned_responses" */
export type canned_responses_min_order_by = {
  account_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  content?: InputMaybe<order_by>;
  content_html?: InputMaybe<order_by>;
  content_markdown?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  short_code?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  use_count?: InputMaybe<order_by>;
};

/** response of any mutation on the table "canned_responses" */
export type canned_responses_mutation_response = {
  __typename?: 'canned_responses_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<canned_responses>;
};

/** on_conflict condition type for table "canned_responses" */
export type canned_responses_on_conflict = {
  constraint: canned_responses_constraint;
  update_columns?: Array<canned_responses_update_column>;
  where?: InputMaybe<canned_responses_bool_exp>;
};

/** Ordering options when selecting data from "canned_responses". */
export type canned_responses_order_by = {
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  category?: InputMaybe<canned_responses_category_order_by>;
  category_id?: InputMaybe<order_by>;
  content?: InputMaybe<order_by>;
  content_html?: InputMaybe<order_by>;
  content_markdown?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by?: InputMaybe<account_agents_order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  is_enabled?: InputMaybe<order_by>;
  short_code?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  use_count?: InputMaybe<order_by>;
};

/** primary key columns input for table: canned_responses */
export type canned_responses_pk_columns_input = {
  id: Scalars['Int'];
};

/** select columns of table "canned_responses" */
export enum canned_responses_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  category_id = 'category_id',
  /** column name */
  content = 'content',
  /** column name */
  content_html = 'content_html',
  /** column name */
  content_markdown = 'content_markdown',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_agent_id = 'created_by_agent_id',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  short_code = 'short_code',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  use_count = 'use_count'
}

/** select "canned_responses_aggregate_bool_exp_bool_and_arguments_columns" columns of table "canned_responses" */
export enum canned_responses_select_column_canned_responses_aggregate_bool_exp_bool_and_arguments_columns {
  /** column name */
  is_enabled = 'is_enabled'
}

/** select "canned_responses_aggregate_bool_exp_bool_or_arguments_columns" columns of table "canned_responses" */
export enum canned_responses_select_column_canned_responses_aggregate_bool_exp_bool_or_arguments_columns {
  /** column name */
  is_enabled = 'is_enabled'
}

/** input type for updating data in table "canned_responses" */
export type canned_responses_set_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  category_id?: InputMaybe<Scalars['bigint']>;
  content?: InputMaybe<Scalars['String']>;
  content_html?: InputMaybe<Scalars['String']>;
  content_markdown?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_agent_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['Int']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  short_code?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  use_count?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type canned_responses_stddev_fields = {
  __typename?: 'canned_responses_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  use_count?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "canned_responses" */
export type canned_responses_stddev_order_by = {
  account_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  use_count?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type canned_responses_stddev_pop_fields = {
  __typename?: 'canned_responses_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  use_count?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "canned_responses" */
export type canned_responses_stddev_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  use_count?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type canned_responses_stddev_samp_fields = {
  __typename?: 'canned_responses_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  use_count?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "canned_responses" */
export type canned_responses_stddev_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  use_count?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "canned_responses" */
export type canned_responses_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: canned_responses_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type canned_responses_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  category_id?: InputMaybe<Scalars['bigint']>;
  content?: InputMaybe<Scalars['String']>;
  content_html?: InputMaybe<Scalars['String']>;
  content_markdown?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_agent_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['Int']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  short_code?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  use_count?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type canned_responses_sum_fields = {
  __typename?: 'canned_responses_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  category_id?: Maybe<Scalars['bigint']>;
  created_by_agent_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['Int']>;
  use_count?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "canned_responses" */
export type canned_responses_sum_order_by = {
  account_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  use_count?: InputMaybe<order_by>;
};

/** update columns of table "canned_responses" */
export enum canned_responses_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  category_id = 'category_id',
  /** column name */
  content = 'content',
  /** column name */
  content_html = 'content_html',
  /** column name */
  content_markdown = 'content_markdown',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_agent_id = 'created_by_agent_id',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  short_code = 'short_code',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  use_count = 'use_count'
}

export type canned_responses_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<canned_responses_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<canned_responses_set_input>;
  /** filter the rows which have to be updated */
  where: canned_responses_bool_exp;
};

/** aggregate var_pop on columns */
export type canned_responses_var_pop_fields = {
  __typename?: 'canned_responses_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  use_count?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "canned_responses" */
export type canned_responses_var_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  use_count?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type canned_responses_var_samp_fields = {
  __typename?: 'canned_responses_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  use_count?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "canned_responses" */
export type canned_responses_var_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  use_count?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type canned_responses_variance_fields = {
  __typename?: 'canned_responses_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  use_count?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "canned_responses" */
export type canned_responses_variance_order_by = {
  account_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  use_count?: InputMaybe<order_by>;
};

/** All email inbox credentials are stored in this table */
export type channel_email = {
  __typename?: 'channel_email';
  /** An object relationship */
  account: accounts;
  account_id: Scalars['bigint'];
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  forward_to_email?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  imap_enabled: Scalars['Boolean'];
  imap_error_solve_time?: Maybe<Scalars['timestamptz']>;
  imap_error_start_time?: Maybe<Scalars['timestamptz']>;
  imap_host_address?: Maybe<Scalars['String']>;
  imap_password?: Maybe<Scalars['String']>;
  imap_port?: Maybe<Scalars['Int']>;
  imap_requires_ssl: Scalars['Boolean'];
  imap_username?: Maybe<Scalars['String']>;
  smtp_email?: Maybe<Scalars['String']>;
  smtp_enabled: Scalars['Boolean'];
  smtp_host_address?: Maybe<Scalars['String']>;
  smtp_password?: Maybe<Scalars['String']>;
  smtp_port?: Maybe<Scalars['Int']>;
  smtp_requires_ssl: Scalars['Boolean'];
  smtp_username?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  workflow_id?: Maybe<Scalars['String']>;
};

/** aggregated selection of "channel_email" */
export type channel_email_aggregate = {
  __typename?: 'channel_email_aggregate';
  aggregate?: Maybe<channel_email_aggregate_fields>;
  nodes: Array<channel_email>;
};

/** aggregate fields of "channel_email" */
export type channel_email_aggregate_fields = {
  __typename?: 'channel_email_aggregate_fields';
  avg?: Maybe<channel_email_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<channel_email_max_fields>;
  min?: Maybe<channel_email_min_fields>;
  stddev?: Maybe<channel_email_stddev_fields>;
  stddev_pop?: Maybe<channel_email_stddev_pop_fields>;
  stddev_samp?: Maybe<channel_email_stddev_samp_fields>;
  sum?: Maybe<channel_email_sum_fields>;
  var_pop?: Maybe<channel_email_var_pop_fields>;
  var_samp?: Maybe<channel_email_var_samp_fields>;
  variance?: Maybe<channel_email_variance_fields>;
};


/** aggregate fields of "channel_email" */
export type channel_email_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<channel_email_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type channel_email_avg_fields = {
  __typename?: 'channel_email_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  imap_port?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "channel_email". All fields are combined with a logical 'AND'. */
export type channel_email_bool_exp = {
  _and?: InputMaybe<Array<channel_email_bool_exp>>;
  _not?: InputMaybe<channel_email_bool_exp>;
  _or?: InputMaybe<Array<channel_email_bool_exp>>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  email?: InputMaybe<String_comparison_exp>;
  forward_to_email?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  imap_enabled?: InputMaybe<Boolean_comparison_exp>;
  imap_error_solve_time?: InputMaybe<timestamptz_comparison_exp>;
  imap_error_start_time?: InputMaybe<timestamptz_comparison_exp>;
  imap_host_address?: InputMaybe<String_comparison_exp>;
  imap_password?: InputMaybe<String_comparison_exp>;
  imap_port?: InputMaybe<Int_comparison_exp>;
  imap_requires_ssl?: InputMaybe<Boolean_comparison_exp>;
  imap_username?: InputMaybe<String_comparison_exp>;
  smtp_email?: InputMaybe<String_comparison_exp>;
  smtp_enabled?: InputMaybe<Boolean_comparison_exp>;
  smtp_host_address?: InputMaybe<String_comparison_exp>;
  smtp_password?: InputMaybe<String_comparison_exp>;
  smtp_port?: InputMaybe<Int_comparison_exp>;
  smtp_requires_ssl?: InputMaybe<Boolean_comparison_exp>;
  smtp_username?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  workflow_id?: InputMaybe<String_comparison_exp>;
};

/** unique or primary key constraints on table "channel_email" */
export enum channel_email_constraint {
  /** unique or primary key constraint on columns "account_id", "imap_username" */
  channel_email_account_id_imap_username_key = 'channel_email_account_id_imap_username_key',
  /** unique or primary key constraint on columns "account_id", "email" */
  channel_email_email_account_id_key = 'channel_email_email_account_id_key',
  /** unique or primary key constraint on columns "id" */
  channel_email_pkey = 'channel_email_pkey'
}

/** input type for incrementing numeric columns in table "channel_email" */
export type channel_email_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['Int']>;
  imap_port?: InputMaybe<Scalars['Int']>;
  smtp_port?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "channel_email" */
export type channel_email_insert_input = {
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  forward_to_email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  imap_enabled?: InputMaybe<Scalars['Boolean']>;
  imap_error_solve_time?: InputMaybe<Scalars['timestamptz']>;
  imap_error_start_time?: InputMaybe<Scalars['timestamptz']>;
  imap_host_address?: InputMaybe<Scalars['String']>;
  imap_password?: InputMaybe<Scalars['String']>;
  imap_port?: InputMaybe<Scalars['Int']>;
  imap_requires_ssl?: InputMaybe<Scalars['Boolean']>;
  imap_username?: InputMaybe<Scalars['String']>;
  smtp_email?: InputMaybe<Scalars['String']>;
  smtp_enabled?: InputMaybe<Scalars['Boolean']>;
  smtp_host_address?: InputMaybe<Scalars['String']>;
  smtp_password?: InputMaybe<Scalars['String']>;
  smtp_port?: InputMaybe<Scalars['Int']>;
  smtp_requires_ssl?: InputMaybe<Scalars['Boolean']>;
  smtp_username?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  workflow_id?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type channel_email_max_fields = {
  __typename?: 'channel_email_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  forward_to_email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  imap_error_solve_time?: Maybe<Scalars['timestamptz']>;
  imap_error_start_time?: Maybe<Scalars['timestamptz']>;
  imap_host_address?: Maybe<Scalars['String']>;
  imap_password?: Maybe<Scalars['String']>;
  imap_port?: Maybe<Scalars['Int']>;
  imap_username?: Maybe<Scalars['String']>;
  smtp_email?: Maybe<Scalars['String']>;
  smtp_host_address?: Maybe<Scalars['String']>;
  smtp_password?: Maybe<Scalars['String']>;
  smtp_port?: Maybe<Scalars['Int']>;
  smtp_username?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  workflow_id?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type channel_email_min_fields = {
  __typename?: 'channel_email_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  forward_to_email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  imap_error_solve_time?: Maybe<Scalars['timestamptz']>;
  imap_error_start_time?: Maybe<Scalars['timestamptz']>;
  imap_host_address?: Maybe<Scalars['String']>;
  imap_password?: Maybe<Scalars['String']>;
  imap_port?: Maybe<Scalars['Int']>;
  imap_username?: Maybe<Scalars['String']>;
  smtp_email?: Maybe<Scalars['String']>;
  smtp_host_address?: Maybe<Scalars['String']>;
  smtp_password?: Maybe<Scalars['String']>;
  smtp_port?: Maybe<Scalars['Int']>;
  smtp_username?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  workflow_id?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "channel_email" */
export type channel_email_mutation_response = {
  __typename?: 'channel_email_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<channel_email>;
};

/** on_conflict condition type for table "channel_email" */
export type channel_email_on_conflict = {
  constraint: channel_email_constraint;
  update_columns?: Array<channel_email_update_column>;
  where?: InputMaybe<channel_email_bool_exp>;
};

/** Ordering options when selecting data from "channel_email". */
export type channel_email_order_by = {
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  email?: InputMaybe<order_by>;
  forward_to_email?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  imap_enabled?: InputMaybe<order_by>;
  imap_error_solve_time?: InputMaybe<order_by>;
  imap_error_start_time?: InputMaybe<order_by>;
  imap_host_address?: InputMaybe<order_by>;
  imap_password?: InputMaybe<order_by>;
  imap_port?: InputMaybe<order_by>;
  imap_requires_ssl?: InputMaybe<order_by>;
  imap_username?: InputMaybe<order_by>;
  smtp_email?: InputMaybe<order_by>;
  smtp_enabled?: InputMaybe<order_by>;
  smtp_host_address?: InputMaybe<order_by>;
  smtp_password?: InputMaybe<order_by>;
  smtp_port?: InputMaybe<order_by>;
  smtp_requires_ssl?: InputMaybe<order_by>;
  smtp_username?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  workflow_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: channel_email */
export type channel_email_pk_columns_input = {
  id: Scalars['Int'];
};

/** select columns of table "channel_email" */
export enum channel_email_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  email = 'email',
  /** column name */
  forward_to_email = 'forward_to_email',
  /** column name */
  id = 'id',
  /** column name */
  imap_enabled = 'imap_enabled',
  /** column name */
  imap_error_solve_time = 'imap_error_solve_time',
  /** column name */
  imap_error_start_time = 'imap_error_start_time',
  /** column name */
  imap_host_address = 'imap_host_address',
  /** column name */
  imap_password = 'imap_password',
  /** column name */
  imap_port = 'imap_port',
  /** column name */
  imap_requires_ssl = 'imap_requires_ssl',
  /** column name */
  imap_username = 'imap_username',
  /** column name */
  smtp_email = 'smtp_email',
  /** column name */
  smtp_enabled = 'smtp_enabled',
  /** column name */
  smtp_host_address = 'smtp_host_address',
  /** column name */
  smtp_password = 'smtp_password',
  /** column name */
  smtp_port = 'smtp_port',
  /** column name */
  smtp_requires_ssl = 'smtp_requires_ssl',
  /** column name */
  smtp_username = 'smtp_username',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  workflow_id = 'workflow_id'
}

/** input type for updating data in table "channel_email" */
export type channel_email_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  forward_to_email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  imap_enabled?: InputMaybe<Scalars['Boolean']>;
  imap_error_solve_time?: InputMaybe<Scalars['timestamptz']>;
  imap_error_start_time?: InputMaybe<Scalars['timestamptz']>;
  imap_host_address?: InputMaybe<Scalars['String']>;
  imap_password?: InputMaybe<Scalars['String']>;
  imap_port?: InputMaybe<Scalars['Int']>;
  imap_requires_ssl?: InputMaybe<Scalars['Boolean']>;
  imap_username?: InputMaybe<Scalars['String']>;
  smtp_email?: InputMaybe<Scalars['String']>;
  smtp_enabled?: InputMaybe<Scalars['Boolean']>;
  smtp_host_address?: InputMaybe<Scalars['String']>;
  smtp_password?: InputMaybe<Scalars['String']>;
  smtp_port?: InputMaybe<Scalars['Int']>;
  smtp_requires_ssl?: InputMaybe<Scalars['Boolean']>;
  smtp_username?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  workflow_id?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type channel_email_stddev_fields = {
  __typename?: 'channel_email_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  imap_port?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type channel_email_stddev_pop_fields = {
  __typename?: 'channel_email_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  imap_port?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type channel_email_stddev_samp_fields = {
  __typename?: 'channel_email_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  imap_port?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "channel_email" */
export type channel_email_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: channel_email_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type channel_email_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  forward_to_email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  imap_enabled?: InputMaybe<Scalars['Boolean']>;
  imap_error_solve_time?: InputMaybe<Scalars['timestamptz']>;
  imap_error_start_time?: InputMaybe<Scalars['timestamptz']>;
  imap_host_address?: InputMaybe<Scalars['String']>;
  imap_password?: InputMaybe<Scalars['String']>;
  imap_port?: InputMaybe<Scalars['Int']>;
  imap_requires_ssl?: InputMaybe<Scalars['Boolean']>;
  imap_username?: InputMaybe<Scalars['String']>;
  smtp_email?: InputMaybe<Scalars['String']>;
  smtp_enabled?: InputMaybe<Scalars['Boolean']>;
  smtp_host_address?: InputMaybe<Scalars['String']>;
  smtp_password?: InputMaybe<Scalars['String']>;
  smtp_port?: InputMaybe<Scalars['Int']>;
  smtp_requires_ssl?: InputMaybe<Scalars['Boolean']>;
  smtp_username?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  workflow_id?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type channel_email_sum_fields = {
  __typename?: 'channel_email_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['Int']>;
  imap_port?: Maybe<Scalars['Int']>;
  smtp_port?: Maybe<Scalars['Int']>;
};

/** update columns of table "channel_email" */
export enum channel_email_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  email = 'email',
  /** column name */
  forward_to_email = 'forward_to_email',
  /** column name */
  id = 'id',
  /** column name */
  imap_enabled = 'imap_enabled',
  /** column name */
  imap_error_solve_time = 'imap_error_solve_time',
  /** column name */
  imap_error_start_time = 'imap_error_start_time',
  /** column name */
  imap_host_address = 'imap_host_address',
  /** column name */
  imap_password = 'imap_password',
  /** column name */
  imap_port = 'imap_port',
  /** column name */
  imap_requires_ssl = 'imap_requires_ssl',
  /** column name */
  imap_username = 'imap_username',
  /** column name */
  smtp_email = 'smtp_email',
  /** column name */
  smtp_enabled = 'smtp_enabled',
  /** column name */
  smtp_host_address = 'smtp_host_address',
  /** column name */
  smtp_password = 'smtp_password',
  /** column name */
  smtp_port = 'smtp_port',
  /** column name */
  smtp_requires_ssl = 'smtp_requires_ssl',
  /** column name */
  smtp_username = 'smtp_username',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  workflow_id = 'workflow_id'
}

export type channel_email_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<channel_email_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<channel_email_set_input>;
  /** filter the rows which have to be updated */
  where: channel_email_bool_exp;
};

/** aggregate var_pop on columns */
export type channel_email_var_pop_fields = {
  __typename?: 'channel_email_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  imap_port?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type channel_email_var_samp_fields = {
  __typename?: 'channel_email_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  imap_port?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type channel_email_variance_fields = {
  __typename?: 'channel_email_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  imap_port?: Maybe<Scalars['Float']>;
  smtp_port?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "channel_google_business" */
export type channel_google_business = {
  __typename?: 'channel_google_business';
  access_token: Scalars['String'];
  /** An object relationship */
  account: accounts;
  account_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  email: Scalars['String'];
  google_account_id: Scalars['String'];
  id: Scalars['Int'];
  refresh_token: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "channel_google_business" */
export type channel_google_business_aggregate = {
  __typename?: 'channel_google_business_aggregate';
  aggregate?: Maybe<channel_google_business_aggregate_fields>;
  nodes: Array<channel_google_business>;
};

/** aggregate fields of "channel_google_business" */
export type channel_google_business_aggregate_fields = {
  __typename?: 'channel_google_business_aggregate_fields';
  avg?: Maybe<channel_google_business_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<channel_google_business_max_fields>;
  min?: Maybe<channel_google_business_min_fields>;
  stddev?: Maybe<channel_google_business_stddev_fields>;
  stddev_pop?: Maybe<channel_google_business_stddev_pop_fields>;
  stddev_samp?: Maybe<channel_google_business_stddev_samp_fields>;
  sum?: Maybe<channel_google_business_sum_fields>;
  var_pop?: Maybe<channel_google_business_var_pop_fields>;
  var_samp?: Maybe<channel_google_business_var_samp_fields>;
  variance?: Maybe<channel_google_business_variance_fields>;
};


/** aggregate fields of "channel_google_business" */
export type channel_google_business_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<channel_google_business_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type channel_google_business_avg_fields = {
  __typename?: 'channel_google_business_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "channel_google_business". All fields are combined with a logical 'AND'. */
export type channel_google_business_bool_exp = {
  _and?: InputMaybe<Array<channel_google_business_bool_exp>>;
  _not?: InputMaybe<channel_google_business_bool_exp>;
  _or?: InputMaybe<Array<channel_google_business_bool_exp>>;
  access_token?: InputMaybe<String_comparison_exp>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<Int_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  email?: InputMaybe<String_comparison_exp>;
  google_account_id?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  refresh_token?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "channel_google_business" */
export enum channel_google_business_constraint {
  /** unique or primary key constraint on columns "google_account_id", "email" */
  channel_google_business_email_google_account_id_key = 'channel_google_business_email_google_account_id_key',
  /** unique or primary key constraint on columns "id" */
  channel_google_business_pkey = 'channel_google_business_pkey'
}

/** input type for incrementing numeric columns in table "channel_google_business" */
export type channel_google_business_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "channel_google_business" */
export type channel_google_business_insert_input = {
  access_token?: InputMaybe<Scalars['String']>;
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  google_account_id?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  refresh_token?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type channel_google_business_max_fields = {
  __typename?: 'channel_google_business_max_fields';
  access_token?: Maybe<Scalars['String']>;
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  google_account_id?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  refresh_token?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type channel_google_business_min_fields = {
  __typename?: 'channel_google_business_min_fields';
  access_token?: Maybe<Scalars['String']>;
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  google_account_id?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  refresh_token?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "channel_google_business" */
export type channel_google_business_mutation_response = {
  __typename?: 'channel_google_business_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<channel_google_business>;
};

/** on_conflict condition type for table "channel_google_business" */
export type channel_google_business_on_conflict = {
  constraint: channel_google_business_constraint;
  update_columns?: Array<channel_google_business_update_column>;
  where?: InputMaybe<channel_google_business_bool_exp>;
};

/** Ordering options when selecting data from "channel_google_business". */
export type channel_google_business_order_by = {
  access_token?: InputMaybe<order_by>;
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  email?: InputMaybe<order_by>;
  google_account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  refresh_token?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: channel_google_business */
export type channel_google_business_pk_columns_input = {
  id: Scalars['Int'];
};

/** select columns of table "channel_google_business" */
export enum channel_google_business_select_column {
  /** column name */
  access_token = 'access_token',
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  email = 'email',
  /** column name */
  google_account_id = 'google_account_id',
  /** column name */
  id = 'id',
  /** column name */
  refresh_token = 'refresh_token',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "channel_google_business" */
export type channel_google_business_set_input = {
  access_token?: InputMaybe<Scalars['String']>;
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  google_account_id?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  refresh_token?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type channel_google_business_stddev_fields = {
  __typename?: 'channel_google_business_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type channel_google_business_stddev_pop_fields = {
  __typename?: 'channel_google_business_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type channel_google_business_stddev_samp_fields = {
  __typename?: 'channel_google_business_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "channel_google_business" */
export type channel_google_business_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: channel_google_business_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type channel_google_business_stream_cursor_value_input = {
  access_token?: InputMaybe<Scalars['String']>;
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  google_account_id?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  refresh_token?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type channel_google_business_sum_fields = {
  __typename?: 'channel_google_business_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "channel_google_business" */
export enum channel_google_business_update_column {
  /** column name */
  access_token = 'access_token',
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  email = 'email',
  /** column name */
  google_account_id = 'google_account_id',
  /** column name */
  id = 'id',
  /** column name */
  refresh_token = 'refresh_token',
  /** column name */
  updated_at = 'updated_at'
}

export type channel_google_business_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<channel_google_business_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<channel_google_business_set_input>;
  /** filter the rows which have to be updated */
  where: channel_google_business_bool_exp;
};

/** aggregate var_pop on columns */
export type channel_google_business_var_pop_fields = {
  __typename?: 'channel_google_business_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type channel_google_business_var_samp_fields = {
  __typename?: 'channel_google_business_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type channel_google_business_variance_fields = {
  __typename?: 'channel_google_business_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "channel_instagram" */
export type channel_instagram = {
  __typename?: 'channel_instagram';
  access_token: Scalars['String'];
  /** An object relationship */
  account?: Maybe<accounts>;
  account_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  instagram_business_account_id?: Maybe<Scalars['String']>;
  page_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "channel_instagram" */
export type channel_instagram_aggregate = {
  __typename?: 'channel_instagram_aggregate';
  aggregate?: Maybe<channel_instagram_aggregate_fields>;
  nodes: Array<channel_instagram>;
};

/** aggregate fields of "channel_instagram" */
export type channel_instagram_aggregate_fields = {
  __typename?: 'channel_instagram_aggregate_fields';
  avg?: Maybe<channel_instagram_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<channel_instagram_max_fields>;
  min?: Maybe<channel_instagram_min_fields>;
  stddev?: Maybe<channel_instagram_stddev_fields>;
  stddev_pop?: Maybe<channel_instagram_stddev_pop_fields>;
  stddev_samp?: Maybe<channel_instagram_stddev_samp_fields>;
  sum?: Maybe<channel_instagram_sum_fields>;
  var_pop?: Maybe<channel_instagram_var_pop_fields>;
  var_samp?: Maybe<channel_instagram_var_samp_fields>;
  variance?: Maybe<channel_instagram_variance_fields>;
};


/** aggregate fields of "channel_instagram" */
export type channel_instagram_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<channel_instagram_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type channel_instagram_avg_fields = {
  __typename?: 'channel_instagram_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "channel_instagram". All fields are combined with a logical 'AND'. */
export type channel_instagram_bool_exp = {
  _and?: InputMaybe<Array<channel_instagram_bool_exp>>;
  _not?: InputMaybe<channel_instagram_bool_exp>;
  _or?: InputMaybe<Array<channel_instagram_bool_exp>>;
  access_token?: InputMaybe<String_comparison_exp>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<Int_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  instagram_business_account_id?: InputMaybe<String_comparison_exp>;
  page_id?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "channel_instagram" */
export enum channel_instagram_constraint {
  /** unique or primary key constraint on columns "account_id", "page_id" */
  channel_instagram_page_id_account_id_key = 'channel_instagram_page_id_account_id_key',
  /** unique or primary key constraint on columns "id" */
  channel_instagram_pkey = 'channel_instagram_pkey'
}

/** input type for incrementing numeric columns in table "channel_instagram" */
export type channel_instagram_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "channel_instagram" */
export type channel_instagram_insert_input = {
  access_token?: InputMaybe<Scalars['String']>;
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  instagram_business_account_id?: InputMaybe<Scalars['String']>;
  page_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type channel_instagram_max_fields = {
  __typename?: 'channel_instagram_max_fields';
  access_token?: Maybe<Scalars['String']>;
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  instagram_business_account_id?: Maybe<Scalars['String']>;
  page_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type channel_instagram_min_fields = {
  __typename?: 'channel_instagram_min_fields';
  access_token?: Maybe<Scalars['String']>;
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  instagram_business_account_id?: Maybe<Scalars['String']>;
  page_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "channel_instagram" */
export type channel_instagram_mutation_response = {
  __typename?: 'channel_instagram_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<channel_instagram>;
};

/** on_conflict condition type for table "channel_instagram" */
export type channel_instagram_on_conflict = {
  constraint: channel_instagram_constraint;
  update_columns?: Array<channel_instagram_update_column>;
  where?: InputMaybe<channel_instagram_bool_exp>;
};

/** Ordering options when selecting data from "channel_instagram". */
export type channel_instagram_order_by = {
  access_token?: InputMaybe<order_by>;
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  instagram_business_account_id?: InputMaybe<order_by>;
  page_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: channel_instagram */
export type channel_instagram_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "channel_instagram" */
export enum channel_instagram_select_column {
  /** column name */
  access_token = 'access_token',
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  instagram_business_account_id = 'instagram_business_account_id',
  /** column name */
  page_id = 'page_id',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "channel_instagram" */
export type channel_instagram_set_input = {
  access_token?: InputMaybe<Scalars['String']>;
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  instagram_business_account_id?: InputMaybe<Scalars['String']>;
  page_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type channel_instagram_stddev_fields = {
  __typename?: 'channel_instagram_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type channel_instagram_stddev_pop_fields = {
  __typename?: 'channel_instagram_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type channel_instagram_stddev_samp_fields = {
  __typename?: 'channel_instagram_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "channel_instagram" */
export type channel_instagram_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: channel_instagram_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type channel_instagram_stream_cursor_value_input = {
  access_token?: InputMaybe<Scalars['String']>;
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  instagram_business_account_id?: InputMaybe<Scalars['String']>;
  page_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type channel_instagram_sum_fields = {
  __typename?: 'channel_instagram_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "channel_instagram" */
export enum channel_instagram_update_column {
  /** column name */
  access_token = 'access_token',
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  instagram_business_account_id = 'instagram_business_account_id',
  /** column name */
  page_id = 'page_id',
  /** column name */
  updated_at = 'updated_at'
}

export type channel_instagram_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<channel_instagram_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<channel_instagram_set_input>;
  /** filter the rows which have to be updated */
  where: channel_instagram_bool_exp;
};

/** aggregate var_pop on columns */
export type channel_instagram_var_pop_fields = {
  __typename?: 'channel_instagram_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type channel_instagram_var_samp_fields = {
  __typename?: 'channel_instagram_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type channel_instagram_variance_fields = {
  __typename?: 'channel_instagram_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "channel_live_chat" */
export type channel_live_chat = {
  __typename?: 'channel_live_chat';
  account_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  token: Scalars['uuid'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "channel_live_chat" */
export type channel_live_chat_aggregate = {
  __typename?: 'channel_live_chat_aggregate';
  aggregate?: Maybe<channel_live_chat_aggregate_fields>;
  nodes: Array<channel_live_chat>;
};

/** aggregate fields of "channel_live_chat" */
export type channel_live_chat_aggregate_fields = {
  __typename?: 'channel_live_chat_aggregate_fields';
  avg?: Maybe<channel_live_chat_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<channel_live_chat_max_fields>;
  min?: Maybe<channel_live_chat_min_fields>;
  stddev?: Maybe<channel_live_chat_stddev_fields>;
  stddev_pop?: Maybe<channel_live_chat_stddev_pop_fields>;
  stddev_samp?: Maybe<channel_live_chat_stddev_samp_fields>;
  sum?: Maybe<channel_live_chat_sum_fields>;
  var_pop?: Maybe<channel_live_chat_var_pop_fields>;
  var_samp?: Maybe<channel_live_chat_var_samp_fields>;
  variance?: Maybe<channel_live_chat_variance_fields>;
};


/** aggregate fields of "channel_live_chat" */
export type channel_live_chat_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<channel_live_chat_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type channel_live_chat_avg_fields = {
  __typename?: 'channel_live_chat_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "channel_live_chat". All fields are combined with a logical 'AND'. */
export type channel_live_chat_bool_exp = {
  _and?: InputMaybe<Array<channel_live_chat_bool_exp>>;
  _not?: InputMaybe<channel_live_chat_bool_exp>;
  _or?: InputMaybe<Array<channel_live_chat_bool_exp>>;
  account_id?: InputMaybe<Int_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  token?: InputMaybe<uuid_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "channel_live_chat" */
export enum channel_live_chat_constraint {
  /** unique or primary key constraint on columns "id" */
  channel_live_chat_pkey = 'channel_live_chat_pkey',
  /** unique or primary key constraint on columns "token" */
  channel_live_chat_token_key = 'channel_live_chat_token_key'
}

/** input type for incrementing numeric columns in table "channel_live_chat" */
export type channel_live_chat_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "channel_live_chat" */
export type channel_live_chat_insert_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  token?: InputMaybe<Scalars['uuid']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type channel_live_chat_max_fields = {
  __typename?: 'channel_live_chat_max_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  token?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type channel_live_chat_min_fields = {
  __typename?: 'channel_live_chat_min_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  token?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "channel_live_chat" */
export type channel_live_chat_mutation_response = {
  __typename?: 'channel_live_chat_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<channel_live_chat>;
};

/** on_conflict condition type for table "channel_live_chat" */
export type channel_live_chat_on_conflict = {
  constraint: channel_live_chat_constraint;
  update_columns?: Array<channel_live_chat_update_column>;
  where?: InputMaybe<channel_live_chat_bool_exp>;
};

/** Ordering options when selecting data from "channel_live_chat". */
export type channel_live_chat_order_by = {
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  token?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: channel_live_chat */
export type channel_live_chat_pk_columns_input = {
  id: Scalars['Int'];
};

/** select columns of table "channel_live_chat" */
export enum channel_live_chat_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  token = 'token',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "channel_live_chat" */
export type channel_live_chat_set_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  token?: InputMaybe<Scalars['uuid']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type channel_live_chat_stddev_fields = {
  __typename?: 'channel_live_chat_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type channel_live_chat_stddev_pop_fields = {
  __typename?: 'channel_live_chat_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type channel_live_chat_stddev_samp_fields = {
  __typename?: 'channel_live_chat_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "channel_live_chat" */
export type channel_live_chat_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: channel_live_chat_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type channel_live_chat_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  token?: InputMaybe<Scalars['uuid']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type channel_live_chat_sum_fields = {
  __typename?: 'channel_live_chat_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "channel_live_chat" */
export enum channel_live_chat_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  token = 'token',
  /** column name */
  updated_at = 'updated_at'
}

export type channel_live_chat_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<channel_live_chat_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<channel_live_chat_set_input>;
  /** filter the rows which have to be updated */
  where: channel_live_chat_bool_exp;
};

/** aggregate var_pop on columns */
export type channel_live_chat_var_pop_fields = {
  __typename?: 'channel_live_chat_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type channel_live_chat_var_samp_fields = {
  __typename?: 'channel_live_chat_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type channel_live_chat_variance_fields = {
  __typename?: 'channel_live_chat_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** All twitter inbox credentials are stored in this table. */
export type channel_twitter_profiles = {
  __typename?: 'channel_twitter_profiles';
  access_secret: Scalars['String'];
  access_token: Scalars['String'];
  /** An object relationship */
  account: accounts;
  account_id: Scalars['bigint'];
  created_at: Scalars['timestamptz'];
  /** A computed field, executes function "generate_twitter_dm_link" */
  dm_link?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  profile_id: Scalars['String'];
  screen_name: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "channel_twitter_profiles" */
export type channel_twitter_profiles_aggregate = {
  __typename?: 'channel_twitter_profiles_aggregate';
  aggregate?: Maybe<channel_twitter_profiles_aggregate_fields>;
  nodes: Array<channel_twitter_profiles>;
};

/** aggregate fields of "channel_twitter_profiles" */
export type channel_twitter_profiles_aggregate_fields = {
  __typename?: 'channel_twitter_profiles_aggregate_fields';
  avg?: Maybe<channel_twitter_profiles_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<channel_twitter_profiles_max_fields>;
  min?: Maybe<channel_twitter_profiles_min_fields>;
  stddev?: Maybe<channel_twitter_profiles_stddev_fields>;
  stddev_pop?: Maybe<channel_twitter_profiles_stddev_pop_fields>;
  stddev_samp?: Maybe<channel_twitter_profiles_stddev_samp_fields>;
  sum?: Maybe<channel_twitter_profiles_sum_fields>;
  var_pop?: Maybe<channel_twitter_profiles_var_pop_fields>;
  var_samp?: Maybe<channel_twitter_profiles_var_samp_fields>;
  variance?: Maybe<channel_twitter_profiles_variance_fields>;
};


/** aggregate fields of "channel_twitter_profiles" */
export type channel_twitter_profiles_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<channel_twitter_profiles_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type channel_twitter_profiles_avg_fields = {
  __typename?: 'channel_twitter_profiles_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "channel_twitter_profiles". All fields are combined with a logical 'AND'. */
export type channel_twitter_profiles_bool_exp = {
  _and?: InputMaybe<Array<channel_twitter_profiles_bool_exp>>;
  _not?: InputMaybe<channel_twitter_profiles_bool_exp>;
  _or?: InputMaybe<Array<channel_twitter_profiles_bool_exp>>;
  access_secret?: InputMaybe<String_comparison_exp>;
  access_token?: InputMaybe<String_comparison_exp>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  dm_link?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  profile_id?: InputMaybe<String_comparison_exp>;
  screen_name?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "channel_twitter_profiles" */
export enum channel_twitter_profiles_constraint {
  /** unique or primary key constraint on columns "id" */
  channel_twitter_profiles_pkey1 = 'channel_twitter_profiles_pkey1',
  /** unique or primary key constraint on columns "account_id", "profile_id" */
  channel_twitter_profiles_profile_id_account_id_key = 'channel_twitter_profiles_profile_id_account_id_key'
}

/** input type for incrementing numeric columns in table "channel_twitter_profiles" */
export type channel_twitter_profiles_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "channel_twitter_profiles" */
export type channel_twitter_profiles_insert_input = {
  access_secret?: InputMaybe<Scalars['String']>;
  access_token?: InputMaybe<Scalars['String']>;
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  profile_id?: InputMaybe<Scalars['String']>;
  screen_name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type channel_twitter_profiles_max_fields = {
  __typename?: 'channel_twitter_profiles_max_fields';
  access_secret?: Maybe<Scalars['String']>;
  access_token?: Maybe<Scalars['String']>;
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  /** A computed field, executes function "generate_twitter_dm_link" */
  dm_link?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  profile_id?: Maybe<Scalars['String']>;
  screen_name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type channel_twitter_profiles_min_fields = {
  __typename?: 'channel_twitter_profiles_min_fields';
  access_secret?: Maybe<Scalars['String']>;
  access_token?: Maybe<Scalars['String']>;
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  /** A computed field, executes function "generate_twitter_dm_link" */
  dm_link?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  profile_id?: Maybe<Scalars['String']>;
  screen_name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "channel_twitter_profiles" */
export type channel_twitter_profiles_mutation_response = {
  __typename?: 'channel_twitter_profiles_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<channel_twitter_profiles>;
};

/** input type for inserting object relation for remote table "channel_twitter_profiles" */
export type channel_twitter_profiles_obj_rel_insert_input = {
  data: channel_twitter_profiles_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<channel_twitter_profiles_on_conflict>;
};

/** on_conflict condition type for table "channel_twitter_profiles" */
export type channel_twitter_profiles_on_conflict = {
  constraint: channel_twitter_profiles_constraint;
  update_columns?: Array<channel_twitter_profiles_update_column>;
  where?: InputMaybe<channel_twitter_profiles_bool_exp>;
};

/** Ordering options when selecting data from "channel_twitter_profiles". */
export type channel_twitter_profiles_order_by = {
  access_secret?: InputMaybe<order_by>;
  access_token?: InputMaybe<order_by>;
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  dm_link?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  profile_id?: InputMaybe<order_by>;
  screen_name?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: channel_twitter_profiles */
export type channel_twitter_profiles_pk_columns_input = {
  id: Scalars['Int'];
};

/** select columns of table "channel_twitter_profiles" */
export enum channel_twitter_profiles_select_column {
  /** column name */
  access_secret = 'access_secret',
  /** column name */
  access_token = 'access_token',
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  profile_id = 'profile_id',
  /** column name */
  screen_name = 'screen_name',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "channel_twitter_profiles" */
export type channel_twitter_profiles_set_input = {
  access_secret?: InputMaybe<Scalars['String']>;
  access_token?: InputMaybe<Scalars['String']>;
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  profile_id?: InputMaybe<Scalars['String']>;
  screen_name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type channel_twitter_profiles_stddev_fields = {
  __typename?: 'channel_twitter_profiles_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type channel_twitter_profiles_stddev_pop_fields = {
  __typename?: 'channel_twitter_profiles_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type channel_twitter_profiles_stddev_samp_fields = {
  __typename?: 'channel_twitter_profiles_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "channel_twitter_profiles" */
export type channel_twitter_profiles_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: channel_twitter_profiles_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type channel_twitter_profiles_stream_cursor_value_input = {
  access_secret?: InputMaybe<Scalars['String']>;
  access_token?: InputMaybe<Scalars['String']>;
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  profile_id?: InputMaybe<Scalars['String']>;
  screen_name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type channel_twitter_profiles_sum_fields = {
  __typename?: 'channel_twitter_profiles_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "channel_twitter_profiles" */
export enum channel_twitter_profiles_update_column {
  /** column name */
  access_secret = 'access_secret',
  /** column name */
  access_token = 'access_token',
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  profile_id = 'profile_id',
  /** column name */
  screen_name = 'screen_name',
  /** column name */
  updated_at = 'updated_at'
}

export type channel_twitter_profiles_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<channel_twitter_profiles_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<channel_twitter_profiles_set_input>;
  /** filter the rows which have to be updated */
  where: channel_twitter_profiles_bool_exp;
};

/** aggregate var_pop on columns */
export type channel_twitter_profiles_var_pop_fields = {
  __typename?: 'channel_twitter_profiles_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type channel_twitter_profiles_var_samp_fields = {
  __typename?: 'channel_twitter_profiles_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type channel_twitter_profiles_variance_fields = {
  __typename?: 'channel_twitter_profiles_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Contains information of a twitter stream inbox  */
export type channel_twitter_stream = {
  __typename?: 'channel_twitter_stream';
  /** An object relationship */
  account: accounts;
  account_id: Scalars['bigint'];
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  rule_id: Scalars['String'];
  tag?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  value: Scalars['String'];
};

/** aggregated selection of "channel_twitter_stream" */
export type channel_twitter_stream_aggregate = {
  __typename?: 'channel_twitter_stream_aggregate';
  aggregate?: Maybe<channel_twitter_stream_aggregate_fields>;
  nodes: Array<channel_twitter_stream>;
};

/** aggregate fields of "channel_twitter_stream" */
export type channel_twitter_stream_aggregate_fields = {
  __typename?: 'channel_twitter_stream_aggregate_fields';
  avg?: Maybe<channel_twitter_stream_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<channel_twitter_stream_max_fields>;
  min?: Maybe<channel_twitter_stream_min_fields>;
  stddev?: Maybe<channel_twitter_stream_stddev_fields>;
  stddev_pop?: Maybe<channel_twitter_stream_stddev_pop_fields>;
  stddev_samp?: Maybe<channel_twitter_stream_stddev_samp_fields>;
  sum?: Maybe<channel_twitter_stream_sum_fields>;
  var_pop?: Maybe<channel_twitter_stream_var_pop_fields>;
  var_samp?: Maybe<channel_twitter_stream_var_samp_fields>;
  variance?: Maybe<channel_twitter_stream_variance_fields>;
};


/** aggregate fields of "channel_twitter_stream" */
export type channel_twitter_stream_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<channel_twitter_stream_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type channel_twitter_stream_avg_fields = {
  __typename?: 'channel_twitter_stream_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "channel_twitter_stream". All fields are combined with a logical 'AND'. */
export type channel_twitter_stream_bool_exp = {
  _and?: InputMaybe<Array<channel_twitter_stream_bool_exp>>;
  _not?: InputMaybe<channel_twitter_stream_bool_exp>;
  _or?: InputMaybe<Array<channel_twitter_stream_bool_exp>>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  rule_id?: InputMaybe<String_comparison_exp>;
  tag?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  value?: InputMaybe<String_comparison_exp>;
};

/** unique or primary key constraints on table "channel_twitter_stream" */
export enum channel_twitter_stream_constraint {
  /** unique or primary key constraint on columns "account_id", "value" */
  channel_twitter_stream_account_id_value_key = 'channel_twitter_stream_account_id_value_key',
  /** unique or primary key constraint on columns "id" */
  channel_twitter_stream_pkey = 'channel_twitter_stream_pkey'
}

/** input type for incrementing numeric columns in table "channel_twitter_stream" */
export type channel_twitter_stream_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "channel_twitter_stream" */
export type channel_twitter_stream_insert_input = {
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  rule_id?: InputMaybe<Scalars['String']>;
  tag?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  value?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type channel_twitter_stream_max_fields = {
  __typename?: 'channel_twitter_stream_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  rule_id?: Maybe<Scalars['String']>;
  tag?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  value?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type channel_twitter_stream_min_fields = {
  __typename?: 'channel_twitter_stream_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  rule_id?: Maybe<Scalars['String']>;
  tag?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  value?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "channel_twitter_stream" */
export type channel_twitter_stream_mutation_response = {
  __typename?: 'channel_twitter_stream_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<channel_twitter_stream>;
};

/** on_conflict condition type for table "channel_twitter_stream" */
export type channel_twitter_stream_on_conflict = {
  constraint: channel_twitter_stream_constraint;
  update_columns?: Array<channel_twitter_stream_update_column>;
  where?: InputMaybe<channel_twitter_stream_bool_exp>;
};

/** Ordering options when selecting data from "channel_twitter_stream". */
export type channel_twitter_stream_order_by = {
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  rule_id?: InputMaybe<order_by>;
  tag?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  value?: InputMaybe<order_by>;
};

/** primary key columns input for table: channel_twitter_stream */
export type channel_twitter_stream_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "channel_twitter_stream" */
export enum channel_twitter_stream_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  rule_id = 'rule_id',
  /** column name */
  tag = 'tag',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  value = 'value'
}

/** input type for updating data in table "channel_twitter_stream" */
export type channel_twitter_stream_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  rule_id?: InputMaybe<Scalars['String']>;
  tag?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  value?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type channel_twitter_stream_stddev_fields = {
  __typename?: 'channel_twitter_stream_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type channel_twitter_stream_stddev_pop_fields = {
  __typename?: 'channel_twitter_stream_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type channel_twitter_stream_stddev_samp_fields = {
  __typename?: 'channel_twitter_stream_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "channel_twitter_stream" */
export type channel_twitter_stream_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: channel_twitter_stream_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type channel_twitter_stream_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  rule_id?: InputMaybe<Scalars['String']>;
  tag?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  value?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type channel_twitter_stream_sum_fields = {
  __typename?: 'channel_twitter_stream_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "channel_twitter_stream" */
export enum channel_twitter_stream_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  rule_id = 'rule_id',
  /** column name */
  tag = 'tag',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  value = 'value'
}

export type channel_twitter_stream_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<channel_twitter_stream_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<channel_twitter_stream_set_input>;
  /** filter the rows which have to be updated */
  where: channel_twitter_stream_bool_exp;
};

/** aggregate var_pop on columns */
export type channel_twitter_stream_var_pop_fields = {
  __typename?: 'channel_twitter_stream_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type channel_twitter_stream_var_samp_fields = {
  __typename?: 'channel_twitter_stream_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type channel_twitter_stream_variance_fields = {
  __typename?: 'channel_twitter_stream_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "channel_web_chat" */
export type channel_web_chat = {
  __typename?: 'channel_web_chat';
  account_id?: Maybe<Scalars['bigint']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  token?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  uuid: Scalars['uuid'];
};

/** aggregated selection of "channel_web_chat" */
export type channel_web_chat_aggregate = {
  __typename?: 'channel_web_chat_aggregate';
  aggregate?: Maybe<channel_web_chat_aggregate_fields>;
  nodes: Array<channel_web_chat>;
};

/** aggregate fields of "channel_web_chat" */
export type channel_web_chat_aggregate_fields = {
  __typename?: 'channel_web_chat_aggregate_fields';
  avg?: Maybe<channel_web_chat_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<channel_web_chat_max_fields>;
  min?: Maybe<channel_web_chat_min_fields>;
  stddev?: Maybe<channel_web_chat_stddev_fields>;
  stddev_pop?: Maybe<channel_web_chat_stddev_pop_fields>;
  stddev_samp?: Maybe<channel_web_chat_stddev_samp_fields>;
  sum?: Maybe<channel_web_chat_sum_fields>;
  var_pop?: Maybe<channel_web_chat_var_pop_fields>;
  var_samp?: Maybe<channel_web_chat_var_samp_fields>;
  variance?: Maybe<channel_web_chat_variance_fields>;
};


/** aggregate fields of "channel_web_chat" */
export type channel_web_chat_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<channel_web_chat_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type channel_web_chat_avg_fields = {
  __typename?: 'channel_web_chat_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "channel_web_chat". All fields are combined with a logical 'AND'. */
export type channel_web_chat_bool_exp = {
  _and?: InputMaybe<Array<channel_web_chat_bool_exp>>;
  _not?: InputMaybe<channel_web_chat_bool_exp>;
  _or?: InputMaybe<Array<channel_web_chat_bool_exp>>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  token?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  uuid?: InputMaybe<uuid_comparison_exp>;
};

/** unique or primary key constraints on table "channel_web_chat" */
export enum channel_web_chat_constraint {
  /** unique or primary key constraint on columns "id" */
  channel_web_chat_pkey = 'channel_web_chat_pkey',
  /** unique or primary key constraint on columns "uuid" */
  channel_web_chat_uuid_key = 'channel_web_chat_uuid_key'
}

/** input type for incrementing numeric columns in table "channel_web_chat" */
export type channel_web_chat_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "channel_web_chat" */
export type channel_web_chat_insert_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  token?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  uuid?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type channel_web_chat_max_fields = {
  __typename?: 'channel_web_chat_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  token?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uuid?: Maybe<Scalars['uuid']>;
};

/** aggregate min on columns */
export type channel_web_chat_min_fields = {
  __typename?: 'channel_web_chat_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  token?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uuid?: Maybe<Scalars['uuid']>;
};

/** response of any mutation on the table "channel_web_chat" */
export type channel_web_chat_mutation_response = {
  __typename?: 'channel_web_chat_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<channel_web_chat>;
};

/** on_conflict condition type for table "channel_web_chat" */
export type channel_web_chat_on_conflict = {
  constraint: channel_web_chat_constraint;
  update_columns?: Array<channel_web_chat_update_column>;
  where?: InputMaybe<channel_web_chat_bool_exp>;
};

/** Ordering options when selecting data from "channel_web_chat". */
export type channel_web_chat_order_by = {
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  token?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  uuid?: InputMaybe<order_by>;
};

/** primary key columns input for table: channel_web_chat */
export type channel_web_chat_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "channel_web_chat" */
export enum channel_web_chat_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  token = 'token',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  uuid = 'uuid'
}

/** input type for updating data in table "channel_web_chat" */
export type channel_web_chat_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  token?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  uuid?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type channel_web_chat_stddev_fields = {
  __typename?: 'channel_web_chat_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type channel_web_chat_stddev_pop_fields = {
  __typename?: 'channel_web_chat_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type channel_web_chat_stddev_samp_fields = {
  __typename?: 'channel_web_chat_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "channel_web_chat" */
export type channel_web_chat_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: channel_web_chat_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type channel_web_chat_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  token?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  uuid?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type channel_web_chat_sum_fields = {
  __typename?: 'channel_web_chat_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "channel_web_chat" */
export enum channel_web_chat_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  token = 'token',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  uuid = 'uuid'
}

export type channel_web_chat_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<channel_web_chat_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<channel_web_chat_set_input>;
  /** filter the rows which have to be updated */
  where: channel_web_chat_bool_exp;
};

/** aggregate var_pop on columns */
export type channel_web_chat_var_pop_fields = {
  __typename?: 'channel_web_chat_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type channel_web_chat_var_samp_fields = {
  __typename?: 'channel_web_chat_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type channel_web_chat_variance_fields = {
  __typename?: 'channel_web_chat_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "channel_whatsapp" */
export type channel_whatsapp = {
  __typename?: 'channel_whatsapp';
  access_token: Scalars['String'];
  /** An object relationship */
  account?: Maybe<accounts>;
  account_id: Scalars['Int'];
  business_account_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  enable_bot_flow: Scalars['Boolean'];
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout: Scalars['Int'];
  id: Scalars['bigint'];
  phone_number: Scalars['String'];
  phone_number_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "channel_whatsapp" */
export type channel_whatsapp_aggregate = {
  __typename?: 'channel_whatsapp_aggregate';
  aggregate?: Maybe<channel_whatsapp_aggregate_fields>;
  nodes: Array<channel_whatsapp>;
};

/** aggregate fields of "channel_whatsapp" */
export type channel_whatsapp_aggregate_fields = {
  __typename?: 'channel_whatsapp_aggregate_fields';
  avg?: Maybe<channel_whatsapp_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<channel_whatsapp_max_fields>;
  min?: Maybe<channel_whatsapp_min_fields>;
  stddev?: Maybe<channel_whatsapp_stddev_fields>;
  stddev_pop?: Maybe<channel_whatsapp_stddev_pop_fields>;
  stddev_samp?: Maybe<channel_whatsapp_stddev_samp_fields>;
  sum?: Maybe<channel_whatsapp_sum_fields>;
  var_pop?: Maybe<channel_whatsapp_var_pop_fields>;
  var_samp?: Maybe<channel_whatsapp_var_samp_fields>;
  variance?: Maybe<channel_whatsapp_variance_fields>;
};


/** aggregate fields of "channel_whatsapp" */
export type channel_whatsapp_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<channel_whatsapp_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type channel_whatsapp_avg_fields = {
  __typename?: 'channel_whatsapp_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "channel_whatsapp". All fields are combined with a logical 'AND'. */
export type channel_whatsapp_bool_exp = {
  _and?: InputMaybe<Array<channel_whatsapp_bool_exp>>;
  _not?: InputMaybe<channel_whatsapp_bool_exp>;
  _or?: InputMaybe<Array<channel_whatsapp_bool_exp>>;
  access_token?: InputMaybe<String_comparison_exp>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<Int_comparison_exp>;
  business_account_id?: InputMaybe<String_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  enable_bot_flow?: InputMaybe<Boolean_comparison_exp>;
  flow_session_timeout?: InputMaybe<Int_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  phone_number?: InputMaybe<String_comparison_exp>;
  phone_number_id?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "channel_whatsapp" */
export enum channel_whatsapp_constraint {
  /** unique or primary key constraint on columns "account_id", "phone_number_id", "business_account_id" */
  channel_whatsapp_phone_number_id_business_account_id_accoun_key = 'channel_whatsapp_phone_number_id_business_account_id_accoun_key',
  /** unique or primary key constraint on columns "phone_number" */
  channel_whatsapp_phone_number_key = 'channel_whatsapp_phone_number_key',
  /** unique or primary key constraint on columns "id" */
  channel_whatsapp_pkey = 'channel_whatsapp_pkey'
}

/** input type for incrementing numeric columns in table "channel_whatsapp" */
export type channel_whatsapp_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "channel_whatsapp" */
export type channel_whatsapp_insert_input = {
  access_token?: InputMaybe<Scalars['String']>;
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['Int']>;
  business_account_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  enable_bot_flow?: InputMaybe<Scalars['Boolean']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  phone_number?: InputMaybe<Scalars['String']>;
  phone_number_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type channel_whatsapp_max_fields = {
  __typename?: 'channel_whatsapp_max_fields';
  access_token?: Maybe<Scalars['String']>;
  account_id?: Maybe<Scalars['Int']>;
  business_account_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  phone_number?: Maybe<Scalars['String']>;
  phone_number_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type channel_whatsapp_min_fields = {
  __typename?: 'channel_whatsapp_min_fields';
  access_token?: Maybe<Scalars['String']>;
  account_id?: Maybe<Scalars['Int']>;
  business_account_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  phone_number?: Maybe<Scalars['String']>;
  phone_number_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "channel_whatsapp" */
export type channel_whatsapp_mutation_response = {
  __typename?: 'channel_whatsapp_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<channel_whatsapp>;
};

/** on_conflict condition type for table "channel_whatsapp" */
export type channel_whatsapp_on_conflict = {
  constraint: channel_whatsapp_constraint;
  update_columns?: Array<channel_whatsapp_update_column>;
  where?: InputMaybe<channel_whatsapp_bool_exp>;
};

/** Ordering options when selecting data from "channel_whatsapp". */
export type channel_whatsapp_order_by = {
  access_token?: InputMaybe<order_by>;
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  business_account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  enable_bot_flow?: InputMaybe<order_by>;
  flow_session_timeout?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  phone_number?: InputMaybe<order_by>;
  phone_number_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: channel_whatsapp */
export type channel_whatsapp_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "channel_whatsapp" */
export enum channel_whatsapp_select_column {
  /** column name */
  access_token = 'access_token',
  /** column name */
  account_id = 'account_id',
  /** column name */
  business_account_id = 'business_account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  enable_bot_flow = 'enable_bot_flow',
  /** column name */
  flow_session_timeout = 'flow_session_timeout',
  /** column name */
  id = 'id',
  /** column name */
  phone_number = 'phone_number',
  /** column name */
  phone_number_id = 'phone_number_id',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "channel_whatsapp" */
export type channel_whatsapp_set_input = {
  access_token?: InputMaybe<Scalars['String']>;
  account_id?: InputMaybe<Scalars['Int']>;
  business_account_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  enable_bot_flow?: InputMaybe<Scalars['Boolean']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  phone_number?: InputMaybe<Scalars['String']>;
  phone_number_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type channel_whatsapp_stddev_fields = {
  __typename?: 'channel_whatsapp_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type channel_whatsapp_stddev_pop_fields = {
  __typename?: 'channel_whatsapp_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type channel_whatsapp_stddev_samp_fields = {
  __typename?: 'channel_whatsapp_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "channel_whatsapp" */
export type channel_whatsapp_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: channel_whatsapp_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type channel_whatsapp_stream_cursor_value_input = {
  access_token?: InputMaybe<Scalars['String']>;
  account_id?: InputMaybe<Scalars['Int']>;
  business_account_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  enable_bot_flow?: InputMaybe<Scalars['Boolean']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  phone_number?: InputMaybe<Scalars['String']>;
  phone_number_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type channel_whatsapp_sum_fields = {
  __typename?: 'channel_whatsapp_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "channel_whatsapp" */
export enum channel_whatsapp_update_column {
  /** column name */
  access_token = 'access_token',
  /** column name */
  account_id = 'account_id',
  /** column name */
  business_account_id = 'business_account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  enable_bot_flow = 'enable_bot_flow',
  /** column name */
  flow_session_timeout = 'flow_session_timeout',
  /** column name */
  id = 'id',
  /** column name */
  phone_number = 'phone_number',
  /** column name */
  phone_number_id = 'phone_number_id',
  /** column name */
  updated_at = 'updated_at'
}

export type channel_whatsapp_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<channel_whatsapp_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<channel_whatsapp_set_input>;
  /** filter the rows which have to be updated */
  where: channel_whatsapp_bool_exp;
};

/** aggregate var_pop on columns */
export type channel_whatsapp_var_pop_fields = {
  __typename?: 'channel_whatsapp_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type channel_whatsapp_var_samp_fields = {
  __typename?: 'channel_whatsapp_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type channel_whatsapp_variance_fields = {
  __typename?: 'channel_whatsapp_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** Duration in minute. If the contact's last response exceeds this duration, a new conversation with the flow will be created. */
  flow_session_timeout?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to compare columns of type "citext". All fields are combined with logical 'AND'. */
export type citext_comparison_exp = {
  _eq?: InputMaybe<Scalars['citext']>;
  _gt?: InputMaybe<Scalars['citext']>;
  _gte?: InputMaybe<Scalars['citext']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['citext']>;
  _in?: InputMaybe<Array<Scalars['citext']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['citext']>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['citext']>;
  _lt?: InputMaybe<Scalars['citext']>;
  _lte?: InputMaybe<Scalars['citext']>;
  _neq?: InputMaybe<Scalars['citext']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['citext']>;
  _nin?: InputMaybe<Array<Scalars['citext']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['citext']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['citext']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['citext']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['citext']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['citext']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['citext']>;
};

/** Contacts which are available for active inboxes. */
export type contact_inboxes = {
  __typename?: 'contact_inboxes';
  contact_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  inbox_id: Scalars['Int'];
  source_id?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "contact_inboxes" */
export type contact_inboxes_aggregate = {
  __typename?: 'contact_inboxes_aggregate';
  aggregate?: Maybe<contact_inboxes_aggregate_fields>;
  nodes: Array<contact_inboxes>;
};

export type contact_inboxes_aggregate_bool_exp = {
  count?: InputMaybe<contact_inboxes_aggregate_bool_exp_count>;
};

export type contact_inboxes_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<contact_inboxes_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<contact_inboxes_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "contact_inboxes" */
export type contact_inboxes_aggregate_fields = {
  __typename?: 'contact_inboxes_aggregate_fields';
  avg?: Maybe<contact_inboxes_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<contact_inboxes_max_fields>;
  min?: Maybe<contact_inboxes_min_fields>;
  stddev?: Maybe<contact_inboxes_stddev_fields>;
  stddev_pop?: Maybe<contact_inboxes_stddev_pop_fields>;
  stddev_samp?: Maybe<contact_inboxes_stddev_samp_fields>;
  sum?: Maybe<contact_inboxes_sum_fields>;
  var_pop?: Maybe<contact_inboxes_var_pop_fields>;
  var_samp?: Maybe<contact_inboxes_var_samp_fields>;
  variance?: Maybe<contact_inboxes_variance_fields>;
};


/** aggregate fields of "contact_inboxes" */
export type contact_inboxes_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<contact_inboxes_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "contact_inboxes" */
export type contact_inboxes_aggregate_order_by = {
  avg?: InputMaybe<contact_inboxes_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<contact_inboxes_max_order_by>;
  min?: InputMaybe<contact_inboxes_min_order_by>;
  stddev?: InputMaybe<contact_inboxes_stddev_order_by>;
  stddev_pop?: InputMaybe<contact_inboxes_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<contact_inboxes_stddev_samp_order_by>;
  sum?: InputMaybe<contact_inboxes_sum_order_by>;
  var_pop?: InputMaybe<contact_inboxes_var_pop_order_by>;
  var_samp?: InputMaybe<contact_inboxes_var_samp_order_by>;
  variance?: InputMaybe<contact_inboxes_variance_order_by>;
};

/** input type for inserting array relation for remote table "contact_inboxes" */
export type contact_inboxes_arr_rel_insert_input = {
  data: Array<contact_inboxes_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<contact_inboxes_on_conflict>;
};

/** aggregate avg on columns */
export type contact_inboxes_avg_fields = {
  __typename?: 'contact_inboxes_avg_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "contact_inboxes" */
export type contact_inboxes_avg_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "contact_inboxes". All fields are combined with a logical 'AND'. */
export type contact_inboxes_bool_exp = {
  _and?: InputMaybe<Array<contact_inboxes_bool_exp>>;
  _not?: InputMaybe<contact_inboxes_bool_exp>;
  _or?: InputMaybe<Array<contact_inboxes_bool_exp>>;
  contact_id?: InputMaybe<Int_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  inbox_id?: InputMaybe<Int_comparison_exp>;
  source_id?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "contact_inboxes" */
export enum contact_inboxes_constraint {
  /** unique or primary key constraint on columns "contact_id", "inbox_id" */
  contact_inboxes_contact_id_inbox_id_key = 'contact_inboxes_contact_id_inbox_id_key',
  /** unique or primary key constraint on columns "id" */
  contact_inboxes_pkey = 'contact_inboxes_pkey'
}

/** input type for incrementing numeric columns in table "contact_inboxes" */
export type contact_inboxes_inc_input = {
  contact_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  inbox_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "contact_inboxes" */
export type contact_inboxes_insert_input = {
  contact_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  inbox_id?: InputMaybe<Scalars['Int']>;
  source_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type contact_inboxes_max_fields = {
  __typename?: 'contact_inboxes_max_fields';
  contact_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inbox_id?: Maybe<Scalars['Int']>;
  source_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "contact_inboxes" */
export type contact_inboxes_max_order_by = {
  contact_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  source_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type contact_inboxes_min_fields = {
  __typename?: 'contact_inboxes_min_fields';
  contact_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inbox_id?: Maybe<Scalars['Int']>;
  source_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "contact_inboxes" */
export type contact_inboxes_min_order_by = {
  contact_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  source_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** response of any mutation on the table "contact_inboxes" */
export type contact_inboxes_mutation_response = {
  __typename?: 'contact_inboxes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<contact_inboxes>;
};

/** on_conflict condition type for table "contact_inboxes" */
export type contact_inboxes_on_conflict = {
  constraint: contact_inboxes_constraint;
  update_columns?: Array<contact_inboxes_update_column>;
  where?: InputMaybe<contact_inboxes_bool_exp>;
};

/** Ordering options when selecting data from "contact_inboxes". */
export type contact_inboxes_order_by = {
  contact_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  source_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: contact_inboxes */
export type contact_inboxes_pk_columns_input = {
  id: Scalars['Int'];
};

/** select columns of table "contact_inboxes" */
export enum contact_inboxes_select_column {
  /** column name */
  contact_id = 'contact_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  inbox_id = 'inbox_id',
  /** column name */
  source_id = 'source_id',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "contact_inboxes" */
export type contact_inboxes_set_input = {
  contact_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  inbox_id?: InputMaybe<Scalars['Int']>;
  source_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type contact_inboxes_stddev_fields = {
  __typename?: 'contact_inboxes_stddev_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "contact_inboxes" */
export type contact_inboxes_stddev_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type contact_inboxes_stddev_pop_fields = {
  __typename?: 'contact_inboxes_stddev_pop_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "contact_inboxes" */
export type contact_inboxes_stddev_pop_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type contact_inboxes_stddev_samp_fields = {
  __typename?: 'contact_inboxes_stddev_samp_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "contact_inboxes" */
export type contact_inboxes_stddev_samp_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "contact_inboxes" */
export type contact_inboxes_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: contact_inboxes_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type contact_inboxes_stream_cursor_value_input = {
  contact_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  inbox_id?: InputMaybe<Scalars['Int']>;
  source_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type contact_inboxes_sum_fields = {
  __typename?: 'contact_inboxes_sum_fields';
  contact_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  inbox_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "contact_inboxes" */
export type contact_inboxes_sum_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
};

/** update columns of table "contact_inboxes" */
export enum contact_inboxes_update_column {
  /** column name */
  contact_id = 'contact_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  inbox_id = 'inbox_id',
  /** column name */
  source_id = 'source_id',
  /** column name */
  updated_at = 'updated_at'
}

export type contact_inboxes_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<contact_inboxes_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<contact_inboxes_set_input>;
  /** filter the rows which have to be updated */
  where: contact_inboxes_bool_exp;
};

/** aggregate var_pop on columns */
export type contact_inboxes_var_pop_fields = {
  __typename?: 'contact_inboxes_var_pop_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "contact_inboxes" */
export type contact_inboxes_var_pop_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type contact_inboxes_var_samp_fields = {
  __typename?: 'contact_inboxes_var_samp_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "contact_inboxes" */
export type contact_inboxes_var_samp_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type contact_inboxes_variance_fields = {
  __typename?: 'contact_inboxes_variance_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "contact_inboxes" */
export type contact_inboxes_variance_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
};

/** columns and relationships of "contact_tags" */
export type contact_tags = {
  __typename?: 'contact_tags';
  /** An object relationship */
  contact: contacts;
  contact_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  /** An object relationship */
  tag: tags;
  tag_id: Scalars['bigint'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "contact_tags" */
export type contact_tags_aggregate = {
  __typename?: 'contact_tags_aggregate';
  aggregate?: Maybe<contact_tags_aggregate_fields>;
  nodes: Array<contact_tags>;
};

export type contact_tags_aggregate_bool_exp = {
  count?: InputMaybe<contact_tags_aggregate_bool_exp_count>;
};

export type contact_tags_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<contact_tags_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<contact_tags_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "contact_tags" */
export type contact_tags_aggregate_fields = {
  __typename?: 'contact_tags_aggregate_fields';
  avg?: Maybe<contact_tags_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<contact_tags_max_fields>;
  min?: Maybe<contact_tags_min_fields>;
  stddev?: Maybe<contact_tags_stddev_fields>;
  stddev_pop?: Maybe<contact_tags_stddev_pop_fields>;
  stddev_samp?: Maybe<contact_tags_stddev_samp_fields>;
  sum?: Maybe<contact_tags_sum_fields>;
  var_pop?: Maybe<contact_tags_var_pop_fields>;
  var_samp?: Maybe<contact_tags_var_samp_fields>;
  variance?: Maybe<contact_tags_variance_fields>;
};


/** aggregate fields of "contact_tags" */
export type contact_tags_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<contact_tags_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "contact_tags" */
export type contact_tags_aggregate_order_by = {
  avg?: InputMaybe<contact_tags_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<contact_tags_max_order_by>;
  min?: InputMaybe<contact_tags_min_order_by>;
  stddev?: InputMaybe<contact_tags_stddev_order_by>;
  stddev_pop?: InputMaybe<contact_tags_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<contact_tags_stddev_samp_order_by>;
  sum?: InputMaybe<contact_tags_sum_order_by>;
  var_pop?: InputMaybe<contact_tags_var_pop_order_by>;
  var_samp?: InputMaybe<contact_tags_var_samp_order_by>;
  variance?: InputMaybe<contact_tags_variance_order_by>;
};

/** input type for inserting array relation for remote table "contact_tags" */
export type contact_tags_arr_rel_insert_input = {
  data: Array<contact_tags_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<contact_tags_on_conflict>;
};

/** aggregate avg on columns */
export type contact_tags_avg_fields = {
  __typename?: 'contact_tags_avg_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "contact_tags" */
export type contact_tags_avg_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "contact_tags". All fields are combined with a logical 'AND'. */
export type contact_tags_bool_exp = {
  _and?: InputMaybe<Array<contact_tags_bool_exp>>;
  _not?: InputMaybe<contact_tags_bool_exp>;
  _or?: InputMaybe<Array<contact_tags_bool_exp>>;
  contact?: InputMaybe<contacts_bool_exp>;
  contact_id?: InputMaybe<Int_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  tag?: InputMaybe<tags_bool_exp>;
  tag_id?: InputMaybe<bigint_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "contact_tags" */
export enum contact_tags_constraint {
  /** unique or primary key constraint on columns "contact_id", "tag_id" */
  contact_tags_contact_id_tag_id_key = 'contact_tags_contact_id_tag_id_key',
  /** unique or primary key constraint on columns "id" */
  contact_tags_pkey = 'contact_tags_pkey'
}

/** input type for incrementing numeric columns in table "contact_tags" */
export type contact_tags_inc_input = {
  contact_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "contact_tags" */
export type contact_tags_insert_input = {
  contact?: InputMaybe<contacts_obj_rel_insert_input>;
  contact_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag?: InputMaybe<tags_obj_rel_insert_input>;
  tag_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type contact_tags_max_fields = {
  __typename?: 'contact_tags_max_fields';
  contact_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  tag_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "contact_tags" */
export type contact_tags_max_order_by = {
  contact_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type contact_tags_min_fields = {
  __typename?: 'contact_tags_min_fields';
  contact_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  tag_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "contact_tags" */
export type contact_tags_min_order_by = {
  contact_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** response of any mutation on the table "contact_tags" */
export type contact_tags_mutation_response = {
  __typename?: 'contact_tags_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<contact_tags>;
};

/** on_conflict condition type for table "contact_tags" */
export type contact_tags_on_conflict = {
  constraint: contact_tags_constraint;
  update_columns?: Array<contact_tags_update_column>;
  where?: InputMaybe<contact_tags_bool_exp>;
};

/** Ordering options when selecting data from "contact_tags". */
export type contact_tags_order_by = {
  contact?: InputMaybe<contacts_order_by>;
  contact_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag?: InputMaybe<tags_order_by>;
  tag_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: contact_tags */
export type contact_tags_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "contact_tags" */
export enum contact_tags_select_column {
  /** column name */
  contact_id = 'contact_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  tag_id = 'tag_id',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "contact_tags" */
export type contact_tags_set_input = {
  contact_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type contact_tags_stddev_fields = {
  __typename?: 'contact_tags_stddev_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "contact_tags" */
export type contact_tags_stddev_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type contact_tags_stddev_pop_fields = {
  __typename?: 'contact_tags_stddev_pop_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "contact_tags" */
export type contact_tags_stddev_pop_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type contact_tags_stddev_samp_fields = {
  __typename?: 'contact_tags_stddev_samp_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "contact_tags" */
export type contact_tags_stddev_samp_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "contact_tags" */
export type contact_tags_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: contact_tags_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type contact_tags_stream_cursor_value_input = {
  contact_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type contact_tags_sum_fields = {
  __typename?: 'contact_tags_sum_fields';
  contact_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  tag_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "contact_tags" */
export type contact_tags_sum_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** update columns of table "contact_tags" */
export enum contact_tags_update_column {
  /** column name */
  contact_id = 'contact_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  tag_id = 'tag_id',
  /** column name */
  updated_at = 'updated_at'
}

export type contact_tags_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<contact_tags_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<contact_tags_set_input>;
  /** filter the rows which have to be updated */
  where: contact_tags_bool_exp;
};

/** aggregate var_pop on columns */
export type contact_tags_var_pop_fields = {
  __typename?: 'contact_tags_var_pop_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "contact_tags" */
export type contact_tags_var_pop_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type contact_tags_var_samp_fields = {
  __typename?: 'contact_tags_var_samp_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "contact_tags" */
export type contact_tags_var_samp_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type contact_tags_variance_fields = {
  __typename?: 'contact_tags_variance_fields';
  contact_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "contact_tags" */
export type contact_tags_variance_order_by = {
  contact_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** All type of contact list. */
export type contacts = {
  __typename?: 'contacts';
  account_id?: Maybe<Scalars['bigint']>;
  city?: Maybe<Scalars['String']>;
  /** An array relationship */
  contact_inboxes: Array<contact_inboxes>;
  /** An aggregate relationship */
  contact_inboxes_aggregate: contact_inboxes_aggregate;
  /** An array relationship */
  contact_tags: Array<contact_tags>;
  /** An aggregate relationship */
  contact_tags_aggregate: contact_tags_aggregate;
  /** An array relationship */
  conversations: Array<conversations>;
  /** An aggregate relationship */
  conversations_aggregate: conversations_aggregate;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  created_from?: Maybe<Scalars['String']>;
  /** An array relationship */
  csat_feedbacks: Array<csat_feedback>;
  /** An aggregate relationship */
  csat_feedbacks_aggregate: csat_feedback_aggregate;
  email?: Maybe<Scalars['String']>;
  external_id?: Maybe<Scalars['String']>;
  /** male, female */
  gender?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  is_merge?: Maybe<Scalars['Boolean']>;
  last_activity_at?: Maybe<Scalars['timestamptz']>;
  latitude?: Maybe<Scalars['numeric']>;
  longitude?: Maybe<Scalars['numeric']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  preferred_language: Scalars['String'];
  profile_facebook?: Maybe<Scalars['jsonb']>;
  profile_google_business: Scalars['jsonb'];
  profile_instagram: Scalars['jsonb'];
  profile_twitter?: Maybe<Scalars['jsonb']>;
  social_profiles?: Maybe<Scalars['jsonb']>;
  /** Contains the full information of the contact */
  source?: Maybe<Scalars['jsonb']>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  source_type?: Maybe<Scalars['String']>;
  /** An array relationship */
  tickets: Array<ticket>;
  /** An aggregate relationship */
  tickets_aggregate: ticket_aggregate;
  updated_at: Scalars['timestamptz'];
};


/** All type of contact list. */
export type contactscontact_inboxesArgs = {
  distinct_on?: InputMaybe<Array<contact_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_inboxes_order_by>>;
  where?: InputMaybe<contact_inboxes_bool_exp>;
};


/** All type of contact list. */
export type contactscontact_inboxes_aggregateArgs = {
  distinct_on?: InputMaybe<Array<contact_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_inboxes_order_by>>;
  where?: InputMaybe<contact_inboxes_bool_exp>;
};


/** All type of contact list. */
export type contactscontact_tagsArgs = {
  distinct_on?: InputMaybe<Array<contact_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_tags_order_by>>;
  where?: InputMaybe<contact_tags_bool_exp>;
};


/** All type of contact list. */
export type contactscontact_tags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<contact_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_tags_order_by>>;
  where?: InputMaybe<contact_tags_bool_exp>;
};


/** All type of contact list. */
export type contactsconversationsArgs = {
  distinct_on?: InputMaybe<Array<conversations_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversations_order_by>>;
  where?: InputMaybe<conversations_bool_exp>;
};


/** All type of contact list. */
export type contactsconversations_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversations_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversations_order_by>>;
  where?: InputMaybe<conversations_bool_exp>;
};


/** All type of contact list. */
export type contactscsat_feedbacksArgs = {
  distinct_on?: InputMaybe<Array<csat_feedback_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<csat_feedback_order_by>>;
  where?: InputMaybe<csat_feedback_bool_exp>;
};


/** All type of contact list. */
export type contactscsat_feedbacks_aggregateArgs = {
  distinct_on?: InputMaybe<Array<csat_feedback_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<csat_feedback_order_by>>;
  where?: InputMaybe<csat_feedback_bool_exp>;
};


/** All type of contact list. */
export type contactsprofile_facebookArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** All type of contact list. */
export type contactsprofile_google_businessArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** All type of contact list. */
export type contactsprofile_instagramArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** All type of contact list. */
export type contactsprofile_twitterArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** All type of contact list. */
export type contactssocial_profilesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** All type of contact list. */
export type contactssourceArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** All type of contact list. */
export type contactsticketsArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};


/** All type of contact list. */
export type contactstickets_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};

/** aggregated selection of "contacts" */
export type contacts_aggregate = {
  __typename?: 'contacts_aggregate';
  aggregate?: Maybe<contacts_aggregate_fields>;
  nodes: Array<contacts>;
};

/** aggregate fields of "contacts" */
export type contacts_aggregate_fields = {
  __typename?: 'contacts_aggregate_fields';
  avg?: Maybe<contacts_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<contacts_max_fields>;
  min?: Maybe<contacts_min_fields>;
  stddev?: Maybe<contacts_stddev_fields>;
  stddev_pop?: Maybe<contacts_stddev_pop_fields>;
  stddev_samp?: Maybe<contacts_stddev_samp_fields>;
  sum?: Maybe<contacts_sum_fields>;
  var_pop?: Maybe<contacts_var_pop_fields>;
  var_samp?: Maybe<contacts_var_samp_fields>;
  variance?: Maybe<contacts_variance_fields>;
};


/** aggregate fields of "contacts" */
export type contacts_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<contacts_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type contacts_append_input = {
  profile_facebook?: InputMaybe<Scalars['jsonb']>;
  profile_google_business?: InputMaybe<Scalars['jsonb']>;
  profile_instagram?: InputMaybe<Scalars['jsonb']>;
  profile_twitter?: InputMaybe<Scalars['jsonb']>;
  social_profiles?: InputMaybe<Scalars['jsonb']>;
  /** Contains the full information of the contact */
  source?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type contacts_avg_fields = {
  __typename?: 'contacts_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  latitude?: Maybe<Scalars['Float']>;
  longitude?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "contacts". All fields are combined with a logical 'AND'. */
export type contacts_bool_exp = {
  _and?: InputMaybe<Array<contacts_bool_exp>>;
  _not?: InputMaybe<contacts_bool_exp>;
  _or?: InputMaybe<Array<contacts_bool_exp>>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  city?: InputMaybe<String_comparison_exp>;
  contact_inboxes?: InputMaybe<contact_inboxes_bool_exp>;
  contact_inboxes_aggregate?: InputMaybe<contact_inboxes_aggregate_bool_exp>;
  contact_tags?: InputMaybe<contact_tags_bool_exp>;
  contact_tags_aggregate?: InputMaybe<contact_tags_aggregate_bool_exp>;
  conversations?: InputMaybe<conversations_bool_exp>;
  conversations_aggregate?: InputMaybe<conversations_aggregate_bool_exp>;
  country?: InputMaybe<String_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  created_from?: InputMaybe<String_comparison_exp>;
  csat_feedbacks?: InputMaybe<csat_feedback_bool_exp>;
  csat_feedbacks_aggregate?: InputMaybe<csat_feedback_aggregate_bool_exp>;
  email?: InputMaybe<String_comparison_exp>;
  external_id?: InputMaybe<String_comparison_exp>;
  gender?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  is_merge?: InputMaybe<Boolean_comparison_exp>;
  last_activity_at?: InputMaybe<timestamptz_comparison_exp>;
  latitude?: InputMaybe<numeric_comparison_exp>;
  longitude?: InputMaybe<numeric_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  phone_number?: InputMaybe<String_comparison_exp>;
  preferred_language?: InputMaybe<String_comparison_exp>;
  profile_facebook?: InputMaybe<jsonb_comparison_exp>;
  profile_google_business?: InputMaybe<jsonb_comparison_exp>;
  profile_instagram?: InputMaybe<jsonb_comparison_exp>;
  profile_twitter?: InputMaybe<jsonb_comparison_exp>;
  social_profiles?: InputMaybe<jsonb_comparison_exp>;
  source?: InputMaybe<jsonb_comparison_exp>;
  source_type?: InputMaybe<String_comparison_exp>;
  tickets?: InputMaybe<ticket_bool_exp>;
  tickets_aggregate?: InputMaybe<ticket_aggregate_bool_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "contacts" */
export enum contacts_constraint {
  /** unique or primary key constraint on columns "account_id", "external_id" */
  contacts_account_id_external_id_key = 'contacts_account_id_external_id_key',
  /** unique or primary key constraint on columns "account_id", "source_type", "phone_number", "is_merge" */
  contacts_account_id_phone_number_source_type_is_merge_key = 'contacts_account_id_phone_number_source_type_is_merge_key',
  /** unique or primary key constraint on columns "account_id", "phone_number", "is_merge" */
  contacts_phone_number_account_id_is_merge_key = 'contacts_phone_number_account_id_is_merge_key',
  /** unique or primary key constraint on columns "id" */
  contacts_pkey = 'contacts_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type contacts_delete_at_path_input = {
  profile_facebook?: InputMaybe<Array<Scalars['String']>>;
  profile_google_business?: InputMaybe<Array<Scalars['String']>>;
  profile_instagram?: InputMaybe<Array<Scalars['String']>>;
  profile_twitter?: InputMaybe<Array<Scalars['String']>>;
  social_profiles?: InputMaybe<Array<Scalars['String']>>;
  /** Contains the full information of the contact */
  source?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type contacts_delete_elem_input = {
  profile_facebook?: InputMaybe<Scalars['Int']>;
  profile_google_business?: InputMaybe<Scalars['Int']>;
  profile_instagram?: InputMaybe<Scalars['Int']>;
  profile_twitter?: InputMaybe<Scalars['Int']>;
  social_profiles?: InputMaybe<Scalars['Int']>;
  /** Contains the full information of the contact */
  source?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type contacts_delete_key_input = {
  profile_facebook?: InputMaybe<Scalars['String']>;
  profile_google_business?: InputMaybe<Scalars['String']>;
  profile_instagram?: InputMaybe<Scalars['String']>;
  profile_twitter?: InputMaybe<Scalars['String']>;
  social_profiles?: InputMaybe<Scalars['String']>;
  /** Contains the full information of the contact */
  source?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "contacts" */
export type contacts_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['Int']>;
  latitude?: InputMaybe<Scalars['numeric']>;
  longitude?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "contacts" */
export type contacts_insert_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  city?: InputMaybe<Scalars['String']>;
  contact_inboxes?: InputMaybe<contact_inboxes_arr_rel_insert_input>;
  contact_tags?: InputMaybe<contact_tags_arr_rel_insert_input>;
  conversations?: InputMaybe<conversations_arr_rel_insert_input>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_from?: InputMaybe<Scalars['String']>;
  csat_feedbacks?: InputMaybe<csat_feedback_arr_rel_insert_input>;
  email?: InputMaybe<Scalars['String']>;
  external_id?: InputMaybe<Scalars['String']>;
  /** male, female */
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  is_merge?: InputMaybe<Scalars['Boolean']>;
  last_activity_at?: InputMaybe<Scalars['timestamptz']>;
  latitude?: InputMaybe<Scalars['numeric']>;
  longitude?: InputMaybe<Scalars['numeric']>;
  name?: InputMaybe<Scalars['String']>;
  phone_number?: InputMaybe<Scalars['String']>;
  preferred_language?: InputMaybe<Scalars['String']>;
  profile_facebook?: InputMaybe<Scalars['jsonb']>;
  profile_google_business?: InputMaybe<Scalars['jsonb']>;
  profile_instagram?: InputMaybe<Scalars['jsonb']>;
  profile_twitter?: InputMaybe<Scalars['jsonb']>;
  social_profiles?: InputMaybe<Scalars['jsonb']>;
  /** Contains the full information of the contact */
  source?: InputMaybe<Scalars['jsonb']>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  source_type?: InputMaybe<Scalars['String']>;
  tickets?: InputMaybe<ticket_arr_rel_insert_input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type contacts_max_fields = {
  __typename?: 'contacts_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_from?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  external_id?: Maybe<Scalars['String']>;
  /** male, female */
  gender?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  last_activity_at?: Maybe<Scalars['timestamptz']>;
  latitude?: Maybe<Scalars['numeric']>;
  longitude?: Maybe<Scalars['numeric']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  preferred_language?: Maybe<Scalars['String']>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  source_type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type contacts_min_fields = {
  __typename?: 'contacts_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_from?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  external_id?: Maybe<Scalars['String']>;
  /** male, female */
  gender?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  last_activity_at?: Maybe<Scalars['timestamptz']>;
  latitude?: Maybe<Scalars['numeric']>;
  longitude?: Maybe<Scalars['numeric']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  preferred_language?: Maybe<Scalars['String']>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  source_type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "contacts" */
export type contacts_mutation_response = {
  __typename?: 'contacts_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<contacts>;
};

/** input type for inserting object relation for remote table "contacts" */
export type contacts_obj_rel_insert_input = {
  data: contacts_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<contacts_on_conflict>;
};

/** on_conflict condition type for table "contacts" */
export type contacts_on_conflict = {
  constraint: contacts_constraint;
  update_columns?: Array<contacts_update_column>;
  where?: InputMaybe<contacts_bool_exp>;
};

/** Ordering options when selecting data from "contacts". */
export type contacts_order_by = {
  account_id?: InputMaybe<order_by>;
  city?: InputMaybe<order_by>;
  contact_inboxes_aggregate?: InputMaybe<contact_inboxes_aggregate_order_by>;
  contact_tags_aggregate?: InputMaybe<contact_tags_aggregate_order_by>;
  conversations_aggregate?: InputMaybe<conversations_aggregate_order_by>;
  country?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_from?: InputMaybe<order_by>;
  csat_feedbacks_aggregate?: InputMaybe<csat_feedback_aggregate_order_by>;
  email?: InputMaybe<order_by>;
  external_id?: InputMaybe<order_by>;
  gender?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  is_merge?: InputMaybe<order_by>;
  last_activity_at?: InputMaybe<order_by>;
  latitude?: InputMaybe<order_by>;
  longitude?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  phone_number?: InputMaybe<order_by>;
  preferred_language?: InputMaybe<order_by>;
  profile_facebook?: InputMaybe<order_by>;
  profile_google_business?: InputMaybe<order_by>;
  profile_instagram?: InputMaybe<order_by>;
  profile_twitter?: InputMaybe<order_by>;
  social_profiles?: InputMaybe<order_by>;
  source?: InputMaybe<order_by>;
  source_type?: InputMaybe<order_by>;
  tickets_aggregate?: InputMaybe<ticket_aggregate_order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: contacts */
export type contacts_pk_columns_input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type contacts_prepend_input = {
  profile_facebook?: InputMaybe<Scalars['jsonb']>;
  profile_google_business?: InputMaybe<Scalars['jsonb']>;
  profile_instagram?: InputMaybe<Scalars['jsonb']>;
  profile_twitter?: InputMaybe<Scalars['jsonb']>;
  social_profiles?: InputMaybe<Scalars['jsonb']>;
  /** Contains the full information of the contact */
  source?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "contacts" */
export enum contacts_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  city = 'city',
  /** column name */
  country = 'country',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_from = 'created_from',
  /** column name */
  email = 'email',
  /** column name */
  external_id = 'external_id',
  /** column name */
  gender = 'gender',
  /** column name */
  id = 'id',
  /** column name */
  is_merge = 'is_merge',
  /** column name */
  last_activity_at = 'last_activity_at',
  /** column name */
  latitude = 'latitude',
  /** column name */
  longitude = 'longitude',
  /** column name */
  name = 'name',
  /** column name */
  phone_number = 'phone_number',
  /** column name */
  preferred_language = 'preferred_language',
  /** column name */
  profile_facebook = 'profile_facebook',
  /** column name */
  profile_google_business = 'profile_google_business',
  /** column name */
  profile_instagram = 'profile_instagram',
  /** column name */
  profile_twitter = 'profile_twitter',
  /** column name */
  social_profiles = 'social_profiles',
  /** column name */
  source = 'source',
  /** column name */
  source_type = 'source_type',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "contacts" */
export type contacts_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_from?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  external_id?: InputMaybe<Scalars['String']>;
  /** male, female */
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  is_merge?: InputMaybe<Scalars['Boolean']>;
  last_activity_at?: InputMaybe<Scalars['timestamptz']>;
  latitude?: InputMaybe<Scalars['numeric']>;
  longitude?: InputMaybe<Scalars['numeric']>;
  name?: InputMaybe<Scalars['String']>;
  phone_number?: InputMaybe<Scalars['String']>;
  preferred_language?: InputMaybe<Scalars['String']>;
  profile_facebook?: InputMaybe<Scalars['jsonb']>;
  profile_google_business?: InputMaybe<Scalars['jsonb']>;
  profile_instagram?: InputMaybe<Scalars['jsonb']>;
  profile_twitter?: InputMaybe<Scalars['jsonb']>;
  social_profiles?: InputMaybe<Scalars['jsonb']>;
  /** Contains the full information of the contact */
  source?: InputMaybe<Scalars['jsonb']>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  source_type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type contacts_stddev_fields = {
  __typename?: 'contacts_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  latitude?: Maybe<Scalars['Float']>;
  longitude?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type contacts_stddev_pop_fields = {
  __typename?: 'contacts_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  latitude?: Maybe<Scalars['Float']>;
  longitude?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type contacts_stddev_samp_fields = {
  __typename?: 'contacts_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  latitude?: Maybe<Scalars['Float']>;
  longitude?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "contacts" */
export type contacts_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: contacts_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type contacts_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_from?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  external_id?: InputMaybe<Scalars['String']>;
  /** male, female */
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  is_merge?: InputMaybe<Scalars['Boolean']>;
  last_activity_at?: InputMaybe<Scalars['timestamptz']>;
  latitude?: InputMaybe<Scalars['numeric']>;
  longitude?: InputMaybe<Scalars['numeric']>;
  name?: InputMaybe<Scalars['String']>;
  phone_number?: InputMaybe<Scalars['String']>;
  preferred_language?: InputMaybe<Scalars['String']>;
  profile_facebook?: InputMaybe<Scalars['jsonb']>;
  profile_google_business?: InputMaybe<Scalars['jsonb']>;
  profile_instagram?: InputMaybe<Scalars['jsonb']>;
  profile_twitter?: InputMaybe<Scalars['jsonb']>;
  social_profiles?: InputMaybe<Scalars['jsonb']>;
  /** Contains the full information of the contact */
  source?: InputMaybe<Scalars['jsonb']>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  source_type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type contacts_sum_fields = {
  __typename?: 'contacts_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['Int']>;
  latitude?: Maybe<Scalars['numeric']>;
  longitude?: Maybe<Scalars['numeric']>;
};

/** update columns of table "contacts" */
export enum contacts_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  city = 'city',
  /** column name */
  country = 'country',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_from = 'created_from',
  /** column name */
  email = 'email',
  /** column name */
  external_id = 'external_id',
  /** column name */
  gender = 'gender',
  /** column name */
  id = 'id',
  /** column name */
  is_merge = 'is_merge',
  /** column name */
  last_activity_at = 'last_activity_at',
  /** column name */
  latitude = 'latitude',
  /** column name */
  longitude = 'longitude',
  /** column name */
  name = 'name',
  /** column name */
  phone_number = 'phone_number',
  /** column name */
  preferred_language = 'preferred_language',
  /** column name */
  profile_facebook = 'profile_facebook',
  /** column name */
  profile_google_business = 'profile_google_business',
  /** column name */
  profile_instagram = 'profile_instagram',
  /** column name */
  profile_twitter = 'profile_twitter',
  /** column name */
  social_profiles = 'social_profiles',
  /** column name */
  source = 'source',
  /** column name */
  source_type = 'source_type',
  /** column name */
  updated_at = 'updated_at'
}

export type contacts_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<contacts_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<contacts_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<contacts_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<contacts_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<contacts_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<contacts_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<contacts_set_input>;
  /** filter the rows which have to be updated */
  where: contacts_bool_exp;
};

/** aggregate var_pop on columns */
export type contacts_var_pop_fields = {
  __typename?: 'contacts_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  latitude?: Maybe<Scalars['Float']>;
  longitude?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type contacts_var_samp_fields = {
  __typename?: 'contacts_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  latitude?: Maybe<Scalars['Float']>;
  longitude?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type contacts_variance_fields = {
  __typename?: 'contacts_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  latitude?: Maybe<Scalars['Float']>;
  longitude?: Maybe<Scalars['Float']>;
};

/** Stores all activity information done in a conversation */
export type conversation_activity_log = {
  __typename?: 'conversation_activity_log';
  /** An object relationship */
  activity_by?: Maybe<account_agents>;
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type: Scalars['Int'];
  closing_contact_reason_id?: Maybe<Scalars['bigint']>;
  closing_contact_reason_value?: Maybe<Scalars['jsonb']>;
  closing_description?: Maybe<Scalars['String']>;
  /** An object relationship */
  closing_ticket?: Maybe<ticket>;
  closing_ticket_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  conversation: conversations;
  conversation_id: Scalars['bigint'];
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  /** An object relationship */
  message?: Maybe<messages>;
  message_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  new_assigned_agent?: Maybe<account_agents>;
  new_assigned_agent_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  new_assigned_team?: Maybe<teams>;
  new_assigned_team_id?: Maybe<Scalars['bigint']>;
  new_status?: Maybe<Scalars['Int']>;
  /** An object relationship */
  old_assigned_agent?: Maybe<account_agents>;
  old_assigned_agent_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  old_assigned_team?: Maybe<teams>;
  old_assigned_team_id?: Maybe<Scalars['bigint']>;
  old_status?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['bigint']>;
  user_type: Scalars['String'];
};


/** Stores all activity information done in a conversation */
export type conversation_activity_logclosing_contact_reason_valueArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "conversation_activity_log" */
export type conversation_activity_log_aggregate = {
  __typename?: 'conversation_activity_log_aggregate';
  aggregate?: Maybe<conversation_activity_log_aggregate_fields>;
  nodes: Array<conversation_activity_log>;
};

export type conversation_activity_log_aggregate_bool_exp = {
  count?: InputMaybe<conversation_activity_log_aggregate_bool_exp_count>;
};

export type conversation_activity_log_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<conversation_activity_log_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<conversation_activity_log_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "conversation_activity_log" */
export type conversation_activity_log_aggregate_fields = {
  __typename?: 'conversation_activity_log_aggregate_fields';
  avg?: Maybe<conversation_activity_log_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<conversation_activity_log_max_fields>;
  min?: Maybe<conversation_activity_log_min_fields>;
  stddev?: Maybe<conversation_activity_log_stddev_fields>;
  stddev_pop?: Maybe<conversation_activity_log_stddev_pop_fields>;
  stddev_samp?: Maybe<conversation_activity_log_stddev_samp_fields>;
  sum?: Maybe<conversation_activity_log_sum_fields>;
  var_pop?: Maybe<conversation_activity_log_var_pop_fields>;
  var_samp?: Maybe<conversation_activity_log_var_samp_fields>;
  variance?: Maybe<conversation_activity_log_variance_fields>;
};


/** aggregate fields of "conversation_activity_log" */
export type conversation_activity_log_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<conversation_activity_log_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "conversation_activity_log" */
export type conversation_activity_log_aggregate_order_by = {
  avg?: InputMaybe<conversation_activity_log_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<conversation_activity_log_max_order_by>;
  min?: InputMaybe<conversation_activity_log_min_order_by>;
  stddev?: InputMaybe<conversation_activity_log_stddev_order_by>;
  stddev_pop?: InputMaybe<conversation_activity_log_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<conversation_activity_log_stddev_samp_order_by>;
  sum?: InputMaybe<conversation_activity_log_sum_order_by>;
  var_pop?: InputMaybe<conversation_activity_log_var_pop_order_by>;
  var_samp?: InputMaybe<conversation_activity_log_var_samp_order_by>;
  variance?: InputMaybe<conversation_activity_log_variance_order_by>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type conversation_activity_log_append_input = {
  closing_contact_reason_value?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "conversation_activity_log" */
export type conversation_activity_log_arr_rel_insert_input = {
  data: Array<conversation_activity_log_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<conversation_activity_log_on_conflict>;
};

/** aggregate avg on columns */
export type conversation_activity_log_avg_fields = {
  __typename?: 'conversation_activity_log_avg_fields';
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "conversation_activity_log" */
export type conversation_activity_log_avg_order_by = {
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "conversation_activity_log". All fields are combined with a logical 'AND'. */
export type conversation_activity_log_bool_exp = {
  _and?: InputMaybe<Array<conversation_activity_log_bool_exp>>;
  _not?: InputMaybe<conversation_activity_log_bool_exp>;
  _or?: InputMaybe<Array<conversation_activity_log_bool_exp>>;
  activity_by?: InputMaybe<account_agents_bool_exp>;
  activity_type?: InputMaybe<Int_comparison_exp>;
  closing_contact_reason_id?: InputMaybe<bigint_comparison_exp>;
  closing_contact_reason_value?: InputMaybe<jsonb_comparison_exp>;
  closing_description?: InputMaybe<String_comparison_exp>;
  closing_ticket?: InputMaybe<ticket_bool_exp>;
  closing_ticket_id?: InputMaybe<bigint_comparison_exp>;
  conversation?: InputMaybe<conversations_bool_exp>;
  conversation_id?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  message?: InputMaybe<messages_bool_exp>;
  message_id?: InputMaybe<bigint_comparison_exp>;
  new_assigned_agent?: InputMaybe<account_agents_bool_exp>;
  new_assigned_agent_id?: InputMaybe<bigint_comparison_exp>;
  new_assigned_team?: InputMaybe<teams_bool_exp>;
  new_assigned_team_id?: InputMaybe<bigint_comparison_exp>;
  new_status?: InputMaybe<Int_comparison_exp>;
  old_assigned_agent?: InputMaybe<account_agents_bool_exp>;
  old_assigned_agent_id?: InputMaybe<bigint_comparison_exp>;
  old_assigned_team?: InputMaybe<teams_bool_exp>;
  old_assigned_team_id?: InputMaybe<bigint_comparison_exp>;
  old_status?: InputMaybe<Int_comparison_exp>;
  user_id?: InputMaybe<bigint_comparison_exp>;
  user_type?: InputMaybe<String_comparison_exp>;
};

/** unique or primary key constraints on table "conversation_activity_log" */
export enum conversation_activity_log_constraint {
  /** unique or primary key constraint on columns "id" */
  conversation_activity_log_pkey = 'conversation_activity_log_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type conversation_activity_log_delete_at_path_input = {
  closing_contact_reason_value?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type conversation_activity_log_delete_elem_input = {
  closing_contact_reason_value?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type conversation_activity_log_delete_key_input = {
  closing_contact_reason_value?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "conversation_activity_log" */
export type conversation_activity_log_inc_input = {
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<Scalars['Int']>;
  closing_contact_reason_id?: InputMaybe<Scalars['bigint']>;
  closing_ticket_id?: InputMaybe<Scalars['bigint']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  message_id?: InputMaybe<Scalars['bigint']>;
  new_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  new_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  new_status?: InputMaybe<Scalars['Int']>;
  old_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  old_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  old_status?: InputMaybe<Scalars['Int']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "conversation_activity_log" */
export type conversation_activity_log_insert_input = {
  activity_by?: InputMaybe<account_agents_obj_rel_insert_input>;
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<Scalars['Int']>;
  closing_contact_reason_id?: InputMaybe<Scalars['bigint']>;
  closing_contact_reason_value?: InputMaybe<Scalars['jsonb']>;
  closing_description?: InputMaybe<Scalars['String']>;
  closing_ticket?: InputMaybe<ticket_obj_rel_insert_input>;
  closing_ticket_id?: InputMaybe<Scalars['bigint']>;
  conversation?: InputMaybe<conversations_obj_rel_insert_input>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  message?: InputMaybe<messages_obj_rel_insert_input>;
  message_id?: InputMaybe<Scalars['bigint']>;
  new_assigned_agent?: InputMaybe<account_agents_obj_rel_insert_input>;
  new_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  new_assigned_team?: InputMaybe<teams_obj_rel_insert_input>;
  new_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  new_status?: InputMaybe<Scalars['Int']>;
  old_assigned_agent?: InputMaybe<account_agents_obj_rel_insert_input>;
  old_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  old_assigned_team?: InputMaybe<teams_obj_rel_insert_input>;
  old_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  old_status?: InputMaybe<Scalars['Int']>;
  user_id?: InputMaybe<Scalars['bigint']>;
  user_type?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type conversation_activity_log_max_fields = {
  __typename?: 'conversation_activity_log_max_fields';
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: Maybe<Scalars['Int']>;
  closing_contact_reason_id?: Maybe<Scalars['bigint']>;
  closing_description?: Maybe<Scalars['String']>;
  closing_ticket_id?: Maybe<Scalars['bigint']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  message_id?: Maybe<Scalars['bigint']>;
  new_assigned_agent_id?: Maybe<Scalars['bigint']>;
  new_assigned_team_id?: Maybe<Scalars['bigint']>;
  new_status?: Maybe<Scalars['Int']>;
  old_assigned_agent_id?: Maybe<Scalars['bigint']>;
  old_assigned_team_id?: Maybe<Scalars['bigint']>;
  old_status?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['bigint']>;
  user_type?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "conversation_activity_log" */
export type conversation_activity_log_max_order_by = {
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_description?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
  user_type?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type conversation_activity_log_min_fields = {
  __typename?: 'conversation_activity_log_min_fields';
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: Maybe<Scalars['Int']>;
  closing_contact_reason_id?: Maybe<Scalars['bigint']>;
  closing_description?: Maybe<Scalars['String']>;
  closing_ticket_id?: Maybe<Scalars['bigint']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  message_id?: Maybe<Scalars['bigint']>;
  new_assigned_agent_id?: Maybe<Scalars['bigint']>;
  new_assigned_team_id?: Maybe<Scalars['bigint']>;
  new_status?: Maybe<Scalars['Int']>;
  old_assigned_agent_id?: Maybe<Scalars['bigint']>;
  old_assigned_team_id?: Maybe<Scalars['bigint']>;
  old_status?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['bigint']>;
  user_type?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "conversation_activity_log" */
export type conversation_activity_log_min_order_by = {
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_description?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
  user_type?: InputMaybe<order_by>;
};

/** response of any mutation on the table "conversation_activity_log" */
export type conversation_activity_log_mutation_response = {
  __typename?: 'conversation_activity_log_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<conversation_activity_log>;
};

/** input type for inserting object relation for remote table "conversation_activity_log" */
export type conversation_activity_log_obj_rel_insert_input = {
  data: conversation_activity_log_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<conversation_activity_log_on_conflict>;
};

/** on_conflict condition type for table "conversation_activity_log" */
export type conversation_activity_log_on_conflict = {
  constraint: conversation_activity_log_constraint;
  update_columns?: Array<conversation_activity_log_update_column>;
  where?: InputMaybe<conversation_activity_log_bool_exp>;
};

/** Ordering options when selecting data from "conversation_activity_log". */
export type conversation_activity_log_order_by = {
  activity_by?: InputMaybe<account_agents_order_by>;
  activity_type?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_contact_reason_value?: InputMaybe<order_by>;
  closing_description?: InputMaybe<order_by>;
  closing_ticket?: InputMaybe<ticket_order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  conversation?: InputMaybe<conversations_order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message?: InputMaybe<messages_order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent?: InputMaybe<account_agents_order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team?: InputMaybe<teams_order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent?: InputMaybe<account_agents_order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team?: InputMaybe<teams_order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
  user_type?: InputMaybe<order_by>;
};

/** primary key columns input for table: conversation_activity_log */
export type conversation_activity_log_pk_columns_input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type conversation_activity_log_prepend_input = {
  closing_contact_reason_value?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "conversation_activity_log" */
export enum conversation_activity_log_select_column {
  /** column name */
  activity_type = 'activity_type',
  /** column name */
  closing_contact_reason_id = 'closing_contact_reason_id',
  /** column name */
  closing_contact_reason_value = 'closing_contact_reason_value',
  /** column name */
  closing_description = 'closing_description',
  /** column name */
  closing_ticket_id = 'closing_ticket_id',
  /** column name */
  conversation_id = 'conversation_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  message_id = 'message_id',
  /** column name */
  new_assigned_agent_id = 'new_assigned_agent_id',
  /** column name */
  new_assigned_team_id = 'new_assigned_team_id',
  /** column name */
  new_status = 'new_status',
  /** column name */
  old_assigned_agent_id = 'old_assigned_agent_id',
  /** column name */
  old_assigned_team_id = 'old_assigned_team_id',
  /** column name */
  old_status = 'old_status',
  /** column name */
  user_id = 'user_id',
  /** column name */
  user_type = 'user_type'
}

/** input type for updating data in table "conversation_activity_log" */
export type conversation_activity_log_set_input = {
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<Scalars['Int']>;
  closing_contact_reason_id?: InputMaybe<Scalars['bigint']>;
  closing_contact_reason_value?: InputMaybe<Scalars['jsonb']>;
  closing_description?: InputMaybe<Scalars['String']>;
  closing_ticket_id?: InputMaybe<Scalars['bigint']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  message_id?: InputMaybe<Scalars['bigint']>;
  new_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  new_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  new_status?: InputMaybe<Scalars['Int']>;
  old_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  old_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  old_status?: InputMaybe<Scalars['Int']>;
  user_id?: InputMaybe<Scalars['bigint']>;
  user_type?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type conversation_activity_log_stddev_fields = {
  __typename?: 'conversation_activity_log_stddev_fields';
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "conversation_activity_log" */
export type conversation_activity_log_stddev_order_by = {
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type conversation_activity_log_stddev_pop_fields = {
  __typename?: 'conversation_activity_log_stddev_pop_fields';
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "conversation_activity_log" */
export type conversation_activity_log_stddev_pop_order_by = {
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type conversation_activity_log_stddev_samp_fields = {
  __typename?: 'conversation_activity_log_stddev_samp_fields';
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "conversation_activity_log" */
export type conversation_activity_log_stddev_samp_order_by = {
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "conversation_activity_log" */
export type conversation_activity_log_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: conversation_activity_log_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type conversation_activity_log_stream_cursor_value_input = {
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<Scalars['Int']>;
  closing_contact_reason_id?: InputMaybe<Scalars['bigint']>;
  closing_contact_reason_value?: InputMaybe<Scalars['jsonb']>;
  closing_description?: InputMaybe<Scalars['String']>;
  closing_ticket_id?: InputMaybe<Scalars['bigint']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  message_id?: InputMaybe<Scalars['bigint']>;
  new_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  new_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  new_status?: InputMaybe<Scalars['Int']>;
  old_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  old_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  old_status?: InputMaybe<Scalars['Int']>;
  user_id?: InputMaybe<Scalars['bigint']>;
  user_type?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type conversation_activity_log_sum_fields = {
  __typename?: 'conversation_activity_log_sum_fields';
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: Maybe<Scalars['Int']>;
  closing_contact_reason_id?: Maybe<Scalars['bigint']>;
  closing_ticket_id?: Maybe<Scalars['bigint']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  message_id?: Maybe<Scalars['bigint']>;
  new_assigned_agent_id?: Maybe<Scalars['bigint']>;
  new_assigned_team_id?: Maybe<Scalars['bigint']>;
  new_status?: Maybe<Scalars['Int']>;
  old_assigned_agent_id?: Maybe<Scalars['bigint']>;
  old_assigned_team_id?: Maybe<Scalars['bigint']>;
  old_status?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "conversation_activity_log" */
export type conversation_activity_log_sum_order_by = {
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** update columns of table "conversation_activity_log" */
export enum conversation_activity_log_update_column {
  /** column name */
  activity_type = 'activity_type',
  /** column name */
  closing_contact_reason_id = 'closing_contact_reason_id',
  /** column name */
  closing_contact_reason_value = 'closing_contact_reason_value',
  /** column name */
  closing_description = 'closing_description',
  /** column name */
  closing_ticket_id = 'closing_ticket_id',
  /** column name */
  conversation_id = 'conversation_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  message_id = 'message_id',
  /** column name */
  new_assigned_agent_id = 'new_assigned_agent_id',
  /** column name */
  new_assigned_team_id = 'new_assigned_team_id',
  /** column name */
  new_status = 'new_status',
  /** column name */
  old_assigned_agent_id = 'old_assigned_agent_id',
  /** column name */
  old_assigned_team_id = 'old_assigned_team_id',
  /** column name */
  old_status = 'old_status',
  /** column name */
  user_id = 'user_id',
  /** column name */
  user_type = 'user_type'
}

export type conversation_activity_log_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<conversation_activity_log_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<conversation_activity_log_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<conversation_activity_log_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<conversation_activity_log_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<conversation_activity_log_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<conversation_activity_log_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<conversation_activity_log_set_input>;
  /** filter the rows which have to be updated */
  where: conversation_activity_log_bool_exp;
};

/** aggregate var_pop on columns */
export type conversation_activity_log_var_pop_fields = {
  __typename?: 'conversation_activity_log_var_pop_fields';
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "conversation_activity_log" */
export type conversation_activity_log_var_pop_order_by = {
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type conversation_activity_log_var_samp_fields = {
  __typename?: 'conversation_activity_log_var_samp_fields';
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "conversation_activity_log" */
export type conversation_activity_log_var_samp_order_by = {
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type conversation_activity_log_variance_fields = {
  __typename?: 'conversation_activity_log_variance_fields';
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "conversation_activity_log" */
export type conversation_activity_log_variance_order_by = {
  /** 0 - unknown, 1 - conversation created | messages: 2 - first incoming , 3 - first outgoing | updates: 4 - status, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** columns and relationships of "conversation_message_mentions" */
export type conversation_message_mentions = {
  __typename?: 'conversation_message_mentions';
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  message: messages;
  message_id: Scalars['bigint'];
  /** An object relationship */
  user?: Maybe<account_agents>;
  user_id: Scalars['bigint'];
};

/** aggregated selection of "conversation_message_mentions" */
export type conversation_message_mentions_aggregate = {
  __typename?: 'conversation_message_mentions_aggregate';
  aggregate?: Maybe<conversation_message_mentions_aggregate_fields>;
  nodes: Array<conversation_message_mentions>;
};

export type conversation_message_mentions_aggregate_bool_exp = {
  count?: InputMaybe<conversation_message_mentions_aggregate_bool_exp_count>;
};

export type conversation_message_mentions_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<conversation_message_mentions_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<conversation_message_mentions_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "conversation_message_mentions" */
export type conversation_message_mentions_aggregate_fields = {
  __typename?: 'conversation_message_mentions_aggregate_fields';
  avg?: Maybe<conversation_message_mentions_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<conversation_message_mentions_max_fields>;
  min?: Maybe<conversation_message_mentions_min_fields>;
  stddev?: Maybe<conversation_message_mentions_stddev_fields>;
  stddev_pop?: Maybe<conversation_message_mentions_stddev_pop_fields>;
  stddev_samp?: Maybe<conversation_message_mentions_stddev_samp_fields>;
  sum?: Maybe<conversation_message_mentions_sum_fields>;
  var_pop?: Maybe<conversation_message_mentions_var_pop_fields>;
  var_samp?: Maybe<conversation_message_mentions_var_samp_fields>;
  variance?: Maybe<conversation_message_mentions_variance_fields>;
};


/** aggregate fields of "conversation_message_mentions" */
export type conversation_message_mentions_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<conversation_message_mentions_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "conversation_message_mentions" */
export type conversation_message_mentions_aggregate_order_by = {
  avg?: InputMaybe<conversation_message_mentions_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<conversation_message_mentions_max_order_by>;
  min?: InputMaybe<conversation_message_mentions_min_order_by>;
  stddev?: InputMaybe<conversation_message_mentions_stddev_order_by>;
  stddev_pop?: InputMaybe<conversation_message_mentions_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<conversation_message_mentions_stddev_samp_order_by>;
  sum?: InputMaybe<conversation_message_mentions_sum_order_by>;
  var_pop?: InputMaybe<conversation_message_mentions_var_pop_order_by>;
  var_samp?: InputMaybe<conversation_message_mentions_var_samp_order_by>;
  variance?: InputMaybe<conversation_message_mentions_variance_order_by>;
};

/** input type for inserting array relation for remote table "conversation_message_mentions" */
export type conversation_message_mentions_arr_rel_insert_input = {
  data: Array<conversation_message_mentions_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<conversation_message_mentions_on_conflict>;
};

/** aggregate avg on columns */
export type conversation_message_mentions_avg_fields = {
  __typename?: 'conversation_message_mentions_avg_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "conversation_message_mentions" */
export type conversation_message_mentions_avg_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "conversation_message_mentions". All fields are combined with a logical 'AND'. */
export type conversation_message_mentions_bool_exp = {
  _and?: InputMaybe<Array<conversation_message_mentions_bool_exp>>;
  _not?: InputMaybe<conversation_message_mentions_bool_exp>;
  _or?: InputMaybe<Array<conversation_message_mentions_bool_exp>>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  message?: InputMaybe<messages_bool_exp>;
  message_id?: InputMaybe<bigint_comparison_exp>;
  user?: InputMaybe<account_agents_bool_exp>;
  user_id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "conversation_message_mentions" */
export enum conversation_message_mentions_constraint {
  /** unique or primary key constraint on columns "user_id", "message_id" */
  conversation_message_mention_pkey = 'conversation_message_mention_pkey'
}

/** input type for incrementing numeric columns in table "conversation_message_mentions" */
export type conversation_message_mentions_inc_input = {
  message_id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "conversation_message_mentions" */
export type conversation_message_mentions_insert_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  message?: InputMaybe<messages_obj_rel_insert_input>;
  message_id?: InputMaybe<Scalars['bigint']>;
  user?: InputMaybe<account_agents_obj_rel_insert_input>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type conversation_message_mentions_max_fields = {
  __typename?: 'conversation_message_mentions_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  message_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "conversation_message_mentions" */
export type conversation_message_mentions_max_order_by = {
  created_at?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type conversation_message_mentions_min_fields = {
  __typename?: 'conversation_message_mentions_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  message_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "conversation_message_mentions" */
export type conversation_message_mentions_min_order_by = {
  created_at?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** response of any mutation on the table "conversation_message_mentions" */
export type conversation_message_mentions_mutation_response = {
  __typename?: 'conversation_message_mentions_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<conversation_message_mentions>;
};

/** on_conflict condition type for table "conversation_message_mentions" */
export type conversation_message_mentions_on_conflict = {
  constraint: conversation_message_mentions_constraint;
  update_columns?: Array<conversation_message_mentions_update_column>;
  where?: InputMaybe<conversation_message_mentions_bool_exp>;
};

/** Ordering options when selecting data from "conversation_message_mentions". */
export type conversation_message_mentions_order_by = {
  created_at?: InputMaybe<order_by>;
  message?: InputMaybe<messages_order_by>;
  message_id?: InputMaybe<order_by>;
  user?: InputMaybe<account_agents_order_by>;
  user_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: conversation_message_mentions */
export type conversation_message_mentions_pk_columns_input = {
  message_id: Scalars['bigint'];
  user_id: Scalars['bigint'];
};

/** select columns of table "conversation_message_mentions" */
export enum conversation_message_mentions_select_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  message_id = 'message_id',
  /** column name */
  user_id = 'user_id'
}

/** input type for updating data in table "conversation_message_mentions" */
export type conversation_message_mentions_set_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  message_id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type conversation_message_mentions_stddev_fields = {
  __typename?: 'conversation_message_mentions_stddev_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "conversation_message_mentions" */
export type conversation_message_mentions_stddev_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type conversation_message_mentions_stddev_pop_fields = {
  __typename?: 'conversation_message_mentions_stddev_pop_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "conversation_message_mentions" */
export type conversation_message_mentions_stddev_pop_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type conversation_message_mentions_stddev_samp_fields = {
  __typename?: 'conversation_message_mentions_stddev_samp_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "conversation_message_mentions" */
export type conversation_message_mentions_stddev_samp_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "conversation_message_mentions" */
export type conversation_message_mentions_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: conversation_message_mentions_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type conversation_message_mentions_stream_cursor_value_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  message_id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type conversation_message_mentions_sum_fields = {
  __typename?: 'conversation_message_mentions_sum_fields';
  message_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "conversation_message_mentions" */
export type conversation_message_mentions_sum_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** update columns of table "conversation_message_mentions" */
export enum conversation_message_mentions_update_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  message_id = 'message_id',
  /** column name */
  user_id = 'user_id'
}

export type conversation_message_mentions_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<conversation_message_mentions_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<conversation_message_mentions_set_input>;
  /** filter the rows which have to be updated */
  where: conversation_message_mentions_bool_exp;
};

/** aggregate var_pop on columns */
export type conversation_message_mentions_var_pop_fields = {
  __typename?: 'conversation_message_mentions_var_pop_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "conversation_message_mentions" */
export type conversation_message_mentions_var_pop_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type conversation_message_mentions_var_samp_fields = {
  __typename?: 'conversation_message_mentions_var_samp_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "conversation_message_mentions" */
export type conversation_message_mentions_var_samp_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type conversation_message_mentions_variance_fields = {
  __typename?: 'conversation_message_mentions_variance_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "conversation_message_mentions" */
export type conversation_message_mentions_variance_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Tags or labels which are added to specific conversation. */
export type conversation_tags = {
  __typename?: 'conversation_tags';
  /** An object relationship */
  conversation: conversations;
  conversation_id: Scalars['bigint'];
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  /** An object relationship */
  tag: tags;
  tag_id: Scalars['bigint'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "conversation_tags" */
export type conversation_tags_aggregate = {
  __typename?: 'conversation_tags_aggregate';
  aggregate?: Maybe<conversation_tags_aggregate_fields>;
  nodes: Array<conversation_tags>;
};

export type conversation_tags_aggregate_bool_exp = {
  count?: InputMaybe<conversation_tags_aggregate_bool_exp_count>;
};

export type conversation_tags_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<conversation_tags_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<conversation_tags_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "conversation_tags" */
export type conversation_tags_aggregate_fields = {
  __typename?: 'conversation_tags_aggregate_fields';
  avg?: Maybe<conversation_tags_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<conversation_tags_max_fields>;
  min?: Maybe<conversation_tags_min_fields>;
  stddev?: Maybe<conversation_tags_stddev_fields>;
  stddev_pop?: Maybe<conversation_tags_stddev_pop_fields>;
  stddev_samp?: Maybe<conversation_tags_stddev_samp_fields>;
  sum?: Maybe<conversation_tags_sum_fields>;
  var_pop?: Maybe<conversation_tags_var_pop_fields>;
  var_samp?: Maybe<conversation_tags_var_samp_fields>;
  variance?: Maybe<conversation_tags_variance_fields>;
};


/** aggregate fields of "conversation_tags" */
export type conversation_tags_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<conversation_tags_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "conversation_tags" */
export type conversation_tags_aggregate_order_by = {
  avg?: InputMaybe<conversation_tags_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<conversation_tags_max_order_by>;
  min?: InputMaybe<conversation_tags_min_order_by>;
  stddev?: InputMaybe<conversation_tags_stddev_order_by>;
  stddev_pop?: InputMaybe<conversation_tags_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<conversation_tags_stddev_samp_order_by>;
  sum?: InputMaybe<conversation_tags_sum_order_by>;
  var_pop?: InputMaybe<conversation_tags_var_pop_order_by>;
  var_samp?: InputMaybe<conversation_tags_var_samp_order_by>;
  variance?: InputMaybe<conversation_tags_variance_order_by>;
};

/** input type for inserting array relation for remote table "conversation_tags" */
export type conversation_tags_arr_rel_insert_input = {
  data: Array<conversation_tags_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<conversation_tags_on_conflict>;
};

/** aggregate avg on columns */
export type conversation_tags_avg_fields = {
  __typename?: 'conversation_tags_avg_fields';
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "conversation_tags" */
export type conversation_tags_avg_order_by = {
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "conversation_tags". All fields are combined with a logical 'AND'. */
export type conversation_tags_bool_exp = {
  _and?: InputMaybe<Array<conversation_tags_bool_exp>>;
  _not?: InputMaybe<conversation_tags_bool_exp>;
  _or?: InputMaybe<Array<conversation_tags_bool_exp>>;
  conversation?: InputMaybe<conversations_bool_exp>;
  conversation_id?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  tag?: InputMaybe<tags_bool_exp>;
  tag_id?: InputMaybe<bigint_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "conversation_tags" */
export enum conversation_tags_constraint {
  /** unique or primary key constraint on columns "conversation_id", "tag_id" */
  conversation_tags_conversation_id_tag_id_key = 'conversation_tags_conversation_id_tag_id_key',
  /** unique or primary key constraint on columns "id" */
  conversation_tags_pkey = 'conversation_tags_pkey'
}

/** input type for incrementing numeric columns in table "conversation_tags" */
export type conversation_tags_inc_input = {
  conversation_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "conversation_tags" */
export type conversation_tags_insert_input = {
  conversation?: InputMaybe<conversations_obj_rel_insert_input>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag?: InputMaybe<tags_obj_rel_insert_input>;
  tag_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type conversation_tags_max_fields = {
  __typename?: 'conversation_tags_max_fields';
  conversation_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  tag_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "conversation_tags" */
export type conversation_tags_max_order_by = {
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type conversation_tags_min_fields = {
  __typename?: 'conversation_tags_min_fields';
  conversation_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  tag_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "conversation_tags" */
export type conversation_tags_min_order_by = {
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** response of any mutation on the table "conversation_tags" */
export type conversation_tags_mutation_response = {
  __typename?: 'conversation_tags_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<conversation_tags>;
};

/** on_conflict condition type for table "conversation_tags" */
export type conversation_tags_on_conflict = {
  constraint: conversation_tags_constraint;
  update_columns?: Array<conversation_tags_update_column>;
  where?: InputMaybe<conversation_tags_bool_exp>;
};

/** Ordering options when selecting data from "conversation_tags". */
export type conversation_tags_order_by = {
  conversation?: InputMaybe<conversations_order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag?: InputMaybe<tags_order_by>;
  tag_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: conversation_tags */
export type conversation_tags_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "conversation_tags" */
export enum conversation_tags_select_column {
  /** column name */
  conversation_id = 'conversation_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  tag_id = 'tag_id',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "conversation_tags" */
export type conversation_tags_set_input = {
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type conversation_tags_stddev_fields = {
  __typename?: 'conversation_tags_stddev_fields';
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "conversation_tags" */
export type conversation_tags_stddev_order_by = {
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type conversation_tags_stddev_pop_fields = {
  __typename?: 'conversation_tags_stddev_pop_fields';
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "conversation_tags" */
export type conversation_tags_stddev_pop_order_by = {
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type conversation_tags_stddev_samp_fields = {
  __typename?: 'conversation_tags_stddev_samp_fields';
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "conversation_tags" */
export type conversation_tags_stddev_samp_order_by = {
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "conversation_tags" */
export type conversation_tags_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: conversation_tags_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type conversation_tags_stream_cursor_value_input = {
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type conversation_tags_sum_fields = {
  __typename?: 'conversation_tags_sum_fields';
  conversation_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  tag_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "conversation_tags" */
export type conversation_tags_sum_order_by = {
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** update columns of table "conversation_tags" */
export enum conversation_tags_update_column {
  /** column name */
  conversation_id = 'conversation_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  tag_id = 'tag_id',
  /** column name */
  updated_at = 'updated_at'
}

export type conversation_tags_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<conversation_tags_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<conversation_tags_set_input>;
  /** filter the rows which have to be updated */
  where: conversation_tags_bool_exp;
};

/** aggregate var_pop on columns */
export type conversation_tags_var_pop_fields = {
  __typename?: 'conversation_tags_var_pop_fields';
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "conversation_tags" */
export type conversation_tags_var_pop_order_by = {
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type conversation_tags_var_samp_fields = {
  __typename?: 'conversation_tags_var_samp_fields';
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "conversation_tags" */
export type conversation_tags_var_samp_order_by = {
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type conversation_tags_variance_fields = {
  __typename?: 'conversation_tags_variance_fields';
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "conversation_tags" */
export type conversation_tags_variance_order_by = {
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
};

/** columns and relationships of "conversation_watch_list" */
export type conversation_watch_list = {
  __typename?: 'conversation_watch_list';
  account_id: Scalars['Int'];
  /** An object relationship */
  conversation: conversations;
  conversation_id: Scalars['bigint'];
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  updated_at: Scalars['timestamptz'];
  user_id: Scalars['bigint'];
};

/** aggregated selection of "conversation_watch_list" */
export type conversation_watch_list_aggregate = {
  __typename?: 'conversation_watch_list_aggregate';
  aggregate?: Maybe<conversation_watch_list_aggregate_fields>;
  nodes: Array<conversation_watch_list>;
};

export type conversation_watch_list_aggregate_bool_exp = {
  count?: InputMaybe<conversation_watch_list_aggregate_bool_exp_count>;
};

export type conversation_watch_list_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<conversation_watch_list_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<conversation_watch_list_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "conversation_watch_list" */
export type conversation_watch_list_aggregate_fields = {
  __typename?: 'conversation_watch_list_aggregate_fields';
  avg?: Maybe<conversation_watch_list_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<conversation_watch_list_max_fields>;
  min?: Maybe<conversation_watch_list_min_fields>;
  stddev?: Maybe<conversation_watch_list_stddev_fields>;
  stddev_pop?: Maybe<conversation_watch_list_stddev_pop_fields>;
  stddev_samp?: Maybe<conversation_watch_list_stddev_samp_fields>;
  sum?: Maybe<conversation_watch_list_sum_fields>;
  var_pop?: Maybe<conversation_watch_list_var_pop_fields>;
  var_samp?: Maybe<conversation_watch_list_var_samp_fields>;
  variance?: Maybe<conversation_watch_list_variance_fields>;
};


/** aggregate fields of "conversation_watch_list" */
export type conversation_watch_list_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<conversation_watch_list_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "conversation_watch_list" */
export type conversation_watch_list_aggregate_order_by = {
  avg?: InputMaybe<conversation_watch_list_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<conversation_watch_list_max_order_by>;
  min?: InputMaybe<conversation_watch_list_min_order_by>;
  stddev?: InputMaybe<conversation_watch_list_stddev_order_by>;
  stddev_pop?: InputMaybe<conversation_watch_list_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<conversation_watch_list_stddev_samp_order_by>;
  sum?: InputMaybe<conversation_watch_list_sum_order_by>;
  var_pop?: InputMaybe<conversation_watch_list_var_pop_order_by>;
  var_samp?: InputMaybe<conversation_watch_list_var_samp_order_by>;
  variance?: InputMaybe<conversation_watch_list_variance_order_by>;
};

/** input type for inserting array relation for remote table "conversation_watch_list" */
export type conversation_watch_list_arr_rel_insert_input = {
  data: Array<conversation_watch_list_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<conversation_watch_list_on_conflict>;
};

/** aggregate avg on columns */
export type conversation_watch_list_avg_fields = {
  __typename?: 'conversation_watch_list_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "conversation_watch_list" */
export type conversation_watch_list_avg_order_by = {
  account_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "conversation_watch_list". All fields are combined with a logical 'AND'. */
export type conversation_watch_list_bool_exp = {
  _and?: InputMaybe<Array<conversation_watch_list_bool_exp>>;
  _not?: InputMaybe<conversation_watch_list_bool_exp>;
  _or?: InputMaybe<Array<conversation_watch_list_bool_exp>>;
  account_id?: InputMaybe<Int_comparison_exp>;
  conversation?: InputMaybe<conversations_bool_exp>;
  conversation_id?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  user_id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "conversation_watch_list" */
export enum conversation_watch_list_constraint {
  /** unique or primary key constraint on columns "conversation_id", "user_id" */
  conversation_watch_list_conversation_id_user_id_key = 'conversation_watch_list_conversation_id_user_id_key',
  /** unique or primary key constraint on columns "id" */
  conversation_watchlist1_pkey = 'conversation_watchlist1_pkey'
}

/** input type for incrementing numeric columns in table "conversation_watch_list" */
export type conversation_watch_list_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "conversation_watch_list" */
export type conversation_watch_list_insert_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  conversation?: InputMaybe<conversations_obj_rel_insert_input>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type conversation_watch_list_max_fields = {
  __typename?: 'conversation_watch_list_max_fields';
  account_id?: Maybe<Scalars['Int']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "conversation_watch_list" */
export type conversation_watch_list_max_order_by = {
  account_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type conversation_watch_list_min_fields = {
  __typename?: 'conversation_watch_list_min_fields';
  account_id?: Maybe<Scalars['Int']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "conversation_watch_list" */
export type conversation_watch_list_min_order_by = {
  account_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** response of any mutation on the table "conversation_watch_list" */
export type conversation_watch_list_mutation_response = {
  __typename?: 'conversation_watch_list_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<conversation_watch_list>;
};

/** on_conflict condition type for table "conversation_watch_list" */
export type conversation_watch_list_on_conflict = {
  constraint: conversation_watch_list_constraint;
  update_columns?: Array<conversation_watch_list_update_column>;
  where?: InputMaybe<conversation_watch_list_bool_exp>;
};

/** Ordering options when selecting data from "conversation_watch_list". */
export type conversation_watch_list_order_by = {
  account_id?: InputMaybe<order_by>;
  conversation?: InputMaybe<conversations_order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: conversation_watch_list */
export type conversation_watch_list_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "conversation_watch_list" */
export enum conversation_watch_list_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  conversation_id = 'conversation_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

/** input type for updating data in table "conversation_watch_list" */
export type conversation_watch_list_set_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type conversation_watch_list_stddev_fields = {
  __typename?: 'conversation_watch_list_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "conversation_watch_list" */
export type conversation_watch_list_stddev_order_by = {
  account_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type conversation_watch_list_stddev_pop_fields = {
  __typename?: 'conversation_watch_list_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "conversation_watch_list" */
export type conversation_watch_list_stddev_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type conversation_watch_list_stddev_samp_fields = {
  __typename?: 'conversation_watch_list_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "conversation_watch_list" */
export type conversation_watch_list_stddev_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "conversation_watch_list" */
export type conversation_watch_list_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: conversation_watch_list_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type conversation_watch_list_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type conversation_watch_list_sum_fields = {
  __typename?: 'conversation_watch_list_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "conversation_watch_list" */
export type conversation_watch_list_sum_order_by = {
  account_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** update columns of table "conversation_watch_list" */
export enum conversation_watch_list_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  conversation_id = 'conversation_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

export type conversation_watch_list_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<conversation_watch_list_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<conversation_watch_list_set_input>;
  /** filter the rows which have to be updated */
  where: conversation_watch_list_bool_exp;
};

/** aggregate var_pop on columns */
export type conversation_watch_list_var_pop_fields = {
  __typename?: 'conversation_watch_list_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "conversation_watch_list" */
export type conversation_watch_list_var_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type conversation_watch_list_var_samp_fields = {
  __typename?: 'conversation_watch_list_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "conversation_watch_list" */
export type conversation_watch_list_var_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type conversation_watch_list_variance_fields = {
  __typename?: 'conversation_watch_list_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "conversation_watch_list" */
export type conversation_watch_list_variance_order_by = {
  account_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** All conversations from different inboxes. */
export type conversations = {
  __typename?: 'conversations';
  /** An object relationship */
  account: accounts;
  account_id: Scalars['bigint'];
  /** For twtitter it contains the sender informations */
  additional_attributes?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  agent?: Maybe<users>;
  agent_id?: Maybe<Scalars['bigint']>;
  assigned_team_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  assigned_team_member?: Maybe<team_members>;
  closed_at?: Maybe<Scalars['timestamptz']>;
  closing_contact_reason_id?: Maybe<Scalars['bigint']>;
  closing_contact_reason_value?: Maybe<Scalars['jsonb']>;
  closing_description?: Maybe<Scalars['String']>;
  /** An object relationship */
  closing_ticket?: Maybe<ticket>;
  closing_ticket_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  contact?: Maybe<contacts>;
  contact_id?: Maybe<Scalars['Int']>;
  contact_inbox_id?: Maybe<Scalars['Int']>;
  /** An array relationship */
  conversation_activity_logs: Array<conversation_activity_log>;
  /** An aggregate relationship */
  conversation_activity_logs_aggregate: conversation_activity_log_aggregate;
  /** An array relationship */
  conversation_tags: Array<conversation_tags>;
  /** An aggregate relationship */
  conversation_tags_aggregate: conversation_tags_aggregate;
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  csat_feedback?: Maybe<csat_feedback>;
  /** Creates a 8 character link id from uuid column */
  csat_id?: Maybe<Scalars['String']>;
  csat_language: Scalars['String'];
  csat_sent: Scalars['Boolean'];
  csat_sent_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An object relationship */
  inbox?: Maybe<inboxes>;
  inbox_id?: Maybe<Scalars['bigint']>;
  /** 0 = user, 1 = system */
  last_updated_by: Scalars['Int'];
  /** An array relationship */
  messages: Array<messages>;
  /** An aggregate relationship */
  messages_aggregate: messages_aggregate;
  snoozed_until?: Maybe<Scalars['timestamptz']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status: Scalars['Int'];
  status_changed_by?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  status_changed_by_user?: Maybe<account_agents>;
  /** A computed field, executes function "conversation_tab_type" */
  tab_type?: Maybe<Scalars['jsonb']>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  type: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  uuid: Scalars['uuid'];
  /** An array relationship */
  watch_lists: Array<conversation_watch_list>;
  /** An aggregate relationship */
  watch_lists_aggregate: conversation_watch_list_aggregate;
};


/** All conversations from different inboxes. */
export type conversationsadditional_attributesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** All conversations from different inboxes. */
export type conversationsclosing_contact_reason_valueArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** All conversations from different inboxes. */
export type conversationsconversation_activity_logsArgs = {
  distinct_on?: InputMaybe<Array<conversation_activity_log_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_activity_log_order_by>>;
  where?: InputMaybe<conversation_activity_log_bool_exp>;
};


/** All conversations from different inboxes. */
export type conversationsconversation_activity_logs_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversation_activity_log_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_activity_log_order_by>>;
  where?: InputMaybe<conversation_activity_log_bool_exp>;
};


/** All conversations from different inboxes. */
export type conversationsconversation_tagsArgs = {
  distinct_on?: InputMaybe<Array<conversation_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_tags_order_by>>;
  where?: InputMaybe<conversation_tags_bool_exp>;
};


/** All conversations from different inboxes. */
export type conversationsconversation_tags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversation_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_tags_order_by>>;
  where?: InputMaybe<conversation_tags_bool_exp>;
};


/** All conversations from different inboxes. */
export type conversationsmessagesArgs = {
  distinct_on?: InputMaybe<Array<messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<messages_order_by>>;
  where?: InputMaybe<messages_bool_exp>;
};


/** All conversations from different inboxes. */
export type conversationsmessages_aggregateArgs = {
  distinct_on?: InputMaybe<Array<messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<messages_order_by>>;
  where?: InputMaybe<messages_bool_exp>;
};


/** All conversations from different inboxes. */
export type conversationstab_typeArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** All conversations from different inboxes. */
export type conversationswatch_listsArgs = {
  distinct_on?: InputMaybe<Array<conversation_watch_list_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_watch_list_order_by>>;
  where?: InputMaybe<conversation_watch_list_bool_exp>;
};


/** All conversations from different inboxes. */
export type conversationswatch_lists_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversation_watch_list_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_watch_list_order_by>>;
  where?: InputMaybe<conversation_watch_list_bool_exp>;
};

/** aggregated selection of "conversations" */
export type conversations_aggregate = {
  __typename?: 'conversations_aggregate';
  aggregate?: Maybe<conversations_aggregate_fields>;
  nodes: Array<conversations>;
};

export type conversations_aggregate_bool_exp = {
  bool_and?: InputMaybe<conversations_aggregate_bool_exp_bool_and>;
  bool_or?: InputMaybe<conversations_aggregate_bool_exp_bool_or>;
  count?: InputMaybe<conversations_aggregate_bool_exp_count>;
};

export type conversations_aggregate_bool_exp_bool_and = {
  arguments: conversations_select_column_conversations_aggregate_bool_exp_bool_and_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<conversations_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type conversations_aggregate_bool_exp_bool_or = {
  arguments: conversations_select_column_conversations_aggregate_bool_exp_bool_or_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<conversations_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type conversations_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<conversations_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<conversations_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "conversations" */
export type conversations_aggregate_fields = {
  __typename?: 'conversations_aggregate_fields';
  avg?: Maybe<conversations_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<conversations_max_fields>;
  min?: Maybe<conversations_min_fields>;
  stddev?: Maybe<conversations_stddev_fields>;
  stddev_pop?: Maybe<conversations_stddev_pop_fields>;
  stddev_samp?: Maybe<conversations_stddev_samp_fields>;
  sum?: Maybe<conversations_sum_fields>;
  var_pop?: Maybe<conversations_var_pop_fields>;
  var_samp?: Maybe<conversations_var_samp_fields>;
  variance?: Maybe<conversations_variance_fields>;
};


/** aggregate fields of "conversations" */
export type conversations_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<conversations_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "conversations" */
export type conversations_aggregate_order_by = {
  avg?: InputMaybe<conversations_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<conversations_max_order_by>;
  min?: InputMaybe<conversations_min_order_by>;
  stddev?: InputMaybe<conversations_stddev_order_by>;
  stddev_pop?: InputMaybe<conversations_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<conversations_stddev_samp_order_by>;
  sum?: InputMaybe<conversations_sum_order_by>;
  var_pop?: InputMaybe<conversations_var_pop_order_by>;
  var_samp?: InputMaybe<conversations_var_samp_order_by>;
  variance?: InputMaybe<conversations_variance_order_by>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type conversations_append_input = {
  /** For twtitter it contains the sender informations */
  additional_attributes?: InputMaybe<Scalars['jsonb']>;
  closing_contact_reason_value?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "conversations" */
export type conversations_arr_rel_insert_input = {
  data: Array<conversations_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<conversations_on_conflict>;
};

/** aggregate avg on columns */
export type conversations_avg_fields = {
  __typename?: 'conversations_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  assigned_team_id?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  contact_inbox_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 = user, 1 = system */
  last_updated_by?: Maybe<Scalars['Float']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: Maybe<Scalars['Float']>;
  status_changed_by?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "conversations" */
export type conversations_avg_order_by = {
  account_id?: InputMaybe<order_by>;
  agent_id?: InputMaybe<order_by>;
  assigned_team_id?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  contact_inbox_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<order_by>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<order_by>;
  status_changed_by?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "conversations". All fields are combined with a logical 'AND'. */
export type conversations_bool_exp = {
  _and?: InputMaybe<Array<conversations_bool_exp>>;
  _not?: InputMaybe<conversations_bool_exp>;
  _or?: InputMaybe<Array<conversations_bool_exp>>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  additional_attributes?: InputMaybe<jsonb_comparison_exp>;
  agent?: InputMaybe<users_bool_exp>;
  agent_id?: InputMaybe<bigint_comparison_exp>;
  assigned_team_id?: InputMaybe<bigint_comparison_exp>;
  assigned_team_member?: InputMaybe<team_members_bool_exp>;
  closed_at?: InputMaybe<timestamptz_comparison_exp>;
  closing_contact_reason_id?: InputMaybe<bigint_comparison_exp>;
  closing_contact_reason_value?: InputMaybe<jsonb_comparison_exp>;
  closing_description?: InputMaybe<String_comparison_exp>;
  closing_ticket?: InputMaybe<ticket_bool_exp>;
  closing_ticket_id?: InputMaybe<bigint_comparison_exp>;
  contact?: InputMaybe<contacts_bool_exp>;
  contact_id?: InputMaybe<Int_comparison_exp>;
  contact_inbox_id?: InputMaybe<Int_comparison_exp>;
  conversation_activity_logs?: InputMaybe<conversation_activity_log_bool_exp>;
  conversation_activity_logs_aggregate?: InputMaybe<conversation_activity_log_aggregate_bool_exp>;
  conversation_tags?: InputMaybe<conversation_tags_bool_exp>;
  conversation_tags_aggregate?: InputMaybe<conversation_tags_aggregate_bool_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  csat_feedback?: InputMaybe<csat_feedback_bool_exp>;
  csat_id?: InputMaybe<String_comparison_exp>;
  csat_language?: InputMaybe<String_comparison_exp>;
  csat_sent?: InputMaybe<Boolean_comparison_exp>;
  csat_sent_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  inbox?: InputMaybe<inboxes_bool_exp>;
  inbox_id?: InputMaybe<bigint_comparison_exp>;
  last_updated_by?: InputMaybe<Int_comparison_exp>;
  messages?: InputMaybe<messages_bool_exp>;
  messages_aggregate?: InputMaybe<messages_aggregate_bool_exp>;
  snoozed_until?: InputMaybe<timestamptz_comparison_exp>;
  status?: InputMaybe<Int_comparison_exp>;
  status_changed_by?: InputMaybe<bigint_comparison_exp>;
  status_changed_by_user?: InputMaybe<account_agents_bool_exp>;
  tab_type?: InputMaybe<jsonb_comparison_exp>;
  type?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  uuid?: InputMaybe<uuid_comparison_exp>;
  watch_lists?: InputMaybe<conversation_watch_list_bool_exp>;
  watch_lists_aggregate?: InputMaybe<conversation_watch_list_aggregate_bool_exp>;
};

/** unique or primary key constraints on table "conversations" */
export enum conversations_constraint {
  /** unique or primary key constraint on columns "id" */
  conversations_pkey = 'conversations_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type conversations_delete_at_path_input = {
  /** For twtitter it contains the sender informations */
  additional_attributes?: InputMaybe<Array<Scalars['String']>>;
  closing_contact_reason_value?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type conversations_delete_elem_input = {
  /** For twtitter it contains the sender informations */
  additional_attributes?: InputMaybe<Scalars['Int']>;
  closing_contact_reason_value?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type conversations_delete_key_input = {
  /** For twtitter it contains the sender informations */
  additional_attributes?: InputMaybe<Scalars['String']>;
  closing_contact_reason_value?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "conversations" */
export type conversations_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  agent_id?: InputMaybe<Scalars['bigint']>;
  assigned_team_id?: InputMaybe<Scalars['bigint']>;
  closing_contact_reason_id?: InputMaybe<Scalars['bigint']>;
  closing_ticket_id?: InputMaybe<Scalars['bigint']>;
  contact_id?: InputMaybe<Scalars['Int']>;
  contact_inbox_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox_id?: InputMaybe<Scalars['bigint']>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<Scalars['Int']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<Scalars['Int']>;
  status_changed_by?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "conversations" */
export type conversations_insert_input = {
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['bigint']>;
  /** For twtitter it contains the sender informations */
  additional_attributes?: InputMaybe<Scalars['jsonb']>;
  agent?: InputMaybe<users_obj_rel_insert_input>;
  agent_id?: InputMaybe<Scalars['bigint']>;
  assigned_team_id?: InputMaybe<Scalars['bigint']>;
  assigned_team_member?: InputMaybe<team_members_obj_rel_insert_input>;
  closed_at?: InputMaybe<Scalars['timestamptz']>;
  closing_contact_reason_id?: InputMaybe<Scalars['bigint']>;
  closing_contact_reason_value?: InputMaybe<Scalars['jsonb']>;
  closing_description?: InputMaybe<Scalars['String']>;
  closing_ticket?: InputMaybe<ticket_obj_rel_insert_input>;
  closing_ticket_id?: InputMaybe<Scalars['bigint']>;
  contact?: InputMaybe<contacts_obj_rel_insert_input>;
  contact_id?: InputMaybe<Scalars['Int']>;
  contact_inbox_id?: InputMaybe<Scalars['Int']>;
  conversation_activity_logs?: InputMaybe<conversation_activity_log_arr_rel_insert_input>;
  conversation_tags?: InputMaybe<conversation_tags_arr_rel_insert_input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  csat_feedback?: InputMaybe<csat_feedback_obj_rel_insert_input>;
  csat_language?: InputMaybe<Scalars['String']>;
  csat_sent?: InputMaybe<Scalars['Boolean']>;
  csat_sent_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox?: InputMaybe<inboxes_obj_rel_insert_input>;
  inbox_id?: InputMaybe<Scalars['bigint']>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<Scalars['Int']>;
  messages?: InputMaybe<messages_arr_rel_insert_input>;
  snoozed_until?: InputMaybe<Scalars['timestamptz']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<Scalars['Int']>;
  status_changed_by?: InputMaybe<Scalars['bigint']>;
  status_changed_by_user?: InputMaybe<account_agents_obj_rel_insert_input>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  uuid?: InputMaybe<Scalars['uuid']>;
  watch_lists?: InputMaybe<conversation_watch_list_arr_rel_insert_input>;
};

/** aggregate max on columns */
export type conversations_max_fields = {
  __typename?: 'conversations_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  agent_id?: Maybe<Scalars['bigint']>;
  assigned_team_id?: Maybe<Scalars['bigint']>;
  closed_at?: Maybe<Scalars['timestamptz']>;
  closing_contact_reason_id?: Maybe<Scalars['bigint']>;
  closing_description?: Maybe<Scalars['String']>;
  closing_ticket_id?: Maybe<Scalars['bigint']>;
  contact_id?: Maybe<Scalars['Int']>;
  contact_inbox_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  /** Creates a 8 character link id from uuid column */
  csat_id?: Maybe<Scalars['String']>;
  csat_language?: Maybe<Scalars['String']>;
  csat_sent_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  inbox_id?: Maybe<Scalars['bigint']>;
  /** 0 = user, 1 = system */
  last_updated_by?: Maybe<Scalars['Int']>;
  snoozed_until?: Maybe<Scalars['timestamptz']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: Maybe<Scalars['Int']>;
  status_changed_by?: Maybe<Scalars['bigint']>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uuid?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "conversations" */
export type conversations_max_order_by = {
  account_id?: InputMaybe<order_by>;
  agent_id?: InputMaybe<order_by>;
  assigned_team_id?: InputMaybe<order_by>;
  closed_at?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_description?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  contact_inbox_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  csat_language?: InputMaybe<order_by>;
  csat_sent_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<order_by>;
  snoozed_until?: InputMaybe<order_by>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<order_by>;
  status_changed_by?: InputMaybe<order_by>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  type?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  uuid?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type conversations_min_fields = {
  __typename?: 'conversations_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  agent_id?: Maybe<Scalars['bigint']>;
  assigned_team_id?: Maybe<Scalars['bigint']>;
  closed_at?: Maybe<Scalars['timestamptz']>;
  closing_contact_reason_id?: Maybe<Scalars['bigint']>;
  closing_description?: Maybe<Scalars['String']>;
  closing_ticket_id?: Maybe<Scalars['bigint']>;
  contact_id?: Maybe<Scalars['Int']>;
  contact_inbox_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  /** Creates a 8 character link id from uuid column */
  csat_id?: Maybe<Scalars['String']>;
  csat_language?: Maybe<Scalars['String']>;
  csat_sent_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  inbox_id?: Maybe<Scalars['bigint']>;
  /** 0 = user, 1 = system */
  last_updated_by?: Maybe<Scalars['Int']>;
  snoozed_until?: Maybe<Scalars['timestamptz']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: Maybe<Scalars['Int']>;
  status_changed_by?: Maybe<Scalars['bigint']>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uuid?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "conversations" */
export type conversations_min_order_by = {
  account_id?: InputMaybe<order_by>;
  agent_id?: InputMaybe<order_by>;
  assigned_team_id?: InputMaybe<order_by>;
  closed_at?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_description?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  contact_inbox_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  csat_language?: InputMaybe<order_by>;
  csat_sent_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<order_by>;
  snoozed_until?: InputMaybe<order_by>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<order_by>;
  status_changed_by?: InputMaybe<order_by>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  type?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  uuid?: InputMaybe<order_by>;
};

/** response of any mutation on the table "conversations" */
export type conversations_mutation_response = {
  __typename?: 'conversations_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<conversations>;
};

/** input type for inserting object relation for remote table "conversations" */
export type conversations_obj_rel_insert_input = {
  data: conversations_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<conversations_on_conflict>;
};

/** on_conflict condition type for table "conversations" */
export type conversations_on_conflict = {
  constraint: conversations_constraint;
  update_columns?: Array<conversations_update_column>;
  where?: InputMaybe<conversations_bool_exp>;
};

/** Ordering options when selecting data from "conversations". */
export type conversations_order_by = {
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  additional_attributes?: InputMaybe<order_by>;
  agent?: InputMaybe<users_order_by>;
  agent_id?: InputMaybe<order_by>;
  assigned_team_id?: InputMaybe<order_by>;
  assigned_team_member?: InputMaybe<team_members_order_by>;
  closed_at?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_contact_reason_value?: InputMaybe<order_by>;
  closing_description?: InputMaybe<order_by>;
  closing_ticket?: InputMaybe<ticket_order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  contact?: InputMaybe<contacts_order_by>;
  contact_id?: InputMaybe<order_by>;
  contact_inbox_id?: InputMaybe<order_by>;
  conversation_activity_logs_aggregate?: InputMaybe<conversation_activity_log_aggregate_order_by>;
  conversation_tags_aggregate?: InputMaybe<conversation_tags_aggregate_order_by>;
  created_at?: InputMaybe<order_by>;
  csat_feedback?: InputMaybe<csat_feedback_order_by>;
  csat_id?: InputMaybe<order_by>;
  csat_language?: InputMaybe<order_by>;
  csat_sent?: InputMaybe<order_by>;
  csat_sent_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox?: InputMaybe<inboxes_order_by>;
  inbox_id?: InputMaybe<order_by>;
  last_updated_by?: InputMaybe<order_by>;
  messages_aggregate?: InputMaybe<messages_aggregate_order_by>;
  snoozed_until?: InputMaybe<order_by>;
  status?: InputMaybe<order_by>;
  status_changed_by?: InputMaybe<order_by>;
  status_changed_by_user?: InputMaybe<account_agents_order_by>;
  tab_type?: InputMaybe<order_by>;
  type?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  uuid?: InputMaybe<order_by>;
  watch_lists_aggregate?: InputMaybe<conversation_watch_list_aggregate_order_by>;
};

/** primary key columns input for table: conversations */
export type conversations_pk_columns_input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type conversations_prepend_input = {
  /** For twtitter it contains the sender informations */
  additional_attributes?: InputMaybe<Scalars['jsonb']>;
  closing_contact_reason_value?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "conversations" */
export enum conversations_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  additional_attributes = 'additional_attributes',
  /** column name */
  agent_id = 'agent_id',
  /** column name */
  assigned_team_id = 'assigned_team_id',
  /** column name */
  closed_at = 'closed_at',
  /** column name */
  closing_contact_reason_id = 'closing_contact_reason_id',
  /** column name */
  closing_contact_reason_value = 'closing_contact_reason_value',
  /** column name */
  closing_description = 'closing_description',
  /** column name */
  closing_ticket_id = 'closing_ticket_id',
  /** column name */
  contact_id = 'contact_id',
  /** column name */
  contact_inbox_id = 'contact_inbox_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  csat_language = 'csat_language',
  /** column name */
  csat_sent = 'csat_sent',
  /** column name */
  csat_sent_at = 'csat_sent_at',
  /** column name */
  id = 'id',
  /** column name */
  inbox_id = 'inbox_id',
  /** column name */
  last_updated_by = 'last_updated_by',
  /** column name */
  snoozed_until = 'snoozed_until',
  /** column name */
  status = 'status',
  /** column name */
  status_changed_by = 'status_changed_by',
  /** column name */
  type = 'type',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  uuid = 'uuid'
}

/** select "conversations_aggregate_bool_exp_bool_and_arguments_columns" columns of table "conversations" */
export enum conversations_select_column_conversations_aggregate_bool_exp_bool_and_arguments_columns {
  /** column name */
  csat_sent = 'csat_sent'
}

/** select "conversations_aggregate_bool_exp_bool_or_arguments_columns" columns of table "conversations" */
export enum conversations_select_column_conversations_aggregate_bool_exp_bool_or_arguments_columns {
  /** column name */
  csat_sent = 'csat_sent'
}

/** input type for updating data in table "conversations" */
export type conversations_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  /** For twtitter it contains the sender informations */
  additional_attributes?: InputMaybe<Scalars['jsonb']>;
  agent_id?: InputMaybe<Scalars['bigint']>;
  assigned_team_id?: InputMaybe<Scalars['bigint']>;
  closed_at?: InputMaybe<Scalars['timestamptz']>;
  closing_contact_reason_id?: InputMaybe<Scalars['bigint']>;
  closing_contact_reason_value?: InputMaybe<Scalars['jsonb']>;
  closing_description?: InputMaybe<Scalars['String']>;
  closing_ticket_id?: InputMaybe<Scalars['bigint']>;
  contact_id?: InputMaybe<Scalars['Int']>;
  contact_inbox_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  csat_language?: InputMaybe<Scalars['String']>;
  csat_sent?: InputMaybe<Scalars['Boolean']>;
  csat_sent_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox_id?: InputMaybe<Scalars['bigint']>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<Scalars['Int']>;
  snoozed_until?: InputMaybe<Scalars['timestamptz']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<Scalars['Int']>;
  status_changed_by?: InputMaybe<Scalars['bigint']>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  uuid?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type conversations_stddev_fields = {
  __typename?: 'conversations_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  assigned_team_id?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  contact_inbox_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 = user, 1 = system */
  last_updated_by?: Maybe<Scalars['Float']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: Maybe<Scalars['Float']>;
  status_changed_by?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "conversations" */
export type conversations_stddev_order_by = {
  account_id?: InputMaybe<order_by>;
  agent_id?: InputMaybe<order_by>;
  assigned_team_id?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  contact_inbox_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<order_by>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<order_by>;
  status_changed_by?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type conversations_stddev_pop_fields = {
  __typename?: 'conversations_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  assigned_team_id?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  contact_inbox_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 = user, 1 = system */
  last_updated_by?: Maybe<Scalars['Float']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: Maybe<Scalars['Float']>;
  status_changed_by?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "conversations" */
export type conversations_stddev_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  agent_id?: InputMaybe<order_by>;
  assigned_team_id?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  contact_inbox_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<order_by>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<order_by>;
  status_changed_by?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type conversations_stddev_samp_fields = {
  __typename?: 'conversations_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  assigned_team_id?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  contact_inbox_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 = user, 1 = system */
  last_updated_by?: Maybe<Scalars['Float']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: Maybe<Scalars['Float']>;
  status_changed_by?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "conversations" */
export type conversations_stddev_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  agent_id?: InputMaybe<order_by>;
  assigned_team_id?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  contact_inbox_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<order_by>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<order_by>;
  status_changed_by?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "conversations" */
export type conversations_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: conversations_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type conversations_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  /** For twtitter it contains the sender informations */
  additional_attributes?: InputMaybe<Scalars['jsonb']>;
  agent_id?: InputMaybe<Scalars['bigint']>;
  assigned_team_id?: InputMaybe<Scalars['bigint']>;
  closed_at?: InputMaybe<Scalars['timestamptz']>;
  closing_contact_reason_id?: InputMaybe<Scalars['bigint']>;
  closing_contact_reason_value?: InputMaybe<Scalars['jsonb']>;
  closing_description?: InputMaybe<Scalars['String']>;
  closing_ticket_id?: InputMaybe<Scalars['bigint']>;
  contact_id?: InputMaybe<Scalars['Int']>;
  contact_inbox_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  csat_language?: InputMaybe<Scalars['String']>;
  csat_sent?: InputMaybe<Scalars['Boolean']>;
  csat_sent_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox_id?: InputMaybe<Scalars['bigint']>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<Scalars['Int']>;
  snoozed_until?: InputMaybe<Scalars['timestamptz']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<Scalars['Int']>;
  status_changed_by?: InputMaybe<Scalars['bigint']>;
  /** twitter_public, twitter_private, twitter_stream, email, web_chat */
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  uuid?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type conversations_sum_fields = {
  __typename?: 'conversations_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  agent_id?: Maybe<Scalars['bigint']>;
  assigned_team_id?: Maybe<Scalars['bigint']>;
  closing_contact_reason_id?: Maybe<Scalars['bigint']>;
  closing_ticket_id?: Maybe<Scalars['bigint']>;
  contact_id?: Maybe<Scalars['Int']>;
  contact_inbox_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  inbox_id?: Maybe<Scalars['bigint']>;
  /** 0 = user, 1 = system */
  last_updated_by?: Maybe<Scalars['Int']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: Maybe<Scalars['Int']>;
  status_changed_by?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "conversations" */
export type conversations_sum_order_by = {
  account_id?: InputMaybe<order_by>;
  agent_id?: InputMaybe<order_by>;
  assigned_team_id?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  contact_inbox_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<order_by>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<order_by>;
  status_changed_by?: InputMaybe<order_by>;
};

/** update columns of table "conversations" */
export enum conversations_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  additional_attributes = 'additional_attributes',
  /** column name */
  agent_id = 'agent_id',
  /** column name */
  assigned_team_id = 'assigned_team_id',
  /** column name */
  closed_at = 'closed_at',
  /** column name */
  closing_contact_reason_id = 'closing_contact_reason_id',
  /** column name */
  closing_contact_reason_value = 'closing_contact_reason_value',
  /** column name */
  closing_description = 'closing_description',
  /** column name */
  closing_ticket_id = 'closing_ticket_id',
  /** column name */
  contact_id = 'contact_id',
  /** column name */
  contact_inbox_id = 'contact_inbox_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  csat_language = 'csat_language',
  /** column name */
  csat_sent = 'csat_sent',
  /** column name */
  csat_sent_at = 'csat_sent_at',
  /** column name */
  id = 'id',
  /** column name */
  inbox_id = 'inbox_id',
  /** column name */
  last_updated_by = 'last_updated_by',
  /** column name */
  snoozed_until = 'snoozed_until',
  /** column name */
  status = 'status',
  /** column name */
  status_changed_by = 'status_changed_by',
  /** column name */
  type = 'type',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  uuid = 'uuid'
}

export type conversations_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<conversations_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<conversations_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<conversations_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<conversations_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<conversations_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<conversations_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<conversations_set_input>;
  /** filter the rows which have to be updated */
  where: conversations_bool_exp;
};

/** aggregate var_pop on columns */
export type conversations_var_pop_fields = {
  __typename?: 'conversations_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  assigned_team_id?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  contact_inbox_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 = user, 1 = system */
  last_updated_by?: Maybe<Scalars['Float']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: Maybe<Scalars['Float']>;
  status_changed_by?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "conversations" */
export type conversations_var_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  agent_id?: InputMaybe<order_by>;
  assigned_team_id?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  contact_inbox_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<order_by>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<order_by>;
  status_changed_by?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type conversations_var_samp_fields = {
  __typename?: 'conversations_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  assigned_team_id?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  contact_inbox_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 = user, 1 = system */
  last_updated_by?: Maybe<Scalars['Float']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: Maybe<Scalars['Float']>;
  status_changed_by?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "conversations" */
export type conversations_var_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  agent_id?: InputMaybe<order_by>;
  assigned_team_id?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  contact_inbox_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<order_by>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<order_by>;
  status_changed_by?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type conversations_variance_fields = {
  __typename?: 'conversations_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  assigned_team_id?: Maybe<Scalars['Float']>;
  closing_contact_reason_id?: Maybe<Scalars['Float']>;
  closing_ticket_id?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  contact_inbox_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 = user, 1 = system */
  last_updated_by?: Maybe<Scalars['Float']>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: Maybe<Scalars['Float']>;
  status_changed_by?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "conversations" */
export type conversations_variance_order_by = {
  account_id?: InputMaybe<order_by>;
  agent_id?: InputMaybe<order_by>;
  assigned_team_id?: InputMaybe<order_by>;
  closing_contact_reason_id?: InputMaybe<order_by>;
  closing_ticket_id?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  contact_inbox_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  /** 0 = user, 1 = system */
  last_updated_by?: InputMaybe<order_by>;
  /** OPEN: 1 = Unassigned, 2 = Assigned, 3 = Pending - replied to customer, 4 = Pending - snoozed | CLOSED: 5 = Resolved, 6 = Waiting for customer, 7 = Ticket escalated, 8 = Ticket follow up, 9 = Irrelevant, 10 = No answer required */
  status?: InputMaybe<order_by>;
  status_changed_by?: InputMaybe<order_by>;
};

/** CSAT responses from contacts */
export type csat_feedback = {
  __typename?: 'csat_feedback';
  /** An object relationship */
  contact: contacts;
  contact_id: Scalars['Int'];
  /** An object relationship */
  conversation?: Maybe<conversations>;
  conversation_id?: Maybe<Scalars['bigint']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  open_question_ans?: Maybe<Scalars['String']>;
  satisfaction_point: Scalars['Int'];
  /** An object relationship */
  ticket?: Maybe<ticket>;
  ticket_id?: Maybe<Scalars['bigint']>;
};

/** aggregated selection of "csat_feedback" */
export type csat_feedback_aggregate = {
  __typename?: 'csat_feedback_aggregate';
  aggregate?: Maybe<csat_feedback_aggregate_fields>;
  nodes: Array<csat_feedback>;
};

export type csat_feedback_aggregate_bool_exp = {
  count?: InputMaybe<csat_feedback_aggregate_bool_exp_count>;
};

export type csat_feedback_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<csat_feedback_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<csat_feedback_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "csat_feedback" */
export type csat_feedback_aggregate_fields = {
  __typename?: 'csat_feedback_aggregate_fields';
  avg?: Maybe<csat_feedback_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<csat_feedback_max_fields>;
  min?: Maybe<csat_feedback_min_fields>;
  stddev?: Maybe<csat_feedback_stddev_fields>;
  stddev_pop?: Maybe<csat_feedback_stddev_pop_fields>;
  stddev_samp?: Maybe<csat_feedback_stddev_samp_fields>;
  sum?: Maybe<csat_feedback_sum_fields>;
  var_pop?: Maybe<csat_feedback_var_pop_fields>;
  var_samp?: Maybe<csat_feedback_var_samp_fields>;
  variance?: Maybe<csat_feedback_variance_fields>;
};


/** aggregate fields of "csat_feedback" */
export type csat_feedback_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<csat_feedback_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "csat_feedback" */
export type csat_feedback_aggregate_order_by = {
  avg?: InputMaybe<csat_feedback_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<csat_feedback_max_order_by>;
  min?: InputMaybe<csat_feedback_min_order_by>;
  stddev?: InputMaybe<csat_feedback_stddev_order_by>;
  stddev_pop?: InputMaybe<csat_feedback_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<csat_feedback_stddev_samp_order_by>;
  sum?: InputMaybe<csat_feedback_sum_order_by>;
  var_pop?: InputMaybe<csat_feedback_var_pop_order_by>;
  var_samp?: InputMaybe<csat_feedback_var_samp_order_by>;
  variance?: InputMaybe<csat_feedback_variance_order_by>;
};

/** input type for inserting array relation for remote table "csat_feedback" */
export type csat_feedback_arr_rel_insert_input = {
  data: Array<csat_feedback_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<csat_feedback_on_conflict>;
};

/** aggregate avg on columns */
export type csat_feedback_avg_fields = {
  __typename?: 'csat_feedback_avg_fields';
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  satisfaction_point?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "csat_feedback" */
export type csat_feedback_avg_order_by = {
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  satisfaction_point?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "csat_feedback". All fields are combined with a logical 'AND'. */
export type csat_feedback_bool_exp = {
  _and?: InputMaybe<Array<csat_feedback_bool_exp>>;
  _not?: InputMaybe<csat_feedback_bool_exp>;
  _or?: InputMaybe<Array<csat_feedback_bool_exp>>;
  contact?: InputMaybe<contacts_bool_exp>;
  contact_id?: InputMaybe<Int_comparison_exp>;
  conversation?: InputMaybe<conversations_bool_exp>;
  conversation_id?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  open_question_ans?: InputMaybe<String_comparison_exp>;
  satisfaction_point?: InputMaybe<Int_comparison_exp>;
  ticket?: InputMaybe<ticket_bool_exp>;
  ticket_id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "csat_feedback" */
export enum csat_feedback_constraint {
  /** unique or primary key constraint on columns "conversation_id" */
  csat_feedback_conversation_id_key = 'csat_feedback_conversation_id_key',
  /** unique or primary key constraint on columns "id" */
  csat_feedback_pkey = 'csat_feedback_pkey',
  /** unique or primary key constraint on columns "ticket_id" */
  csat_feedback_ticket_id_key = 'csat_feedback_ticket_id_key'
}

/** input type for incrementing numeric columns in table "csat_feedback" */
export type csat_feedback_inc_input = {
  contact_id?: InputMaybe<Scalars['Int']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  satisfaction_point?: InputMaybe<Scalars['Int']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "csat_feedback" */
export type csat_feedback_insert_input = {
  contact?: InputMaybe<contacts_obj_rel_insert_input>;
  contact_id?: InputMaybe<Scalars['Int']>;
  conversation?: InputMaybe<conversations_obj_rel_insert_input>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  open_question_ans?: InputMaybe<Scalars['String']>;
  satisfaction_point?: InputMaybe<Scalars['Int']>;
  ticket?: InputMaybe<ticket_obj_rel_insert_input>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type csat_feedback_max_fields = {
  __typename?: 'csat_feedback_max_fields';
  contact_id?: Maybe<Scalars['Int']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  open_question_ans?: Maybe<Scalars['String']>;
  satisfaction_point?: Maybe<Scalars['Int']>;
  ticket_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "csat_feedback" */
export type csat_feedback_max_order_by = {
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  open_question_ans?: InputMaybe<order_by>;
  satisfaction_point?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type csat_feedback_min_fields = {
  __typename?: 'csat_feedback_min_fields';
  contact_id?: Maybe<Scalars['Int']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  open_question_ans?: Maybe<Scalars['String']>;
  satisfaction_point?: Maybe<Scalars['Int']>;
  ticket_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "csat_feedback" */
export type csat_feedback_min_order_by = {
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  open_question_ans?: InputMaybe<order_by>;
  satisfaction_point?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** response of any mutation on the table "csat_feedback" */
export type csat_feedback_mutation_response = {
  __typename?: 'csat_feedback_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<csat_feedback>;
};

/** input type for inserting object relation for remote table "csat_feedback" */
export type csat_feedback_obj_rel_insert_input = {
  data: csat_feedback_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<csat_feedback_on_conflict>;
};

/** on_conflict condition type for table "csat_feedback" */
export type csat_feedback_on_conflict = {
  constraint: csat_feedback_constraint;
  update_columns?: Array<csat_feedback_update_column>;
  where?: InputMaybe<csat_feedback_bool_exp>;
};

/** Ordering options when selecting data from "csat_feedback". */
export type csat_feedback_order_by = {
  contact?: InputMaybe<contacts_order_by>;
  contact_id?: InputMaybe<order_by>;
  conversation?: InputMaybe<conversations_order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  open_question_ans?: InputMaybe<order_by>;
  satisfaction_point?: InputMaybe<order_by>;
  ticket?: InputMaybe<ticket_order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: csat_feedback */
export type csat_feedback_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "csat_feedback" */
export enum csat_feedback_select_column {
  /** column name */
  contact_id = 'contact_id',
  /** column name */
  conversation_id = 'conversation_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  open_question_ans = 'open_question_ans',
  /** column name */
  satisfaction_point = 'satisfaction_point',
  /** column name */
  ticket_id = 'ticket_id'
}

/** input type for updating data in table "csat_feedback" */
export type csat_feedback_set_input = {
  contact_id?: InputMaybe<Scalars['Int']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  open_question_ans?: InputMaybe<Scalars['String']>;
  satisfaction_point?: InputMaybe<Scalars['Int']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type csat_feedback_stddev_fields = {
  __typename?: 'csat_feedback_stddev_fields';
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  satisfaction_point?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "csat_feedback" */
export type csat_feedback_stddev_order_by = {
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  satisfaction_point?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type csat_feedback_stddev_pop_fields = {
  __typename?: 'csat_feedback_stddev_pop_fields';
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  satisfaction_point?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "csat_feedback" */
export type csat_feedback_stddev_pop_order_by = {
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  satisfaction_point?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type csat_feedback_stddev_samp_fields = {
  __typename?: 'csat_feedback_stddev_samp_fields';
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  satisfaction_point?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "csat_feedback" */
export type csat_feedback_stddev_samp_order_by = {
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  satisfaction_point?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "csat_feedback" */
export type csat_feedback_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: csat_feedback_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type csat_feedback_stream_cursor_value_input = {
  contact_id?: InputMaybe<Scalars['Int']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  open_question_ans?: InputMaybe<Scalars['String']>;
  satisfaction_point?: InputMaybe<Scalars['Int']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type csat_feedback_sum_fields = {
  __typename?: 'csat_feedback_sum_fields';
  contact_id?: Maybe<Scalars['Int']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  satisfaction_point?: Maybe<Scalars['Int']>;
  ticket_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "csat_feedback" */
export type csat_feedback_sum_order_by = {
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  satisfaction_point?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** update columns of table "csat_feedback" */
export enum csat_feedback_update_column {
  /** column name */
  contact_id = 'contact_id',
  /** column name */
  conversation_id = 'conversation_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  open_question_ans = 'open_question_ans',
  /** column name */
  satisfaction_point = 'satisfaction_point',
  /** column name */
  ticket_id = 'ticket_id'
}

export type csat_feedback_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<csat_feedback_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<csat_feedback_set_input>;
  /** filter the rows which have to be updated */
  where: csat_feedback_bool_exp;
};

/** aggregate var_pop on columns */
export type csat_feedback_var_pop_fields = {
  __typename?: 'csat_feedback_var_pop_fields';
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  satisfaction_point?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "csat_feedback" */
export type csat_feedback_var_pop_order_by = {
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  satisfaction_point?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type csat_feedback_var_samp_fields = {
  __typename?: 'csat_feedback_var_samp_fields';
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  satisfaction_point?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "csat_feedback" */
export type csat_feedback_var_samp_order_by = {
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  satisfaction_point?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type csat_feedback_variance_fields = {
  __typename?: 'csat_feedback_variance_fields';
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  satisfaction_point?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "csat_feedback" */
export type csat_feedback_variance_order_by = {
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  satisfaction_point?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** ordering argument of a cursor */
export enum cursor_ordering {
  /** ascending ordering of the cursor */
  ASC = 'ASC',
  /** descending ordering of the cursor */
  DESC = 'DESC'
}

/** User can save their custom conversation/contact/ticket filter. Also known as "Smart Inboxes". */
export type custom_filters = {
  __typename?: 'custom_filters';
  account_id: Scalars['bigint'];
  created_at: Scalars['timestamptz'];
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type: Scalars['Int'];
  id: Scalars['bigint'];
  name: Scalars['String'];
  query: Scalars['jsonb'];
  updated_at: Scalars['timestamptz'];
  user_id: Scalars['bigint'];
};


/** User can save their custom conversation/contact/ticket filter. Also known as "Smart Inboxes". */
export type custom_filtersqueryArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "custom_filters" */
export type custom_filters_aggregate = {
  __typename?: 'custom_filters_aggregate';
  aggregate?: Maybe<custom_filters_aggregate_fields>;
  nodes: Array<custom_filters>;
};

/** aggregate fields of "custom_filters" */
export type custom_filters_aggregate_fields = {
  __typename?: 'custom_filters_aggregate_fields';
  avg?: Maybe<custom_filters_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<custom_filters_max_fields>;
  min?: Maybe<custom_filters_min_fields>;
  stddev?: Maybe<custom_filters_stddev_fields>;
  stddev_pop?: Maybe<custom_filters_stddev_pop_fields>;
  stddev_samp?: Maybe<custom_filters_stddev_samp_fields>;
  sum?: Maybe<custom_filters_sum_fields>;
  var_pop?: Maybe<custom_filters_var_pop_fields>;
  var_samp?: Maybe<custom_filters_var_samp_fields>;
  variance?: Maybe<custom_filters_variance_fields>;
};


/** aggregate fields of "custom_filters" */
export type custom_filters_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<custom_filters_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type custom_filters_append_input = {
  query?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type custom_filters_avg_fields = {
  __typename?: 'custom_filters_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "custom_filters". All fields are combined with a logical 'AND'. */
export type custom_filters_bool_exp = {
  _and?: InputMaybe<Array<custom_filters_bool_exp>>;
  _not?: InputMaybe<custom_filters_bool_exp>;
  _or?: InputMaybe<Array<custom_filters_bool_exp>>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  filter_type?: InputMaybe<Int_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  query?: InputMaybe<jsonb_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  user_id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "custom_filters" */
export enum custom_filters_constraint {
  /** unique or primary key constraint on columns "account_id", "user_id", "name" */
  custom_filters_name_account_id_user_id_key = 'custom_filters_name_account_id_user_id_key',
  /** unique or primary key constraint on columns "id" */
  custom_filters_pkey = 'custom_filters_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type custom_filters_delete_at_path_input = {
  query?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type custom_filters_delete_elem_input = {
  query?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type custom_filters_delete_key_input = {
  query?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "custom_filters" */
export type custom_filters_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "custom_filters" */
export type custom_filters_insert_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Scalars['String']>;
  query?: InputMaybe<Scalars['jsonb']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type custom_filters_max_fields = {
  __typename?: 'custom_filters_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type custom_filters_min_fields = {
  __typename?: 'custom_filters_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "custom_filters" */
export type custom_filters_mutation_response = {
  __typename?: 'custom_filters_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<custom_filters>;
};

/** on_conflict condition type for table "custom_filters" */
export type custom_filters_on_conflict = {
  constraint: custom_filters_constraint;
  update_columns?: Array<custom_filters_update_column>;
  where?: InputMaybe<custom_filters_bool_exp>;
};

/** Ordering options when selecting data from "custom_filters". */
export type custom_filters_order_by = {
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  filter_type?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  query?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: custom_filters */
export type custom_filters_pk_columns_input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type custom_filters_prepend_input = {
  query?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "custom_filters" */
export enum custom_filters_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  filter_type = 'filter_type',
  /** column name */
  id = 'id',
  /** column name */
  name = 'name',
  /** column name */
  query = 'query',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

/** input type for updating data in table "custom_filters" */
export type custom_filters_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Scalars['String']>;
  query?: InputMaybe<Scalars['jsonb']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type custom_filters_stddev_fields = {
  __typename?: 'custom_filters_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type custom_filters_stddev_pop_fields = {
  __typename?: 'custom_filters_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type custom_filters_stddev_samp_fields = {
  __typename?: 'custom_filters_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "custom_filters" */
export type custom_filters_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: custom_filters_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type custom_filters_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Scalars['String']>;
  query?: InputMaybe<Scalars['jsonb']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type custom_filters_sum_fields = {
  __typename?: 'custom_filters_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "custom_filters" */
export enum custom_filters_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  filter_type = 'filter_type',
  /** column name */
  id = 'id',
  /** column name */
  name = 'name',
  /** column name */
  query = 'query',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

export type custom_filters_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<custom_filters_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<custom_filters_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<custom_filters_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<custom_filters_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<custom_filters_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<custom_filters_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<custom_filters_set_input>;
  /** filter the rows which have to be updated */
  where: custom_filters_bool_exp;
};

/** aggregate var_pop on columns */
export type custom_filters_var_pop_fields = {
  __typename?: 'custom_filters_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type custom_filters_var_samp_fields = {
  __typename?: 'custom_filters_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type custom_filters_variance_fields = {
  __typename?: 'custom_filters_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 - conversation, 1 - contact, 2 - ticket */
  filter_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** All inboxes for different types of channels (eg: twitter, email etc.). */
export type inboxes = {
  __typename?: 'inboxes';
  account_id: Scalars['bigint'];
  /** A computed field, executes function "view_channel_details" */
  channel?: Maybe<Scalars['jsonb']>;
  channel_id: Scalars['Int'];
  /** Email, GoogleBusiness, Instagram, WebChat, WhatsApp, TwitterPublic, TwitterPrivate */
  channel_type: Scalars['String'];
  /** An array relationship */
  contact_inboxes: Array<contact_inboxes>;
  /** An aggregate relationship */
  contact_inboxes_aggregate: contact_inboxes_aggregate;
  /** An array relationship */
  conversations: Array<conversations>;
  /** An aggregate relationship */
  conversations_aggregate: conversations_aggregate;
  created_at: Scalars['timestamptz'];
  description?: Maybe<Scalars['String']>;
  enable_auto_assignment?: Maybe<Scalars['Boolean']>;
  greeting_enabled?: Maybe<Scalars['Boolean']>;
  greeting_message?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  is_enabled: Scalars['Boolean'];
  name: Scalars['String'];
  /** An object relationship */
  reply_channel?: Maybe<channel_twitter_profiles>;
  reply_channel_id?: Maybe<Scalars['bigint']>;
  /** An array relationship */
  team_inboxes: Array<team_inboxes>;
  /** An aggregate relationship */
  team_inboxes_aggregate: team_inboxes_aggregate;
  updated_at: Scalars['timestamptz'];
};


/** All inboxes for different types of channels (eg: twitter, email etc.). */
export type inboxeschannelArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** All inboxes for different types of channels (eg: twitter, email etc.). */
export type inboxescontact_inboxesArgs = {
  distinct_on?: InputMaybe<Array<contact_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_inboxes_order_by>>;
  where?: InputMaybe<contact_inboxes_bool_exp>;
};


/** All inboxes for different types of channels (eg: twitter, email etc.). */
export type inboxescontact_inboxes_aggregateArgs = {
  distinct_on?: InputMaybe<Array<contact_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_inboxes_order_by>>;
  where?: InputMaybe<contact_inboxes_bool_exp>;
};


/** All inboxes for different types of channels (eg: twitter, email etc.). */
export type inboxesconversationsArgs = {
  distinct_on?: InputMaybe<Array<conversations_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversations_order_by>>;
  where?: InputMaybe<conversations_bool_exp>;
};


/** All inboxes for different types of channels (eg: twitter, email etc.). */
export type inboxesconversations_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversations_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversations_order_by>>;
  where?: InputMaybe<conversations_bool_exp>;
};


/** All inboxes for different types of channels (eg: twitter, email etc.). */
export type inboxesteam_inboxesArgs = {
  distinct_on?: InputMaybe<Array<team_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_inboxes_order_by>>;
  where?: InputMaybe<team_inboxes_bool_exp>;
};


/** All inboxes for different types of channels (eg: twitter, email etc.). */
export type inboxesteam_inboxes_aggregateArgs = {
  distinct_on?: InputMaybe<Array<team_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_inboxes_order_by>>;
  where?: InputMaybe<team_inboxes_bool_exp>;
};

/** aggregated selection of "inboxes" */
export type inboxes_aggregate = {
  __typename?: 'inboxes_aggregate';
  aggregate?: Maybe<inboxes_aggregate_fields>;
  nodes: Array<inboxes>;
};

/** aggregate fields of "inboxes" */
export type inboxes_aggregate_fields = {
  __typename?: 'inboxes_aggregate_fields';
  avg?: Maybe<inboxes_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<inboxes_max_fields>;
  min?: Maybe<inboxes_min_fields>;
  stddev?: Maybe<inboxes_stddev_fields>;
  stddev_pop?: Maybe<inboxes_stddev_pop_fields>;
  stddev_samp?: Maybe<inboxes_stddev_samp_fields>;
  sum?: Maybe<inboxes_sum_fields>;
  var_pop?: Maybe<inboxes_var_pop_fields>;
  var_samp?: Maybe<inboxes_var_samp_fields>;
  variance?: Maybe<inboxes_variance_fields>;
};


/** aggregate fields of "inboxes" */
export type inboxes_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<inboxes_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type inboxes_avg_fields = {
  __typename?: 'inboxes_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  channel_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  reply_channel_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "inboxes". All fields are combined with a logical 'AND'. */
export type inboxes_bool_exp = {
  _and?: InputMaybe<Array<inboxes_bool_exp>>;
  _not?: InputMaybe<inboxes_bool_exp>;
  _or?: InputMaybe<Array<inboxes_bool_exp>>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  channel?: InputMaybe<jsonb_comparison_exp>;
  channel_id?: InputMaybe<Int_comparison_exp>;
  channel_type?: InputMaybe<String_comparison_exp>;
  contact_inboxes?: InputMaybe<contact_inboxes_bool_exp>;
  contact_inboxes_aggregate?: InputMaybe<contact_inboxes_aggregate_bool_exp>;
  conversations?: InputMaybe<conversations_bool_exp>;
  conversations_aggregate?: InputMaybe<conversations_aggregate_bool_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  description?: InputMaybe<String_comparison_exp>;
  enable_auto_assignment?: InputMaybe<Boolean_comparison_exp>;
  greeting_enabled?: InputMaybe<Boolean_comparison_exp>;
  greeting_message?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  is_enabled?: InputMaybe<Boolean_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  reply_channel?: InputMaybe<channel_twitter_profiles_bool_exp>;
  reply_channel_id?: InputMaybe<bigint_comparison_exp>;
  team_inboxes?: InputMaybe<team_inboxes_bool_exp>;
  team_inboxes_aggregate?: InputMaybe<team_inboxes_aggregate_bool_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "inboxes" */
export enum inboxes_constraint {
  /** unique or primary key constraint on columns "account_id", "channel_type", "channel_id" */
  inboxes_account_id_channel_id_channel_type_key = 'inboxes_account_id_channel_id_channel_type_key',
  /** unique or primary key constraint on columns "id" */
  inboxes_pkey = 'inboxes_pkey'
}

/** input type for incrementing numeric columns in table "inboxes" */
export type inboxes_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  channel_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  reply_channel_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "inboxes" */
export type inboxes_insert_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  channel_id?: InputMaybe<Scalars['Int']>;
  /** Email, GoogleBusiness, Instagram, WebChat, WhatsApp, TwitterPublic, TwitterPrivate */
  channel_type?: InputMaybe<Scalars['String']>;
  contact_inboxes?: InputMaybe<contact_inboxes_arr_rel_insert_input>;
  conversations?: InputMaybe<conversations_arr_rel_insert_input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  enable_auto_assignment?: InputMaybe<Scalars['Boolean']>;
  greeting_enabled?: InputMaybe<Scalars['Boolean']>;
  greeting_message?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  reply_channel?: InputMaybe<channel_twitter_profiles_obj_rel_insert_input>;
  reply_channel_id?: InputMaybe<Scalars['bigint']>;
  team_inboxes?: InputMaybe<team_inboxes_arr_rel_insert_input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type inboxes_max_fields = {
  __typename?: 'inboxes_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  channel_id?: Maybe<Scalars['Int']>;
  /** Email, GoogleBusiness, Instagram, WebChat, WhatsApp, TwitterPublic, TwitterPrivate */
  channel_type?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  greeting_message?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  reply_channel_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type inboxes_min_fields = {
  __typename?: 'inboxes_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  channel_id?: Maybe<Scalars['Int']>;
  /** Email, GoogleBusiness, Instagram, WebChat, WhatsApp, TwitterPublic, TwitterPrivate */
  channel_type?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  greeting_message?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  reply_channel_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "inboxes" */
export type inboxes_mutation_response = {
  __typename?: 'inboxes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<inboxes>;
};

/** input type for inserting object relation for remote table "inboxes" */
export type inboxes_obj_rel_insert_input = {
  data: inboxes_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<inboxes_on_conflict>;
};

/** on_conflict condition type for table "inboxes" */
export type inboxes_on_conflict = {
  constraint: inboxes_constraint;
  update_columns?: Array<inboxes_update_column>;
  where?: InputMaybe<inboxes_bool_exp>;
};

/** Ordering options when selecting data from "inboxes". */
export type inboxes_order_by = {
  account_id?: InputMaybe<order_by>;
  channel?: InputMaybe<order_by>;
  channel_id?: InputMaybe<order_by>;
  channel_type?: InputMaybe<order_by>;
  contact_inboxes_aggregate?: InputMaybe<contact_inboxes_aggregate_order_by>;
  conversations_aggregate?: InputMaybe<conversations_aggregate_order_by>;
  created_at?: InputMaybe<order_by>;
  description?: InputMaybe<order_by>;
  enable_auto_assignment?: InputMaybe<order_by>;
  greeting_enabled?: InputMaybe<order_by>;
  greeting_message?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  is_enabled?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  reply_channel?: InputMaybe<channel_twitter_profiles_order_by>;
  reply_channel_id?: InputMaybe<order_by>;
  team_inboxes_aggregate?: InputMaybe<team_inboxes_aggregate_order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: inboxes */
export type inboxes_pk_columns_input = {
  id: Scalars['Int'];
};

/** select columns of table "inboxes" */
export enum inboxes_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  channel_id = 'channel_id',
  /** column name */
  channel_type = 'channel_type',
  /** column name */
  created_at = 'created_at',
  /** column name */
  description = 'description',
  /** column name */
  enable_auto_assignment = 'enable_auto_assignment',
  /** column name */
  greeting_enabled = 'greeting_enabled',
  /** column name */
  greeting_message = 'greeting_message',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  name = 'name',
  /** column name */
  reply_channel_id = 'reply_channel_id',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "inboxes" */
export type inboxes_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  channel_id?: InputMaybe<Scalars['Int']>;
  /** Email, GoogleBusiness, Instagram, WebChat, WhatsApp, TwitterPublic, TwitterPrivate */
  channel_type?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  enable_auto_assignment?: InputMaybe<Scalars['Boolean']>;
  greeting_enabled?: InputMaybe<Scalars['Boolean']>;
  greeting_message?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  reply_channel_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type inboxes_stddev_fields = {
  __typename?: 'inboxes_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  channel_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  reply_channel_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type inboxes_stddev_pop_fields = {
  __typename?: 'inboxes_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  channel_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  reply_channel_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type inboxes_stddev_samp_fields = {
  __typename?: 'inboxes_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  channel_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  reply_channel_id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "inboxes" */
export type inboxes_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: inboxes_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type inboxes_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  channel_id?: InputMaybe<Scalars['Int']>;
  /** Email, GoogleBusiness, Instagram, WebChat, WhatsApp, TwitterPublic, TwitterPrivate */
  channel_type?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  enable_auto_assignment?: InputMaybe<Scalars['Boolean']>;
  greeting_enabled?: InputMaybe<Scalars['Boolean']>;
  greeting_message?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  reply_channel_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type inboxes_sum_fields = {
  __typename?: 'inboxes_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  channel_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  reply_channel_id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "inboxes" */
export enum inboxes_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  channel_id = 'channel_id',
  /** column name */
  channel_type = 'channel_type',
  /** column name */
  created_at = 'created_at',
  /** column name */
  description = 'description',
  /** column name */
  enable_auto_assignment = 'enable_auto_assignment',
  /** column name */
  greeting_enabled = 'greeting_enabled',
  /** column name */
  greeting_message = 'greeting_message',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  name = 'name',
  /** column name */
  reply_channel_id = 'reply_channel_id',
  /** column name */
  updated_at = 'updated_at'
}

export type inboxes_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<inboxes_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<inboxes_set_input>;
  /** filter the rows which have to be updated */
  where: inboxes_bool_exp;
};

/** aggregate var_pop on columns */
export type inboxes_var_pop_fields = {
  __typename?: 'inboxes_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  channel_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  reply_channel_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type inboxes_var_samp_fields = {
  __typename?: 'inboxes_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  channel_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  reply_channel_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type inboxes_variance_fields = {
  __typename?: 'inboxes_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  channel_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  reply_channel_id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "ivr_menus" */
export type ivr_menus = {
  __typename?: 'ivr_menus';
  account_id: Scalars['Int'];
  configuration: Scalars['jsonb'];
  created_at: Scalars['timestamptz'];
  created_by_agent_id: Scalars['Int'];
  id: Scalars['Int'];
};


/** columns and relationships of "ivr_menus" */
export type ivr_menusconfigurationArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "ivr_menus" */
export type ivr_menus_aggregate = {
  __typename?: 'ivr_menus_aggregate';
  aggregate?: Maybe<ivr_menus_aggregate_fields>;
  nodes: Array<ivr_menus>;
};

/** aggregate fields of "ivr_menus" */
export type ivr_menus_aggregate_fields = {
  __typename?: 'ivr_menus_aggregate_fields';
  avg?: Maybe<ivr_menus_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<ivr_menus_max_fields>;
  min?: Maybe<ivr_menus_min_fields>;
  stddev?: Maybe<ivr_menus_stddev_fields>;
  stddev_pop?: Maybe<ivr_menus_stddev_pop_fields>;
  stddev_samp?: Maybe<ivr_menus_stddev_samp_fields>;
  sum?: Maybe<ivr_menus_sum_fields>;
  var_pop?: Maybe<ivr_menus_var_pop_fields>;
  var_samp?: Maybe<ivr_menus_var_samp_fields>;
  variance?: Maybe<ivr_menus_variance_fields>;
};


/** aggregate fields of "ivr_menus" */
export type ivr_menus_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<ivr_menus_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ivr_menus_append_input = {
  configuration?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type ivr_menus_avg_fields = {
  __typename?: 'ivr_menus_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "ivr_menus". All fields are combined with a logical 'AND'. */
export type ivr_menus_bool_exp = {
  _and?: InputMaybe<Array<ivr_menus_bool_exp>>;
  _not?: InputMaybe<ivr_menus_bool_exp>;
  _or?: InputMaybe<Array<ivr_menus_bool_exp>>;
  account_id?: InputMaybe<Int_comparison_exp>;
  configuration?: InputMaybe<jsonb_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  created_by_agent_id?: InputMaybe<Int_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
};

/** unique or primary key constraints on table "ivr_menus" */
export enum ivr_menus_constraint {
  /** unique or primary key constraint on columns "id" */
  ivr_menus_pkey = 'ivr_menus_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ivr_menus_delete_at_path_input = {
  configuration?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ivr_menus_delete_elem_input = {
  configuration?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ivr_menus_delete_key_input = {
  configuration?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "ivr_menus" */
export type ivr_menus_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_by_agent_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "ivr_menus" */
export type ivr_menus_insert_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  configuration?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_agent_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type ivr_menus_max_fields = {
  __typename?: 'ivr_menus_max_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_agent_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** aggregate min on columns */
export type ivr_menus_min_fields = {
  __typename?: 'ivr_menus_min_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_agent_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** response of any mutation on the table "ivr_menus" */
export type ivr_menus_mutation_response = {
  __typename?: 'ivr_menus_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ivr_menus>;
};

/** on_conflict condition type for table "ivr_menus" */
export type ivr_menus_on_conflict = {
  constraint: ivr_menus_constraint;
  update_columns?: Array<ivr_menus_update_column>;
  where?: InputMaybe<ivr_menus_bool_exp>;
};

/** Ordering options when selecting data from "ivr_menus". */
export type ivr_menus_order_by = {
  account_id?: InputMaybe<order_by>;
  configuration?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by_agent_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
};

/** primary key columns input for table: ivr_menus */
export type ivr_menus_pk_columns_input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ivr_menus_prepend_input = {
  configuration?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "ivr_menus" */
export enum ivr_menus_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  configuration = 'configuration',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_agent_id = 'created_by_agent_id',
  /** column name */
  id = 'id'
}

/** input type for updating data in table "ivr_menus" */
export type ivr_menus_set_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  configuration?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_agent_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type ivr_menus_stddev_fields = {
  __typename?: 'ivr_menus_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type ivr_menus_stddev_pop_fields = {
  __typename?: 'ivr_menus_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type ivr_menus_stddev_samp_fields = {
  __typename?: 'ivr_menus_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "ivr_menus" */
export type ivr_menus_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: ivr_menus_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ivr_menus_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  configuration?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_agent_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** aggregate sum on columns */
export type ivr_menus_sum_fields = {
  __typename?: 'ivr_menus_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_by_agent_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "ivr_menus" */
export enum ivr_menus_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  configuration = 'configuration',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_agent_id = 'created_by_agent_id',
  /** column name */
  id = 'id'
}

export type ivr_menus_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<ivr_menus_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<ivr_menus_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<ivr_menus_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<ivr_menus_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ivr_menus_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<ivr_menus_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ivr_menus_set_input>;
  /** filter the rows which have to be updated */
  where: ivr_menus_bool_exp;
};

/** aggregate var_pop on columns */
export type ivr_menus_var_pop_fields = {
  __typename?: 'ivr_menus_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type ivr_menus_var_samp_fields = {
  __typename?: 'ivr_menus_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type ivr_menus_variance_fields = {
  __typename?: 'ivr_menus_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "jira_tickets" */
export type jira_tickets = {
  __typename?: 'jira_tickets';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  issue_key: Scalars['String'];
  jira_id: Scalars['Int'];
  jira_issue_self_url?: Maybe<Scalars['String']>;
  ticket_id: Scalars['bigint'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "jira_tickets" */
export type jira_tickets_aggregate = {
  __typename?: 'jira_tickets_aggregate';
  aggregate?: Maybe<jira_tickets_aggregate_fields>;
  nodes: Array<jira_tickets>;
};

/** aggregate fields of "jira_tickets" */
export type jira_tickets_aggregate_fields = {
  __typename?: 'jira_tickets_aggregate_fields';
  avg?: Maybe<jira_tickets_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<jira_tickets_max_fields>;
  min?: Maybe<jira_tickets_min_fields>;
  stddev?: Maybe<jira_tickets_stddev_fields>;
  stddev_pop?: Maybe<jira_tickets_stddev_pop_fields>;
  stddev_samp?: Maybe<jira_tickets_stddev_samp_fields>;
  sum?: Maybe<jira_tickets_sum_fields>;
  var_pop?: Maybe<jira_tickets_var_pop_fields>;
  var_samp?: Maybe<jira_tickets_var_samp_fields>;
  variance?: Maybe<jira_tickets_variance_fields>;
};


/** aggregate fields of "jira_tickets" */
export type jira_tickets_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<jira_tickets_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type jira_tickets_avg_fields = {
  __typename?: 'jira_tickets_avg_fields';
  id?: Maybe<Scalars['Float']>;
  jira_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "jira_tickets". All fields are combined with a logical 'AND'. */
export type jira_tickets_bool_exp = {
  _and?: InputMaybe<Array<jira_tickets_bool_exp>>;
  _not?: InputMaybe<jira_tickets_bool_exp>;
  _or?: InputMaybe<Array<jira_tickets_bool_exp>>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  issue_key?: InputMaybe<String_comparison_exp>;
  jira_id?: InputMaybe<Int_comparison_exp>;
  jira_issue_self_url?: InputMaybe<String_comparison_exp>;
  ticket_id?: InputMaybe<bigint_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "jira_tickets" */
export enum jira_tickets_constraint {
  /** unique or primary key constraint on columns "id" */
  jira_tickets_pkey = 'jira_tickets_pkey'
}

/** input type for incrementing numeric columns in table "jira_tickets" */
export type jira_tickets_inc_input = {
  id?: InputMaybe<Scalars['Int']>;
  jira_id?: InputMaybe<Scalars['Int']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "jira_tickets" */
export type jira_tickets_insert_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  issue_key?: InputMaybe<Scalars['String']>;
  jira_id?: InputMaybe<Scalars['Int']>;
  jira_issue_self_url?: InputMaybe<Scalars['String']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type jira_tickets_max_fields = {
  __typename?: 'jira_tickets_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  issue_key?: Maybe<Scalars['String']>;
  jira_id?: Maybe<Scalars['Int']>;
  jira_issue_self_url?: Maybe<Scalars['String']>;
  ticket_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type jira_tickets_min_fields = {
  __typename?: 'jira_tickets_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  issue_key?: Maybe<Scalars['String']>;
  jira_id?: Maybe<Scalars['Int']>;
  jira_issue_self_url?: Maybe<Scalars['String']>;
  ticket_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "jira_tickets" */
export type jira_tickets_mutation_response = {
  __typename?: 'jira_tickets_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<jira_tickets>;
};

/** on_conflict condition type for table "jira_tickets" */
export type jira_tickets_on_conflict = {
  constraint: jira_tickets_constraint;
  update_columns?: Array<jira_tickets_update_column>;
  where?: InputMaybe<jira_tickets_bool_exp>;
};

/** Ordering options when selecting data from "jira_tickets". */
export type jira_tickets_order_by = {
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  issue_key?: InputMaybe<order_by>;
  jira_id?: InputMaybe<order_by>;
  jira_issue_self_url?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: jira_tickets */
export type jira_tickets_pk_columns_input = {
  id: Scalars['Int'];
};

/** select columns of table "jira_tickets" */
export enum jira_tickets_select_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  issue_key = 'issue_key',
  /** column name */
  jira_id = 'jira_id',
  /** column name */
  jira_issue_self_url = 'jira_issue_self_url',
  /** column name */
  ticket_id = 'ticket_id',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "jira_tickets" */
export type jira_tickets_set_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  issue_key?: InputMaybe<Scalars['String']>;
  jira_id?: InputMaybe<Scalars['Int']>;
  jira_issue_self_url?: InputMaybe<Scalars['String']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type jira_tickets_stddev_fields = {
  __typename?: 'jira_tickets_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  jira_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type jira_tickets_stddev_pop_fields = {
  __typename?: 'jira_tickets_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  jira_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type jira_tickets_stddev_samp_fields = {
  __typename?: 'jira_tickets_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  jira_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "jira_tickets" */
export type jira_tickets_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: jira_tickets_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type jira_tickets_stream_cursor_value_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  issue_key?: InputMaybe<Scalars['String']>;
  jira_id?: InputMaybe<Scalars['Int']>;
  jira_issue_self_url?: InputMaybe<Scalars['String']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type jira_tickets_sum_fields = {
  __typename?: 'jira_tickets_sum_fields';
  id?: Maybe<Scalars['Int']>;
  jira_id?: Maybe<Scalars['Int']>;
  ticket_id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "jira_tickets" */
export enum jira_tickets_update_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  issue_key = 'issue_key',
  /** column name */
  jira_id = 'jira_id',
  /** column name */
  jira_issue_self_url = 'jira_issue_self_url',
  /** column name */
  ticket_id = 'ticket_id',
  /** column name */
  updated_at = 'updated_at'
}

export type jira_tickets_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<jira_tickets_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<jira_tickets_set_input>;
  /** filter the rows which have to be updated */
  where: jira_tickets_bool_exp;
};

/** aggregate var_pop on columns */
export type jira_tickets_var_pop_fields = {
  __typename?: 'jira_tickets_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  jira_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type jira_tickets_var_samp_fields = {
  __typename?: 'jira_tickets_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  jira_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type jira_tickets_variance_fields = {
  __typename?: 'jira_tickets_variance_fields';
  id?: Maybe<Scalars['Float']>;
  jira_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
export type json_comparison_exp = {
  _eq?: InputMaybe<Scalars['json']>;
  _gt?: InputMaybe<Scalars['json']>;
  _gte?: InputMaybe<Scalars['json']>;
  _in?: InputMaybe<Array<Scalars['json']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['json']>;
  _lte?: InputMaybe<Scalars['json']>;
  _neq?: InputMaybe<Scalars['json']>;
  _nin?: InputMaybe<Array<Scalars['json']>>;
};

export type jsonb_cast_exp = {
  String?: InputMaybe<String_comparison_exp>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type jsonb_comparison_exp = {
  _cast?: InputMaybe<jsonb_cast_exp>;
  /** is the column contained in the given json value */
  _contained_in?: InputMaybe<Scalars['jsonb']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']>;
  _eq?: InputMaybe<Scalars['jsonb']>;
  _gt?: InputMaybe<Scalars['jsonb']>;
  _gte?: InputMaybe<Scalars['jsonb']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: InputMaybe<Scalars['String']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: InputMaybe<Array<Scalars['String']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: InputMaybe<Array<Scalars['String']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['jsonb']>;
  _lte?: InputMaybe<Scalars['jsonb']>;
  _neq?: InputMaybe<Scalars['jsonb']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']>>;
};

/** columns and relationships of "knowladge_base_appearance" */
export type knowladge_base_appearance = {
  __typename?: 'knowladge_base_appearance';
  add_languages: Scalars['String'];
  atricale_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  home_page_link: Scalars['String'];
  icons_set: Scalars['String'];
  id: Scalars['bigint'];
  /** An object relationship */
  knowledge_base_article: knowledge_base_articles;
  theme_color: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: users;
  user_id: Scalars['Int'];
};

/** aggregated selection of "knowladge_base_appearance" */
export type knowladge_base_appearance_aggregate = {
  __typename?: 'knowladge_base_appearance_aggregate';
  aggregate?: Maybe<knowladge_base_appearance_aggregate_fields>;
  nodes: Array<knowladge_base_appearance>;
};

/** aggregate fields of "knowladge_base_appearance" */
export type knowladge_base_appearance_aggregate_fields = {
  __typename?: 'knowladge_base_appearance_aggregate_fields';
  avg?: Maybe<knowladge_base_appearance_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<knowladge_base_appearance_max_fields>;
  min?: Maybe<knowladge_base_appearance_min_fields>;
  stddev?: Maybe<knowladge_base_appearance_stddev_fields>;
  stddev_pop?: Maybe<knowladge_base_appearance_stddev_pop_fields>;
  stddev_samp?: Maybe<knowladge_base_appearance_stddev_samp_fields>;
  sum?: Maybe<knowladge_base_appearance_sum_fields>;
  var_pop?: Maybe<knowladge_base_appearance_var_pop_fields>;
  var_samp?: Maybe<knowladge_base_appearance_var_samp_fields>;
  variance?: Maybe<knowladge_base_appearance_variance_fields>;
};


/** aggregate fields of "knowladge_base_appearance" */
export type knowladge_base_appearance_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<knowladge_base_appearance_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type knowladge_base_appearance_avg_fields = {
  __typename?: 'knowladge_base_appearance_avg_fields';
  atricale_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "knowladge_base_appearance". All fields are combined with a logical 'AND'. */
export type knowladge_base_appearance_bool_exp = {
  _and?: InputMaybe<Array<knowladge_base_appearance_bool_exp>>;
  _not?: InputMaybe<knowladge_base_appearance_bool_exp>;
  _or?: InputMaybe<Array<knowladge_base_appearance_bool_exp>>;
  add_languages?: InputMaybe<String_comparison_exp>;
  atricale_id?: InputMaybe<Int_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  home_page_link?: InputMaybe<String_comparison_exp>;
  icons_set?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  knowledge_base_article?: InputMaybe<knowledge_base_articles_bool_exp>;
  theme_color?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  user?: InputMaybe<users_bool_exp>;
  user_id?: InputMaybe<Int_comparison_exp>;
};

/** unique or primary key constraints on table "knowladge_base_appearance" */
export enum knowladge_base_appearance_constraint {
  /** unique or primary key constraint on columns "id" */
  knowladge_base_appearance_pkey = 'knowladge_base_appearance_pkey'
}

/** input type for incrementing numeric columns in table "knowladge_base_appearance" */
export type knowladge_base_appearance_inc_input = {
  atricale_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "knowladge_base_appearance" */
export type knowladge_base_appearance_insert_input = {
  add_languages?: InputMaybe<Scalars['String']>;
  atricale_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  home_page_link?: InputMaybe<Scalars['String']>;
  icons_set?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  knowledge_base_article?: InputMaybe<knowledge_base_articles_obj_rel_insert_input>;
  theme_color?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<users_obj_rel_insert_input>;
  user_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type knowladge_base_appearance_max_fields = {
  __typename?: 'knowladge_base_appearance_max_fields';
  add_languages?: Maybe<Scalars['String']>;
  atricale_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  home_page_link?: Maybe<Scalars['String']>;
  icons_set?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  theme_color?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['Int']>;
};

/** aggregate min on columns */
export type knowladge_base_appearance_min_fields = {
  __typename?: 'knowladge_base_appearance_min_fields';
  add_languages?: Maybe<Scalars['String']>;
  atricale_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  home_page_link?: Maybe<Scalars['String']>;
  icons_set?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  theme_color?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['Int']>;
};

/** response of any mutation on the table "knowladge_base_appearance" */
export type knowladge_base_appearance_mutation_response = {
  __typename?: 'knowladge_base_appearance_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<knowladge_base_appearance>;
};

/** on_conflict condition type for table "knowladge_base_appearance" */
export type knowladge_base_appearance_on_conflict = {
  constraint: knowladge_base_appearance_constraint;
  update_columns?: Array<knowladge_base_appearance_update_column>;
  where?: InputMaybe<knowladge_base_appearance_bool_exp>;
};

/** Ordering options when selecting data from "knowladge_base_appearance". */
export type knowladge_base_appearance_order_by = {
  add_languages?: InputMaybe<order_by>;
  atricale_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  home_page_link?: InputMaybe<order_by>;
  icons_set?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  knowledge_base_article?: InputMaybe<knowledge_base_articles_order_by>;
  theme_color?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user?: InputMaybe<users_order_by>;
  user_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: knowladge_base_appearance */
export type knowladge_base_appearance_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "knowladge_base_appearance" */
export enum knowladge_base_appearance_select_column {
  /** column name */
  add_languages = 'add_languages',
  /** column name */
  atricale_id = 'atricale_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  home_page_link = 'home_page_link',
  /** column name */
  icons_set = 'icons_set',
  /** column name */
  id = 'id',
  /** column name */
  theme_color = 'theme_color',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

/** input type for updating data in table "knowladge_base_appearance" */
export type knowladge_base_appearance_set_input = {
  add_languages?: InputMaybe<Scalars['String']>;
  atricale_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  home_page_link?: InputMaybe<Scalars['String']>;
  icons_set?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  theme_color?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type knowladge_base_appearance_stddev_fields = {
  __typename?: 'knowladge_base_appearance_stddev_fields';
  atricale_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type knowladge_base_appearance_stddev_pop_fields = {
  __typename?: 'knowladge_base_appearance_stddev_pop_fields';
  atricale_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type knowladge_base_appearance_stddev_samp_fields = {
  __typename?: 'knowladge_base_appearance_stddev_samp_fields';
  atricale_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "knowladge_base_appearance" */
export type knowladge_base_appearance_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: knowladge_base_appearance_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type knowladge_base_appearance_stream_cursor_value_input = {
  add_languages?: InputMaybe<Scalars['String']>;
  atricale_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  home_page_link?: InputMaybe<Scalars['String']>;
  icons_set?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  theme_color?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate sum on columns */
export type knowladge_base_appearance_sum_fields = {
  __typename?: 'knowladge_base_appearance_sum_fields';
  atricale_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['Int']>;
};

/** update columns of table "knowladge_base_appearance" */
export enum knowladge_base_appearance_update_column {
  /** column name */
  add_languages = 'add_languages',
  /** column name */
  atricale_id = 'atricale_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  home_page_link = 'home_page_link',
  /** column name */
  icons_set = 'icons_set',
  /** column name */
  id = 'id',
  /** column name */
  theme_color = 'theme_color',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

export type knowladge_base_appearance_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<knowladge_base_appearance_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<knowladge_base_appearance_set_input>;
  /** filter the rows which have to be updated */
  where: knowladge_base_appearance_bool_exp;
};

/** aggregate var_pop on columns */
export type knowladge_base_appearance_var_pop_fields = {
  __typename?: 'knowladge_base_appearance_var_pop_fields';
  atricale_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type knowladge_base_appearance_var_samp_fields = {
  __typename?: 'knowladge_base_appearance_var_samp_fields';
  atricale_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type knowladge_base_appearance_variance_fields = {
  __typename?: 'knowladge_base_appearance_variance_fields';
  atricale_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "knowledge_base_articles" */
export type knowledge_base_articles = {
  __typename?: 'knowledge_base_articles';
  appearance_id?: Maybe<Scalars['Int']>;
  article_status: Scalars['String'];
  body: Scalars['String'];
  /** An object relationship */
  category: knowledge_base_categories;
  category_id: Scalars['Int'];
  conversation_trigger?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  created_by: users;
  created_by_user_id: Scalars['Int'];
  id: Scalars['bigint'];
  is_enabled: Scalars['Boolean'];
  language: Scalars['String'];
  meta_description?: Maybe<Scalars['String']>;
  meta_tags?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  permissions: Scalars['String'];
  read_count: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "knowledge_base_articles" */
export type knowledge_base_articles_aggregate = {
  __typename?: 'knowledge_base_articles_aggregate';
  aggregate?: Maybe<knowledge_base_articles_aggregate_fields>;
  nodes: Array<knowledge_base_articles>;
};

export type knowledge_base_articles_aggregate_bool_exp = {
  bool_and?: InputMaybe<knowledge_base_articles_aggregate_bool_exp_bool_and>;
  bool_or?: InputMaybe<knowledge_base_articles_aggregate_bool_exp_bool_or>;
  count?: InputMaybe<knowledge_base_articles_aggregate_bool_exp_count>;
};

export type knowledge_base_articles_aggregate_bool_exp_bool_and = {
  arguments: knowledge_base_articles_select_column_knowledge_base_articles_aggregate_bool_exp_bool_and_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<knowledge_base_articles_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type knowledge_base_articles_aggregate_bool_exp_bool_or = {
  arguments: knowledge_base_articles_select_column_knowledge_base_articles_aggregate_bool_exp_bool_or_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<knowledge_base_articles_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type knowledge_base_articles_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<knowledge_base_articles_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<knowledge_base_articles_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "knowledge_base_articles" */
export type knowledge_base_articles_aggregate_fields = {
  __typename?: 'knowledge_base_articles_aggregate_fields';
  avg?: Maybe<knowledge_base_articles_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<knowledge_base_articles_max_fields>;
  min?: Maybe<knowledge_base_articles_min_fields>;
  stddev?: Maybe<knowledge_base_articles_stddev_fields>;
  stddev_pop?: Maybe<knowledge_base_articles_stddev_pop_fields>;
  stddev_samp?: Maybe<knowledge_base_articles_stddev_samp_fields>;
  sum?: Maybe<knowledge_base_articles_sum_fields>;
  var_pop?: Maybe<knowledge_base_articles_var_pop_fields>;
  var_samp?: Maybe<knowledge_base_articles_var_samp_fields>;
  variance?: Maybe<knowledge_base_articles_variance_fields>;
};


/** aggregate fields of "knowledge_base_articles" */
export type knowledge_base_articles_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<knowledge_base_articles_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "knowledge_base_articles" */
export type knowledge_base_articles_aggregate_order_by = {
  avg?: InputMaybe<knowledge_base_articles_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<knowledge_base_articles_max_order_by>;
  min?: InputMaybe<knowledge_base_articles_min_order_by>;
  stddev?: InputMaybe<knowledge_base_articles_stddev_order_by>;
  stddev_pop?: InputMaybe<knowledge_base_articles_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<knowledge_base_articles_stddev_samp_order_by>;
  sum?: InputMaybe<knowledge_base_articles_sum_order_by>;
  var_pop?: InputMaybe<knowledge_base_articles_var_pop_order_by>;
  var_samp?: InputMaybe<knowledge_base_articles_var_samp_order_by>;
  variance?: InputMaybe<knowledge_base_articles_variance_order_by>;
};

/** input type for inserting array relation for remote table "knowledge_base_articles" */
export type knowledge_base_articles_arr_rel_insert_input = {
  data: Array<knowledge_base_articles_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<knowledge_base_articles_on_conflict>;
};

/** aggregate avg on columns */
export type knowledge_base_articles_avg_fields = {
  __typename?: 'knowledge_base_articles_avg_fields';
  appearance_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  read_count?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "knowledge_base_articles" */
export type knowledge_base_articles_avg_order_by = {
  appearance_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  read_count?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "knowledge_base_articles". All fields are combined with a logical 'AND'. */
export type knowledge_base_articles_bool_exp = {
  _and?: InputMaybe<Array<knowledge_base_articles_bool_exp>>;
  _not?: InputMaybe<knowledge_base_articles_bool_exp>;
  _or?: InputMaybe<Array<knowledge_base_articles_bool_exp>>;
  appearance_id?: InputMaybe<Int_comparison_exp>;
  article_status?: InputMaybe<String_comparison_exp>;
  body?: InputMaybe<String_comparison_exp>;
  category?: InputMaybe<knowledge_base_categories_bool_exp>;
  category_id?: InputMaybe<Int_comparison_exp>;
  conversation_trigger?: InputMaybe<String_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  created_by?: InputMaybe<users_bool_exp>;
  created_by_user_id?: InputMaybe<Int_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  is_enabled?: InputMaybe<Boolean_comparison_exp>;
  language?: InputMaybe<String_comparison_exp>;
  meta_description?: InputMaybe<String_comparison_exp>;
  meta_tags?: InputMaybe<String_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  permissions?: InputMaybe<String_comparison_exp>;
  read_count?: InputMaybe<Int_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "knowledge_base_articles" */
export enum knowledge_base_articles_constraint {
  /** unique or primary key constraint on columns "id" */
  knowledge_base_articles_pkey = 'knowledge_base_articles_pkey'
}

/** input type for incrementing numeric columns in table "knowledge_base_articles" */
export type knowledge_base_articles_inc_input = {
  appearance_id?: InputMaybe<Scalars['Int']>;
  category_id?: InputMaybe<Scalars['Int']>;
  created_by_user_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  read_count?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "knowledge_base_articles" */
export type knowledge_base_articles_insert_input = {
  appearance_id?: InputMaybe<Scalars['Int']>;
  article_status?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['String']>;
  category?: InputMaybe<knowledge_base_categories_obj_rel_insert_input>;
  category_id?: InputMaybe<Scalars['Int']>;
  conversation_trigger?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<users_obj_rel_insert_input>;
  created_by_user_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  language?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_tags?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  permissions?: InputMaybe<Scalars['String']>;
  read_count?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type knowledge_base_articles_max_fields = {
  __typename?: 'knowledge_base_articles_max_fields';
  appearance_id?: Maybe<Scalars['Int']>;
  article_status?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['String']>;
  category_id?: Maybe<Scalars['Int']>;
  conversation_trigger?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  language?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_tags?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  permissions?: Maybe<Scalars['String']>;
  read_count?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "knowledge_base_articles" */
export type knowledge_base_articles_max_order_by = {
  appearance_id?: InputMaybe<order_by>;
  article_status?: InputMaybe<order_by>;
  body?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  conversation_trigger?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  language?: InputMaybe<order_by>;
  meta_description?: InputMaybe<order_by>;
  meta_tags?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  permissions?: InputMaybe<order_by>;
  read_count?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type knowledge_base_articles_min_fields = {
  __typename?: 'knowledge_base_articles_min_fields';
  appearance_id?: Maybe<Scalars['Int']>;
  article_status?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['String']>;
  category_id?: Maybe<Scalars['Int']>;
  conversation_trigger?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  language?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_tags?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  permissions?: Maybe<Scalars['String']>;
  read_count?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "knowledge_base_articles" */
export type knowledge_base_articles_min_order_by = {
  appearance_id?: InputMaybe<order_by>;
  article_status?: InputMaybe<order_by>;
  body?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  conversation_trigger?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  language?: InputMaybe<order_by>;
  meta_description?: InputMaybe<order_by>;
  meta_tags?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  permissions?: InputMaybe<order_by>;
  read_count?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** response of any mutation on the table "knowledge_base_articles" */
export type knowledge_base_articles_mutation_response = {
  __typename?: 'knowledge_base_articles_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<knowledge_base_articles>;
};

/** input type for inserting object relation for remote table "knowledge_base_articles" */
export type knowledge_base_articles_obj_rel_insert_input = {
  data: knowledge_base_articles_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<knowledge_base_articles_on_conflict>;
};

/** on_conflict condition type for table "knowledge_base_articles" */
export type knowledge_base_articles_on_conflict = {
  constraint: knowledge_base_articles_constraint;
  update_columns?: Array<knowledge_base_articles_update_column>;
  where?: InputMaybe<knowledge_base_articles_bool_exp>;
};

/** Ordering options when selecting data from "knowledge_base_articles". */
export type knowledge_base_articles_order_by = {
  appearance_id?: InputMaybe<order_by>;
  article_status?: InputMaybe<order_by>;
  body?: InputMaybe<order_by>;
  category?: InputMaybe<knowledge_base_categories_order_by>;
  category_id?: InputMaybe<order_by>;
  conversation_trigger?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by?: InputMaybe<users_order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  is_enabled?: InputMaybe<order_by>;
  language?: InputMaybe<order_by>;
  meta_description?: InputMaybe<order_by>;
  meta_tags?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  permissions?: InputMaybe<order_by>;
  read_count?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: knowledge_base_articles */
export type knowledge_base_articles_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "knowledge_base_articles" */
export enum knowledge_base_articles_select_column {
  /** column name */
  appearance_id = 'appearance_id',
  /** column name */
  article_status = 'article_status',
  /** column name */
  body = 'body',
  /** column name */
  category_id = 'category_id',
  /** column name */
  conversation_trigger = 'conversation_trigger',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  language = 'language',
  /** column name */
  meta_description = 'meta_description',
  /** column name */
  meta_tags = 'meta_tags',
  /** column name */
  name = 'name',
  /** column name */
  permissions = 'permissions',
  /** column name */
  read_count = 'read_count',
  /** column name */
  updated_at = 'updated_at'
}

/** select "knowledge_base_articles_aggregate_bool_exp_bool_and_arguments_columns" columns of table "knowledge_base_articles" */
export enum knowledge_base_articles_select_column_knowledge_base_articles_aggregate_bool_exp_bool_and_arguments_columns {
  /** column name */
  is_enabled = 'is_enabled'
}

/** select "knowledge_base_articles_aggregate_bool_exp_bool_or_arguments_columns" columns of table "knowledge_base_articles" */
export enum knowledge_base_articles_select_column_knowledge_base_articles_aggregate_bool_exp_bool_or_arguments_columns {
  /** column name */
  is_enabled = 'is_enabled'
}

/** input type for updating data in table "knowledge_base_articles" */
export type knowledge_base_articles_set_input = {
  appearance_id?: InputMaybe<Scalars['Int']>;
  article_status?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['String']>;
  category_id?: InputMaybe<Scalars['Int']>;
  conversation_trigger?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  language?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_tags?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  permissions?: InputMaybe<Scalars['String']>;
  read_count?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type knowledge_base_articles_stddev_fields = {
  __typename?: 'knowledge_base_articles_stddev_fields';
  appearance_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  read_count?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "knowledge_base_articles" */
export type knowledge_base_articles_stddev_order_by = {
  appearance_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  read_count?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type knowledge_base_articles_stddev_pop_fields = {
  __typename?: 'knowledge_base_articles_stddev_pop_fields';
  appearance_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  read_count?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "knowledge_base_articles" */
export type knowledge_base_articles_stddev_pop_order_by = {
  appearance_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  read_count?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type knowledge_base_articles_stddev_samp_fields = {
  __typename?: 'knowledge_base_articles_stddev_samp_fields';
  appearance_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  read_count?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "knowledge_base_articles" */
export type knowledge_base_articles_stddev_samp_order_by = {
  appearance_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  read_count?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "knowledge_base_articles" */
export type knowledge_base_articles_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: knowledge_base_articles_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type knowledge_base_articles_stream_cursor_value_input = {
  appearance_id?: InputMaybe<Scalars['Int']>;
  article_status?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['String']>;
  category_id?: InputMaybe<Scalars['Int']>;
  conversation_trigger?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  language?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_tags?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  permissions?: InputMaybe<Scalars['String']>;
  read_count?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type knowledge_base_articles_sum_fields = {
  __typename?: 'knowledge_base_articles_sum_fields';
  appearance_id?: Maybe<Scalars['Int']>;
  category_id?: Maybe<Scalars['Int']>;
  created_by_user_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  read_count?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "knowledge_base_articles" */
export type knowledge_base_articles_sum_order_by = {
  appearance_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  read_count?: InputMaybe<order_by>;
};

/** update columns of table "knowledge_base_articles" */
export enum knowledge_base_articles_update_column {
  /** column name */
  appearance_id = 'appearance_id',
  /** column name */
  article_status = 'article_status',
  /** column name */
  body = 'body',
  /** column name */
  category_id = 'category_id',
  /** column name */
  conversation_trigger = 'conversation_trigger',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  language = 'language',
  /** column name */
  meta_description = 'meta_description',
  /** column name */
  meta_tags = 'meta_tags',
  /** column name */
  name = 'name',
  /** column name */
  permissions = 'permissions',
  /** column name */
  read_count = 'read_count',
  /** column name */
  updated_at = 'updated_at'
}

export type knowledge_base_articles_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<knowledge_base_articles_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<knowledge_base_articles_set_input>;
  /** filter the rows which have to be updated */
  where: knowledge_base_articles_bool_exp;
};

/** aggregate var_pop on columns */
export type knowledge_base_articles_var_pop_fields = {
  __typename?: 'knowledge_base_articles_var_pop_fields';
  appearance_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  read_count?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "knowledge_base_articles" */
export type knowledge_base_articles_var_pop_order_by = {
  appearance_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  read_count?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type knowledge_base_articles_var_samp_fields = {
  __typename?: 'knowledge_base_articles_var_samp_fields';
  appearance_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  read_count?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "knowledge_base_articles" */
export type knowledge_base_articles_var_samp_order_by = {
  appearance_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  read_count?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type knowledge_base_articles_variance_fields = {
  __typename?: 'knowledge_base_articles_variance_fields';
  appearance_id?: Maybe<Scalars['Float']>;
  category_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  read_count?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "knowledge_base_articles" */
export type knowledge_base_articles_variance_order_by = {
  appearance_id?: InputMaybe<order_by>;
  category_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  read_count?: InputMaybe<order_by>;
};

/** columns and relationships of "knowledge_base_categories" */
export type knowledge_base_categories = {
  __typename?: 'knowledge_base_categories';
  account_id: Scalars['Int'];
  /** An array relationship */
  articles: Array<knowledge_base_articles>;
  /** An aggregate relationship */
  articles_aggregate: knowledge_base_articles_aggregate;
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  created_by?: Maybe<account_agents>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  description: Scalars['String'];
  id: Scalars['bigint'];
  is_enabled: Scalars['Boolean'];
  language: Scalars['String'];
  name: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "knowledge_base_categories" */
export type knowledge_base_categoriesarticlesArgs = {
  distinct_on?: InputMaybe<Array<knowledge_base_articles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowledge_base_articles_order_by>>;
  where?: InputMaybe<knowledge_base_articles_bool_exp>;
};


/** columns and relationships of "knowledge_base_categories" */
export type knowledge_base_categoriesarticles_aggregateArgs = {
  distinct_on?: InputMaybe<Array<knowledge_base_articles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowledge_base_articles_order_by>>;
  where?: InputMaybe<knowledge_base_articles_bool_exp>;
};

/** aggregated selection of "knowledge_base_categories" */
export type knowledge_base_categories_aggregate = {
  __typename?: 'knowledge_base_categories_aggregate';
  aggregate?: Maybe<knowledge_base_categories_aggregate_fields>;
  nodes: Array<knowledge_base_categories>;
};

/** aggregate fields of "knowledge_base_categories" */
export type knowledge_base_categories_aggregate_fields = {
  __typename?: 'knowledge_base_categories_aggregate_fields';
  avg?: Maybe<knowledge_base_categories_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<knowledge_base_categories_max_fields>;
  min?: Maybe<knowledge_base_categories_min_fields>;
  stddev?: Maybe<knowledge_base_categories_stddev_fields>;
  stddev_pop?: Maybe<knowledge_base_categories_stddev_pop_fields>;
  stddev_samp?: Maybe<knowledge_base_categories_stddev_samp_fields>;
  sum?: Maybe<knowledge_base_categories_sum_fields>;
  var_pop?: Maybe<knowledge_base_categories_var_pop_fields>;
  var_samp?: Maybe<knowledge_base_categories_var_samp_fields>;
  variance?: Maybe<knowledge_base_categories_variance_fields>;
};


/** aggregate fields of "knowledge_base_categories" */
export type knowledge_base_categories_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<knowledge_base_categories_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type knowledge_base_categories_avg_fields = {
  __typename?: 'knowledge_base_categories_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "knowledge_base_categories". All fields are combined with a logical 'AND'. */
export type knowledge_base_categories_bool_exp = {
  _and?: InputMaybe<Array<knowledge_base_categories_bool_exp>>;
  _not?: InputMaybe<knowledge_base_categories_bool_exp>;
  _or?: InputMaybe<Array<knowledge_base_categories_bool_exp>>;
  account_id?: InputMaybe<Int_comparison_exp>;
  articles?: InputMaybe<knowledge_base_articles_bool_exp>;
  articles_aggregate?: InputMaybe<knowledge_base_articles_aggregate_bool_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  created_by?: InputMaybe<account_agents_bool_exp>;
  created_by_user_id?: InputMaybe<bigint_comparison_exp>;
  description?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  is_enabled?: InputMaybe<Boolean_comparison_exp>;
  language?: InputMaybe<String_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "knowledge_base_categories" */
export enum knowledge_base_categories_constraint {
  /** unique or primary key constraint on columns "id" */
  knowledge_base_category_pkey = 'knowledge_base_category_pkey'
}

/** input type for incrementing numeric columns in table "knowledge_base_categories" */
export type knowledge_base_categories_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "knowledge_base_categories" */
export type knowledge_base_categories_insert_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  articles?: InputMaybe<knowledge_base_articles_arr_rel_insert_input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<account_agents_obj_rel_insert_input>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  language?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type knowledge_base_categories_max_fields = {
  __typename?: 'knowledge_base_categories_max_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  language?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type knowledge_base_categories_min_fields = {
  __typename?: 'knowledge_base_categories_min_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  language?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "knowledge_base_categories" */
export type knowledge_base_categories_mutation_response = {
  __typename?: 'knowledge_base_categories_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<knowledge_base_categories>;
};

/** input type for inserting object relation for remote table "knowledge_base_categories" */
export type knowledge_base_categories_obj_rel_insert_input = {
  data: knowledge_base_categories_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<knowledge_base_categories_on_conflict>;
};

/** on_conflict condition type for table "knowledge_base_categories" */
export type knowledge_base_categories_on_conflict = {
  constraint: knowledge_base_categories_constraint;
  update_columns?: Array<knowledge_base_categories_update_column>;
  where?: InputMaybe<knowledge_base_categories_bool_exp>;
};

/** Ordering options when selecting data from "knowledge_base_categories". */
export type knowledge_base_categories_order_by = {
  account_id?: InputMaybe<order_by>;
  articles_aggregate?: InputMaybe<knowledge_base_articles_aggregate_order_by>;
  created_at?: InputMaybe<order_by>;
  created_by?: InputMaybe<account_agents_order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  description?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  is_enabled?: InputMaybe<order_by>;
  language?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: knowledge_base_categories */
export type knowledge_base_categories_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "knowledge_base_categories" */
export enum knowledge_base_categories_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  description = 'description',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  language = 'language',
  /** column name */
  name = 'name',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "knowledge_base_categories" */
export type knowledge_base_categories_set_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  language?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type knowledge_base_categories_stddev_fields = {
  __typename?: 'knowledge_base_categories_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type knowledge_base_categories_stddev_pop_fields = {
  __typename?: 'knowledge_base_categories_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type knowledge_base_categories_stddev_samp_fields = {
  __typename?: 'knowledge_base_categories_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "knowledge_base_categories" */
export type knowledge_base_categories_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: knowledge_base_categories_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type knowledge_base_categories_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  language?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type knowledge_base_categories_sum_fields = {
  __typename?: 'knowledge_base_categories_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "knowledge_base_categories" */
export enum knowledge_base_categories_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  description = 'description',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  language = 'language',
  /** column name */
  name = 'name',
  /** column name */
  updated_at = 'updated_at'
}

export type knowledge_base_categories_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<knowledge_base_categories_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<knowledge_base_categories_set_input>;
  /** filter the rows which have to be updated */
  where: knowledge_base_categories_bool_exp;
};

/** aggregate var_pop on columns */
export type knowledge_base_categories_var_pop_fields = {
  __typename?: 'knowledge_base_categories_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type knowledge_base_categories_var_samp_fields = {
  __typename?: 'knowledge_base_categories_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type knowledge_base_categories_variance_fields = {
  __typename?: 'knowledge_base_categories_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Logs the agents' login, logout, online, break, offline time */
export type log_agent_status = {
  __typename?: 'log_agent_status';
  account_id: Scalars['Int'];
  agent_id: Scalars['bigint'];
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  /** login, logout, online, offline, break, busy */
  new_availability_status: Scalars['String'];
  /** login, logout, online, offline, break, busy */
  prev_availability_status: Scalars['String'];
  status_changed_by_user_id?: Maybe<Scalars['bigint']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "log_agent_status" */
export type log_agent_status_aggregate = {
  __typename?: 'log_agent_status_aggregate';
  aggregate?: Maybe<log_agent_status_aggregate_fields>;
  nodes: Array<log_agent_status>;
};

/** aggregate fields of "log_agent_status" */
export type log_agent_status_aggregate_fields = {
  __typename?: 'log_agent_status_aggregate_fields';
  avg?: Maybe<log_agent_status_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<log_agent_status_max_fields>;
  min?: Maybe<log_agent_status_min_fields>;
  stddev?: Maybe<log_agent_status_stddev_fields>;
  stddev_pop?: Maybe<log_agent_status_stddev_pop_fields>;
  stddev_samp?: Maybe<log_agent_status_stddev_samp_fields>;
  sum?: Maybe<log_agent_status_sum_fields>;
  var_pop?: Maybe<log_agent_status_var_pop_fields>;
  var_samp?: Maybe<log_agent_status_var_samp_fields>;
  variance?: Maybe<log_agent_status_variance_fields>;
};


/** aggregate fields of "log_agent_status" */
export type log_agent_status_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<log_agent_status_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type log_agent_status_avg_fields = {
  __typename?: 'log_agent_status_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  status_changed_by_user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "log_agent_status". All fields are combined with a logical 'AND'. */
export type log_agent_status_bool_exp = {
  _and?: InputMaybe<Array<log_agent_status_bool_exp>>;
  _not?: InputMaybe<log_agent_status_bool_exp>;
  _or?: InputMaybe<Array<log_agent_status_bool_exp>>;
  account_id?: InputMaybe<Int_comparison_exp>;
  agent_id?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  new_availability_status?: InputMaybe<String_comparison_exp>;
  prev_availability_status?: InputMaybe<String_comparison_exp>;
  status_changed_by_user_id?: InputMaybe<bigint_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "log_agent_status" */
export enum log_agent_status_constraint {
  /** unique or primary key constraint on columns "id" */
  log_agent_status_pkey = 'log_agent_status_pkey'
}

/** input type for incrementing numeric columns in table "log_agent_status" */
export type log_agent_status_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  agent_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  status_changed_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "log_agent_status" */
export type log_agent_status_insert_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  agent_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** login, logout, online, offline, break, busy */
  new_availability_status?: InputMaybe<Scalars['String']>;
  /** login, logout, online, offline, break, busy */
  prev_availability_status?: InputMaybe<Scalars['String']>;
  status_changed_by_user_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type log_agent_status_max_fields = {
  __typename?: 'log_agent_status_max_fields';
  account_id?: Maybe<Scalars['Int']>;
  agent_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** login, logout, online, offline, break, busy */
  new_availability_status?: Maybe<Scalars['String']>;
  /** login, logout, online, offline, break, busy */
  prev_availability_status?: Maybe<Scalars['String']>;
  status_changed_by_user_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type log_agent_status_min_fields = {
  __typename?: 'log_agent_status_min_fields';
  account_id?: Maybe<Scalars['Int']>;
  agent_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** login, logout, online, offline, break, busy */
  new_availability_status?: Maybe<Scalars['String']>;
  /** login, logout, online, offline, break, busy */
  prev_availability_status?: Maybe<Scalars['String']>;
  status_changed_by_user_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "log_agent_status" */
export type log_agent_status_mutation_response = {
  __typename?: 'log_agent_status_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<log_agent_status>;
};

/** on_conflict condition type for table "log_agent_status" */
export type log_agent_status_on_conflict = {
  constraint: log_agent_status_constraint;
  update_columns?: Array<log_agent_status_update_column>;
  where?: InputMaybe<log_agent_status_bool_exp>;
};

/** Ordering options when selecting data from "log_agent_status". */
export type log_agent_status_order_by = {
  account_id?: InputMaybe<order_by>;
  agent_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  new_availability_status?: InputMaybe<order_by>;
  prev_availability_status?: InputMaybe<order_by>;
  status_changed_by_user_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: log_agent_status */
export type log_agent_status_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "log_agent_status" */
export enum log_agent_status_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  agent_id = 'agent_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  new_availability_status = 'new_availability_status',
  /** column name */
  prev_availability_status = 'prev_availability_status',
  /** column name */
  status_changed_by_user_id = 'status_changed_by_user_id',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "log_agent_status" */
export type log_agent_status_set_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  agent_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** login, logout, online, offline, break, busy */
  new_availability_status?: InputMaybe<Scalars['String']>;
  /** login, logout, online, offline, break, busy */
  prev_availability_status?: InputMaybe<Scalars['String']>;
  status_changed_by_user_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type log_agent_status_stddev_fields = {
  __typename?: 'log_agent_status_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  status_changed_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type log_agent_status_stddev_pop_fields = {
  __typename?: 'log_agent_status_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  status_changed_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type log_agent_status_stddev_samp_fields = {
  __typename?: 'log_agent_status_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  status_changed_by_user_id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "log_agent_status" */
export type log_agent_status_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: log_agent_status_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type log_agent_status_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  agent_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** login, logout, online, offline, break, busy */
  new_availability_status?: InputMaybe<Scalars['String']>;
  /** login, logout, online, offline, break, busy */
  prev_availability_status?: InputMaybe<Scalars['String']>;
  status_changed_by_user_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type log_agent_status_sum_fields = {
  __typename?: 'log_agent_status_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  agent_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  status_changed_by_user_id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "log_agent_status" */
export enum log_agent_status_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  agent_id = 'agent_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  new_availability_status = 'new_availability_status',
  /** column name */
  prev_availability_status = 'prev_availability_status',
  /** column name */
  status_changed_by_user_id = 'status_changed_by_user_id',
  /** column name */
  updated_at = 'updated_at'
}

export type log_agent_status_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<log_agent_status_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<log_agent_status_set_input>;
  /** filter the rows which have to be updated */
  where: log_agent_status_bool_exp;
};

/** aggregate var_pop on columns */
export type log_agent_status_var_pop_fields = {
  __typename?: 'log_agent_status_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  status_changed_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type log_agent_status_var_samp_fields = {
  __typename?: 'log_agent_status_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  status_changed_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type log_agent_status_variance_fields = {
  __typename?: 'log_agent_status_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  agent_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  status_changed_by_user_id?: Maybe<Scalars['Float']>;
};

/** All messages from different conversations. */
export type messages = {
  __typename?: 'messages';
  /** An object relationship */
  account: accounts;
  account_id: Scalars['bigint'];
  approved_at?: Maybe<Scalars['timetz']>;
  approved_by_user_id?: Maybe<Scalars['bigint']>;
  /** An array relationship */
  attachments: Array<attachments>;
  /** An aggregate relationship */
  attachments_aggregate: attachments_aggregate;
  content_attributes?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  conversation: conversations;
  /** An object relationship */
  conversation_activity_log?: Maybe<conversation_activity_log>;
  conversation_id: Scalars['bigint'];
  created_at: Scalars['timestamptz'];
  /** Source information for each message. e.g for tweet it stores sender information of each message. */
  external_source?: Maybe<Scalars['jsonb']>;
  id: Scalars['bigint'];
  /** ❌ */
  inbox_id?: Maybe<Scalars['Int']>;
  internal: Scalars['Boolean'];
  /** Indicates if the message is approved or not */
  is_approved: Scalars['Boolean'];
  /** ❌ Indicates if the message is read or unread */
  is_read: Scalars['Boolean'];
  /** An array relationship */
  mentions: Array<conversation_message_mentions>;
  /** An aggregate relationship */
  mentions_aggregate: conversation_message_mentions_aggregate;
  message?: Maybe<Scalars['String']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type: Scalars['Int'];
  /** An array relationship */
  replied_messages: Array<messages>;
  /** An aggregate relationship */
  replied_messages_aggregate: messages_aggregate;
  /** An object relationship */
  reply_of_message?: Maybe<messages>;
  reply_of_message_id?: Maybe<Scalars['bigint']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status: Scalars['Int'];
  sender_id?: Maybe<Scalars['Int']>;
  /** A computed field, executes function "view_sender_information" */
  sender_info?: Maybe<Scalars['jsonb']>;
  /** "contact", "user", "system", "external" */
  sender_type?: Maybe<Scalars['String']>;
  /** Message ID of the source message */
  source_id?: Maybe<Scalars['String']>;
  /** 0 = read, 1 = unread */
  status: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};


/** All messages from different conversations. */
export type messagesattachmentsArgs = {
  distinct_on?: InputMaybe<Array<attachments_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<attachments_order_by>>;
  where?: InputMaybe<attachments_bool_exp>;
};


/** All messages from different conversations. */
export type messagesattachments_aggregateArgs = {
  distinct_on?: InputMaybe<Array<attachments_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<attachments_order_by>>;
  where?: InputMaybe<attachments_bool_exp>;
};


/** All messages from different conversations. */
export type messagescontent_attributesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** All messages from different conversations. */
export type messagesexternal_sourceArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** All messages from different conversations. */
export type messagesmentionsArgs = {
  distinct_on?: InputMaybe<Array<conversation_message_mentions_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_message_mentions_order_by>>;
  where?: InputMaybe<conversation_message_mentions_bool_exp>;
};


/** All messages from different conversations. */
export type messagesmentions_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversation_message_mentions_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_message_mentions_order_by>>;
  where?: InputMaybe<conversation_message_mentions_bool_exp>;
};


/** All messages from different conversations. */
export type messagesreplied_messagesArgs = {
  distinct_on?: InputMaybe<Array<messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<messages_order_by>>;
  where?: InputMaybe<messages_bool_exp>;
};


/** All messages from different conversations. */
export type messagesreplied_messages_aggregateArgs = {
  distinct_on?: InputMaybe<Array<messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<messages_order_by>>;
  where?: InputMaybe<messages_bool_exp>;
};


/** All messages from different conversations. */
export type messagessender_infoArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "messages" */
export type messages_aggregate = {
  __typename?: 'messages_aggregate';
  aggregate?: Maybe<messages_aggregate_fields>;
  nodes: Array<messages>;
};

export type messages_aggregate_bool_exp = {
  bool_and?: InputMaybe<messages_aggregate_bool_exp_bool_and>;
  bool_or?: InputMaybe<messages_aggregate_bool_exp_bool_or>;
  count?: InputMaybe<messages_aggregate_bool_exp_count>;
};

export type messages_aggregate_bool_exp_bool_and = {
  arguments: messages_select_column_messages_aggregate_bool_exp_bool_and_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<messages_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type messages_aggregate_bool_exp_bool_or = {
  arguments: messages_select_column_messages_aggregate_bool_exp_bool_or_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<messages_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type messages_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<messages_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<messages_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "messages" */
export type messages_aggregate_fields = {
  __typename?: 'messages_aggregate_fields';
  avg?: Maybe<messages_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<messages_max_fields>;
  min?: Maybe<messages_min_fields>;
  stddev?: Maybe<messages_stddev_fields>;
  stddev_pop?: Maybe<messages_stddev_pop_fields>;
  stddev_samp?: Maybe<messages_stddev_samp_fields>;
  sum?: Maybe<messages_sum_fields>;
  var_pop?: Maybe<messages_var_pop_fields>;
  var_samp?: Maybe<messages_var_samp_fields>;
  variance?: Maybe<messages_variance_fields>;
};


/** aggregate fields of "messages" */
export type messages_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<messages_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "messages" */
export type messages_aggregate_order_by = {
  avg?: InputMaybe<messages_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<messages_max_order_by>;
  min?: InputMaybe<messages_min_order_by>;
  stddev?: InputMaybe<messages_stddev_order_by>;
  stddev_pop?: InputMaybe<messages_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<messages_stddev_samp_order_by>;
  sum?: InputMaybe<messages_sum_order_by>;
  var_pop?: InputMaybe<messages_var_pop_order_by>;
  var_samp?: InputMaybe<messages_var_samp_order_by>;
  variance?: InputMaybe<messages_variance_order_by>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type messages_append_input = {
  content_attributes?: InputMaybe<Scalars['jsonb']>;
  /** Source information for each message. e.g for tweet it stores sender information of each message. */
  external_source?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "messages" */
export type messages_arr_rel_insert_input = {
  data: Array<messages_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<messages_on_conflict>;
};

/** aggregate avg on columns */
export type messages_avg_fields = {
  __typename?: 'messages_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  approved_by_user_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** ❌ */
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  reply_of_message_id?: Maybe<Scalars['Float']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "messages" */
export type messages_avg_order_by = {
  account_id?: InputMaybe<order_by>;
  approved_by_user_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** ❌ */
  inbox_id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  reply_of_message_id?: InputMaybe<order_by>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "messages". All fields are combined with a logical 'AND'. */
export type messages_bool_exp = {
  _and?: InputMaybe<Array<messages_bool_exp>>;
  _not?: InputMaybe<messages_bool_exp>;
  _or?: InputMaybe<Array<messages_bool_exp>>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  approved_at?: InputMaybe<timetz_comparison_exp>;
  approved_by_user_id?: InputMaybe<bigint_comparison_exp>;
  attachments?: InputMaybe<attachments_bool_exp>;
  attachments_aggregate?: InputMaybe<attachments_aggregate_bool_exp>;
  content_attributes?: InputMaybe<jsonb_comparison_exp>;
  conversation?: InputMaybe<conversations_bool_exp>;
  conversation_activity_log?: InputMaybe<conversation_activity_log_bool_exp>;
  conversation_id?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  external_source?: InputMaybe<jsonb_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  inbox_id?: InputMaybe<Int_comparison_exp>;
  internal?: InputMaybe<Boolean_comparison_exp>;
  is_approved?: InputMaybe<Boolean_comparison_exp>;
  is_read?: InputMaybe<Boolean_comparison_exp>;
  mentions?: InputMaybe<conversation_message_mentions_bool_exp>;
  mentions_aggregate?: InputMaybe<conversation_message_mentions_aggregate_bool_exp>;
  message?: InputMaybe<String_comparison_exp>;
  message_type?: InputMaybe<Int_comparison_exp>;
  replied_messages?: InputMaybe<messages_bool_exp>;
  replied_messages_aggregate?: InputMaybe<messages_aggregate_bool_exp>;
  reply_of_message?: InputMaybe<messages_bool_exp>;
  reply_of_message_id?: InputMaybe<bigint_comparison_exp>;
  review_status?: InputMaybe<Int_comparison_exp>;
  sender_id?: InputMaybe<Int_comparison_exp>;
  sender_info?: InputMaybe<jsonb_comparison_exp>;
  sender_type?: InputMaybe<String_comparison_exp>;
  source_id?: InputMaybe<String_comparison_exp>;
  status?: InputMaybe<Int_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "messages" */
export enum messages_constraint {
  /** unique or primary key constraint on columns "conversation_id", "source_id" */
  messages_conversation_id_source_id_key = 'messages_conversation_id_source_id_key',
  /** unique or primary key constraint on columns "id" */
  twitter_pkey = 'twitter_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type messages_delete_at_path_input = {
  content_attributes?: InputMaybe<Array<Scalars['String']>>;
  /** Source information for each message. e.g for tweet it stores sender information of each message. */
  external_source?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type messages_delete_elem_input = {
  content_attributes?: InputMaybe<Scalars['Int']>;
  /** Source information for each message. e.g for tweet it stores sender information of each message. */
  external_source?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type messages_delete_key_input = {
  content_attributes?: InputMaybe<Scalars['String']>;
  /** Source information for each message. e.g for tweet it stores sender information of each message. */
  external_source?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "messages" */
export type messages_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  approved_by_user_id?: InputMaybe<Scalars['bigint']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** ❌ */
  inbox_id?: InputMaybe<Scalars['Int']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<Scalars['Int']>;
  reply_of_message_id?: InputMaybe<Scalars['bigint']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<Scalars['Int']>;
  sender_id?: InputMaybe<Scalars['Int']>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "messages" */
export type messages_insert_input = {
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['bigint']>;
  approved_at?: InputMaybe<Scalars['timetz']>;
  approved_by_user_id?: InputMaybe<Scalars['bigint']>;
  attachments?: InputMaybe<attachments_arr_rel_insert_input>;
  content_attributes?: InputMaybe<Scalars['jsonb']>;
  conversation?: InputMaybe<conversations_obj_rel_insert_input>;
  conversation_activity_log?: InputMaybe<conversation_activity_log_obj_rel_insert_input>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  /** Source information for each message. e.g for tweet it stores sender information of each message. */
  external_source?: InputMaybe<Scalars['jsonb']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** ❌ */
  inbox_id?: InputMaybe<Scalars['Int']>;
  internal?: InputMaybe<Scalars['Boolean']>;
  /** Indicates if the message is approved or not */
  is_approved?: InputMaybe<Scalars['Boolean']>;
  /** ❌ Indicates if the message is read or unread */
  is_read?: InputMaybe<Scalars['Boolean']>;
  mentions?: InputMaybe<conversation_message_mentions_arr_rel_insert_input>;
  message?: InputMaybe<Scalars['String']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<Scalars['Int']>;
  replied_messages?: InputMaybe<messages_arr_rel_insert_input>;
  reply_of_message?: InputMaybe<messages_obj_rel_insert_input>;
  reply_of_message_id?: InputMaybe<Scalars['bigint']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<Scalars['Int']>;
  sender_id?: InputMaybe<Scalars['Int']>;
  /** "contact", "user", "system", "external" */
  sender_type?: InputMaybe<Scalars['String']>;
  /** Message ID of the source message */
  source_id?: InputMaybe<Scalars['String']>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type messages_max_fields = {
  __typename?: 'messages_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  approved_at?: Maybe<Scalars['timetz']>;
  approved_by_user_id?: Maybe<Scalars['bigint']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** ❌ */
  inbox_id?: Maybe<Scalars['Int']>;
  message?: Maybe<Scalars['String']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Int']>;
  reply_of_message_id?: Maybe<Scalars['bigint']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: Maybe<Scalars['Int']>;
  sender_id?: Maybe<Scalars['Int']>;
  /** "contact", "user", "system", "external" */
  sender_type?: Maybe<Scalars['String']>;
  /** Message ID of the source message */
  source_id?: Maybe<Scalars['String']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "messages" */
export type messages_max_order_by = {
  account_id?: InputMaybe<order_by>;
  approved_at?: InputMaybe<order_by>;
  approved_by_user_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** ❌ */
  inbox_id?: InputMaybe<order_by>;
  message?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  reply_of_message_id?: InputMaybe<order_by>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** "contact", "user", "system", "external" */
  sender_type?: InputMaybe<order_by>;
  /** Message ID of the source message */
  source_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type messages_min_fields = {
  __typename?: 'messages_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  approved_at?: Maybe<Scalars['timetz']>;
  approved_by_user_id?: Maybe<Scalars['bigint']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** ❌ */
  inbox_id?: Maybe<Scalars['Int']>;
  message?: Maybe<Scalars['String']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Int']>;
  reply_of_message_id?: Maybe<Scalars['bigint']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: Maybe<Scalars['Int']>;
  sender_id?: Maybe<Scalars['Int']>;
  /** "contact", "user", "system", "external" */
  sender_type?: Maybe<Scalars['String']>;
  /** Message ID of the source message */
  source_id?: Maybe<Scalars['String']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "messages" */
export type messages_min_order_by = {
  account_id?: InputMaybe<order_by>;
  approved_at?: InputMaybe<order_by>;
  approved_by_user_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** ❌ */
  inbox_id?: InputMaybe<order_by>;
  message?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  reply_of_message_id?: InputMaybe<order_by>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** "contact", "user", "system", "external" */
  sender_type?: InputMaybe<order_by>;
  /** Message ID of the source message */
  source_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** response of any mutation on the table "messages" */
export type messages_mutation_response = {
  __typename?: 'messages_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<messages>;
};

/** input type for inserting object relation for remote table "messages" */
export type messages_obj_rel_insert_input = {
  data: messages_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<messages_on_conflict>;
};

/** on_conflict condition type for table "messages" */
export type messages_on_conflict = {
  constraint: messages_constraint;
  update_columns?: Array<messages_update_column>;
  where?: InputMaybe<messages_bool_exp>;
};

/** Ordering options when selecting data from "messages". */
export type messages_order_by = {
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  approved_at?: InputMaybe<order_by>;
  approved_by_user_id?: InputMaybe<order_by>;
  attachments_aggregate?: InputMaybe<attachments_aggregate_order_by>;
  content_attributes?: InputMaybe<order_by>;
  conversation?: InputMaybe<conversations_order_by>;
  conversation_activity_log?: InputMaybe<conversation_activity_log_order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  external_source?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  internal?: InputMaybe<order_by>;
  is_approved?: InputMaybe<order_by>;
  is_read?: InputMaybe<order_by>;
  mentions_aggregate?: InputMaybe<conversation_message_mentions_aggregate_order_by>;
  message?: InputMaybe<order_by>;
  message_type?: InputMaybe<order_by>;
  replied_messages_aggregate?: InputMaybe<messages_aggregate_order_by>;
  reply_of_message?: InputMaybe<messages_order_by>;
  reply_of_message_id?: InputMaybe<order_by>;
  review_status?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  sender_info?: InputMaybe<order_by>;
  sender_type?: InputMaybe<order_by>;
  source_id?: InputMaybe<order_by>;
  status?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: messages */
export type messages_pk_columns_input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type messages_prepend_input = {
  content_attributes?: InputMaybe<Scalars['jsonb']>;
  /** Source information for each message. e.g for tweet it stores sender information of each message. */
  external_source?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "messages" */
export enum messages_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  approved_at = 'approved_at',
  /** column name */
  approved_by_user_id = 'approved_by_user_id',
  /** column name */
  content_attributes = 'content_attributes',
  /** column name */
  conversation_id = 'conversation_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  external_source = 'external_source',
  /** column name */
  id = 'id',
  /** column name */
  inbox_id = 'inbox_id',
  /** column name */
  internal = 'internal',
  /** column name */
  is_approved = 'is_approved',
  /** column name */
  is_read = 'is_read',
  /** column name */
  message = 'message',
  /** column name */
  message_type = 'message_type',
  /** column name */
  reply_of_message_id = 'reply_of_message_id',
  /** column name */
  review_status = 'review_status',
  /** column name */
  sender_id = 'sender_id',
  /** column name */
  sender_type = 'sender_type',
  /** column name */
  source_id = 'source_id',
  /** column name */
  status = 'status',
  /** column name */
  updated_at = 'updated_at'
}

/** select "messages_aggregate_bool_exp_bool_and_arguments_columns" columns of table "messages" */
export enum messages_select_column_messages_aggregate_bool_exp_bool_and_arguments_columns {
  /** column name */
  internal = 'internal',
  /** column name */
  is_approved = 'is_approved',
  /** column name */
  is_read = 'is_read'
}

/** select "messages_aggregate_bool_exp_bool_or_arguments_columns" columns of table "messages" */
export enum messages_select_column_messages_aggregate_bool_exp_bool_or_arguments_columns {
  /** column name */
  internal = 'internal',
  /** column name */
  is_approved = 'is_approved',
  /** column name */
  is_read = 'is_read'
}

/** input type for updating data in table "messages" */
export type messages_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  approved_at?: InputMaybe<Scalars['timetz']>;
  approved_by_user_id?: InputMaybe<Scalars['bigint']>;
  content_attributes?: InputMaybe<Scalars['jsonb']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  /** Source information for each message. e.g for tweet it stores sender information of each message. */
  external_source?: InputMaybe<Scalars['jsonb']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** ❌ */
  inbox_id?: InputMaybe<Scalars['Int']>;
  internal?: InputMaybe<Scalars['Boolean']>;
  /** Indicates if the message is approved or not */
  is_approved?: InputMaybe<Scalars['Boolean']>;
  /** ❌ Indicates if the message is read or unread */
  is_read?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<Scalars['Int']>;
  reply_of_message_id?: InputMaybe<Scalars['bigint']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<Scalars['Int']>;
  sender_id?: InputMaybe<Scalars['Int']>;
  /** "contact", "user", "system", "external" */
  sender_type?: InputMaybe<Scalars['String']>;
  /** Message ID of the source message */
  source_id?: InputMaybe<Scalars['String']>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type messages_stddev_fields = {
  __typename?: 'messages_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  approved_by_user_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** ❌ */
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  reply_of_message_id?: Maybe<Scalars['Float']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "messages" */
export type messages_stddev_order_by = {
  account_id?: InputMaybe<order_by>;
  approved_by_user_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** ❌ */
  inbox_id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  reply_of_message_id?: InputMaybe<order_by>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type messages_stddev_pop_fields = {
  __typename?: 'messages_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  approved_by_user_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** ❌ */
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  reply_of_message_id?: Maybe<Scalars['Float']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "messages" */
export type messages_stddev_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  approved_by_user_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** ❌ */
  inbox_id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  reply_of_message_id?: InputMaybe<order_by>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type messages_stddev_samp_fields = {
  __typename?: 'messages_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  approved_by_user_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** ❌ */
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  reply_of_message_id?: Maybe<Scalars['Float']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "messages" */
export type messages_stddev_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  approved_by_user_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** ❌ */
  inbox_id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  reply_of_message_id?: InputMaybe<order_by>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "messages" */
export type messages_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: messages_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type messages_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  approved_at?: InputMaybe<Scalars['timetz']>;
  approved_by_user_id?: InputMaybe<Scalars['bigint']>;
  content_attributes?: InputMaybe<Scalars['jsonb']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  /** Source information for each message. e.g for tweet it stores sender information of each message. */
  external_source?: InputMaybe<Scalars['jsonb']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** ❌ */
  inbox_id?: InputMaybe<Scalars['Int']>;
  internal?: InputMaybe<Scalars['Boolean']>;
  /** Indicates if the message is approved or not */
  is_approved?: InputMaybe<Scalars['Boolean']>;
  /** ❌ Indicates if the message is read or unread */
  is_read?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<Scalars['Int']>;
  reply_of_message_id?: InputMaybe<Scalars['bigint']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<Scalars['Int']>;
  sender_id?: InputMaybe<Scalars['Int']>;
  /** "contact", "user", "system", "external" */
  sender_type?: InputMaybe<Scalars['String']>;
  /** Message ID of the source message */
  source_id?: InputMaybe<Scalars['String']>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type messages_sum_fields = {
  __typename?: 'messages_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  approved_by_user_id?: Maybe<Scalars['bigint']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  /** ❌ */
  inbox_id?: Maybe<Scalars['Int']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Int']>;
  reply_of_message_id?: Maybe<Scalars['bigint']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: Maybe<Scalars['Int']>;
  sender_id?: Maybe<Scalars['Int']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "messages" */
export type messages_sum_order_by = {
  account_id?: InputMaybe<order_by>;
  approved_by_user_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** ❌ */
  inbox_id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  reply_of_message_id?: InputMaybe<order_by>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
};

/** update columns of table "messages" */
export enum messages_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  approved_at = 'approved_at',
  /** column name */
  approved_by_user_id = 'approved_by_user_id',
  /** column name */
  content_attributes = 'content_attributes',
  /** column name */
  conversation_id = 'conversation_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  external_source = 'external_source',
  /** column name */
  id = 'id',
  /** column name */
  inbox_id = 'inbox_id',
  /** column name */
  internal = 'internal',
  /** column name */
  is_approved = 'is_approved',
  /** column name */
  is_read = 'is_read',
  /** column name */
  message = 'message',
  /** column name */
  message_type = 'message_type',
  /** column name */
  reply_of_message_id = 'reply_of_message_id',
  /** column name */
  review_status = 'review_status',
  /** column name */
  sender_id = 'sender_id',
  /** column name */
  sender_type = 'sender_type',
  /** column name */
  source_id = 'source_id',
  /** column name */
  status = 'status',
  /** column name */
  updated_at = 'updated_at'
}

export type messages_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<messages_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<messages_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<messages_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<messages_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<messages_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<messages_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<messages_set_input>;
  /** filter the rows which have to be updated */
  where: messages_bool_exp;
};

/** aggregate var_pop on columns */
export type messages_var_pop_fields = {
  __typename?: 'messages_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  approved_by_user_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** ❌ */
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  reply_of_message_id?: Maybe<Scalars['Float']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "messages" */
export type messages_var_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  approved_by_user_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** ❌ */
  inbox_id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  reply_of_message_id?: InputMaybe<order_by>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type messages_var_samp_fields = {
  __typename?: 'messages_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  approved_by_user_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** ❌ */
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  reply_of_message_id?: Maybe<Scalars['Float']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "messages" */
export type messages_var_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  approved_by_user_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** ❌ */
  inbox_id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  reply_of_message_id?: InputMaybe<order_by>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type messages_variance_fields = {
  __typename?: 'messages_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  approved_by_user_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** ❌ */
  inbox_id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  reply_of_message_id?: Maybe<Scalars['Float']>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "messages" */
export type messages_variance_order_by = {
  account_id?: InputMaybe<order_by>;
  approved_by_user_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** ❌ */
  inbox_id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 3 - approval, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  reply_of_message_id?: InputMaybe<order_by>;
  /** ❌ 0 = approved, 1 = waiting for approval */
  review_status?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
};

/** mutation root */
export type mutation_root = {
  __typename?: 'mutation_root';
  /** delete data from the table: "account_email_config" */
  delete_account_email_config?: Maybe<account_email_config_mutation_response>;
  /** delete single row from the table: "account_email_config" */
  delete_account_email_config_by_pk?: Maybe<account_email_config>;
  /** delete data from the table: "account_users" */
  delete_account_users?: Maybe<account_users_mutation_response>;
  /** delete single row from the table: "account_users" */
  delete_account_users_by_pk?: Maybe<account_users>;
  /** delete data from the table: "accounts" */
  delete_accounts?: Maybe<accounts_mutation_response>;
  /** delete single row from the table: "accounts" */
  delete_accounts_by_pk?: Maybe<accounts>;
  /** delete data from the table: "article_tags" */
  delete_article_tags?: Maybe<article_tags_mutation_response>;
  /** delete single row from the table: "article_tags" */
  delete_article_tags_by_pk?: Maybe<article_tags>;
  /** delete data from the table: "attachments" */
  delete_attachments?: Maybe<attachments_mutation_response>;
  /** delete single row from the table: "attachments" */
  delete_attachments_by_pk?: Maybe<attachments>;
  /** delete data from the table: "automation_flow_categories" */
  delete_automation_flow_categories?: Maybe<automation_flow_categories_mutation_response>;
  /** delete single row from the table: "automation_flow_categories" */
  delete_automation_flow_categories_by_pk?: Maybe<automation_flow_categories>;
  /** delete data from the table: "automation_flows" */
  delete_automation_flows?: Maybe<automation_flows_mutation_response>;
  /** delete single row from the table: "automation_flows" */
  delete_automation_flows_by_pk?: Maybe<automation_flows>;
  /** delete data from the table: "automation_rules" */
  delete_automation_rules?: Maybe<automation_rules_mutation_response>;
  /** delete single row from the table: "automation_rules" */
  delete_automation_rules_by_pk?: Maybe<automation_rules>;
  /** delete data from the table: "call_events" */
  delete_call_events?: Maybe<call_events_mutation_response>;
  /** delete single row from the table: "call_events" */
  delete_call_events_by_pk?: Maybe<call_events>;
  /** delete data from the table: "calls" */
  delete_calls?: Maybe<calls_mutation_response>;
  /** delete single row from the table: "calls" */
  delete_calls_by_pk?: Maybe<calls>;
  /** delete data from the table: "canned_responses" */
  delete_canned_responses?: Maybe<canned_responses_mutation_response>;
  /** delete single row from the table: "canned_responses" */
  delete_canned_responses_by_pk?: Maybe<canned_responses>;
  /** delete data from the table: "canned_responses_category" */
  delete_canned_responses_category?: Maybe<canned_responses_category_mutation_response>;
  /** delete single row from the table: "canned_responses_category" */
  delete_canned_responses_category_by_pk?: Maybe<canned_responses_category>;
  /** delete data from the table: "channel_email" */
  delete_channel_email?: Maybe<channel_email_mutation_response>;
  /** delete single row from the table: "channel_email" */
  delete_channel_email_by_pk?: Maybe<channel_email>;
  /** delete data from the table: "channel_google_business" */
  delete_channel_google_business?: Maybe<channel_google_business_mutation_response>;
  /** delete single row from the table: "channel_google_business" */
  delete_channel_google_business_by_pk?: Maybe<channel_google_business>;
  /** delete data from the table: "channel_instagram" */
  delete_channel_instagram?: Maybe<channel_instagram_mutation_response>;
  /** delete single row from the table: "channel_instagram" */
  delete_channel_instagram_by_pk?: Maybe<channel_instagram>;
  /** delete data from the table: "channel_live_chat" */
  delete_channel_live_chat?: Maybe<channel_live_chat_mutation_response>;
  /** delete single row from the table: "channel_live_chat" */
  delete_channel_live_chat_by_pk?: Maybe<channel_live_chat>;
  /** delete data from the table: "channel_twitter_profiles" */
  delete_channel_twitter_profiles?: Maybe<channel_twitter_profiles_mutation_response>;
  /** delete single row from the table: "channel_twitter_profiles" */
  delete_channel_twitter_profiles_by_pk?: Maybe<channel_twitter_profiles>;
  /** delete data from the table: "channel_twitter_stream" */
  delete_channel_twitter_stream?: Maybe<channel_twitter_stream_mutation_response>;
  /** delete single row from the table: "channel_twitter_stream" */
  delete_channel_twitter_stream_by_pk?: Maybe<channel_twitter_stream>;
  /** delete data from the table: "channel_web_chat" */
  delete_channel_web_chat?: Maybe<channel_web_chat_mutation_response>;
  /** delete single row from the table: "channel_web_chat" */
  delete_channel_web_chat_by_pk?: Maybe<channel_web_chat>;
  /** delete data from the table: "channel_whatsapp" */
  delete_channel_whatsapp?: Maybe<channel_whatsapp_mutation_response>;
  /** delete single row from the table: "channel_whatsapp" */
  delete_channel_whatsapp_by_pk?: Maybe<channel_whatsapp>;
  /** delete data from the table: "contact_inboxes" */
  delete_contact_inboxes?: Maybe<contact_inboxes_mutation_response>;
  /** delete single row from the table: "contact_inboxes" */
  delete_contact_inboxes_by_pk?: Maybe<contact_inboxes>;
  /** delete data from the table: "contact_tags" */
  delete_contact_tags?: Maybe<contact_tags_mutation_response>;
  /** delete single row from the table: "contact_tags" */
  delete_contact_tags_by_pk?: Maybe<contact_tags>;
  /** delete data from the table: "contacts" */
  delete_contacts?: Maybe<contacts_mutation_response>;
  /** delete single row from the table: "contacts" */
  delete_contacts_by_pk?: Maybe<contacts>;
  /** delete data from the table: "conversation_activity_log" */
  delete_conversation_activity_log?: Maybe<conversation_activity_log_mutation_response>;
  /** delete single row from the table: "conversation_activity_log" */
  delete_conversation_activity_log_by_pk?: Maybe<conversation_activity_log>;
  /** delete data from the table: "conversation_message_mentions" */
  delete_conversation_message_mentions?: Maybe<conversation_message_mentions_mutation_response>;
  /** delete single row from the table: "conversation_message_mentions" */
  delete_conversation_message_mentions_by_pk?: Maybe<conversation_message_mentions>;
  /** delete data from the table: "conversation_tags" */
  delete_conversation_tags?: Maybe<conversation_tags_mutation_response>;
  /** delete single row from the table: "conversation_tags" */
  delete_conversation_tags_by_pk?: Maybe<conversation_tags>;
  /** delete data from the table: "conversation_watch_list" */
  delete_conversation_watch_list?: Maybe<conversation_watch_list_mutation_response>;
  /** delete single row from the table: "conversation_watch_list" */
  delete_conversation_watch_list_by_pk?: Maybe<conversation_watch_list>;
  /** delete data from the table: "conversations" */
  delete_conversations?: Maybe<conversations_mutation_response>;
  /** delete single row from the table: "conversations" */
  delete_conversations_by_pk?: Maybe<conversations>;
  /** delete data from the table: "csat_feedback" */
  delete_csat_feedback?: Maybe<csat_feedback_mutation_response>;
  /** delete single row from the table: "csat_feedback" */
  delete_csat_feedback_by_pk?: Maybe<csat_feedback>;
  /** delete data from the table: "custom_filters" */
  delete_custom_filters?: Maybe<custom_filters_mutation_response>;
  /** delete single row from the table: "custom_filters" */
  delete_custom_filters_by_pk?: Maybe<custom_filters>;
  /** delete data from the table: "inboxes" */
  delete_inboxes?: Maybe<inboxes_mutation_response>;
  /** delete single row from the table: "inboxes" */
  delete_inboxes_by_pk?: Maybe<inboxes>;
  /** delete data from the table: "ivr_menus" */
  delete_ivr_menus?: Maybe<ivr_menus_mutation_response>;
  /** delete single row from the table: "ivr_menus" */
  delete_ivr_menus_by_pk?: Maybe<ivr_menus>;
  /** delete data from the table: "jira_tickets" */
  delete_jira_tickets?: Maybe<jira_tickets_mutation_response>;
  /** delete single row from the table: "jira_tickets" */
  delete_jira_tickets_by_pk?: Maybe<jira_tickets>;
  /** delete data from the table: "knowladge_base_appearance" */
  delete_knowladge_base_appearance?: Maybe<knowladge_base_appearance_mutation_response>;
  /** delete single row from the table: "knowladge_base_appearance" */
  delete_knowladge_base_appearance_by_pk?: Maybe<knowladge_base_appearance>;
  /** delete data from the table: "knowledge_base_articles" */
  delete_knowledge_base_articles?: Maybe<knowledge_base_articles_mutation_response>;
  /** delete single row from the table: "knowledge_base_articles" */
  delete_knowledge_base_articles_by_pk?: Maybe<knowledge_base_articles>;
  /** delete data from the table: "knowledge_base_categories" */
  delete_knowledge_base_categories?: Maybe<knowledge_base_categories_mutation_response>;
  /** delete single row from the table: "knowledge_base_categories" */
  delete_knowledge_base_categories_by_pk?: Maybe<knowledge_base_categories>;
  /** delete data from the table: "log_agent_status" */
  delete_log_agent_status?: Maybe<log_agent_status_mutation_response>;
  /** delete single row from the table: "log_agent_status" */
  delete_log_agent_status_by_pk?: Maybe<log_agent_status>;
  /** delete data from the table: "messages" */
  delete_messages?: Maybe<messages_mutation_response>;
  /** delete single row from the table: "messages" */
  delete_messages_by_pk?: Maybe<messages>;
  /** delete data from the table: "sla_policies" */
  delete_sla_policies?: Maybe<sla_policies_mutation_response>;
  /** delete single row from the table: "sla_policies" */
  delete_sla_policies_by_pk?: Maybe<sla_policies>;
  /** delete data from the table: "sla_target_policies" */
  delete_sla_target_policies?: Maybe<sla_target_policies_mutation_response>;
  /** delete single row from the table: "sla_target_policies" */
  delete_sla_target_policies_by_pk?: Maybe<sla_target_policies>;
  /** delete data from the table: "tags" */
  delete_tags?: Maybe<tags_mutation_response>;
  /** delete single row from the table: "tags" */
  delete_tags_by_pk?: Maybe<tags>;
  /** delete data from the table: "team_inboxes" */
  delete_team_inboxes?: Maybe<team_inboxes_mutation_response>;
  /** delete single row from the table: "team_inboxes" */
  delete_team_inboxes_by_pk?: Maybe<team_inboxes>;
  /** delete data from the table: "team_members" */
  delete_team_members?: Maybe<team_members_mutation_response>;
  /** delete single row from the table: "team_members" */
  delete_team_members_by_pk?: Maybe<team_members>;
  /** delete data from the table: "teams" */
  delete_teams?: Maybe<teams_mutation_response>;
  /** delete single row from the table: "teams" */
  delete_teams_by_pk?: Maybe<teams>;
  /** delete data from the table: "template_sms" */
  delete_template_sms?: Maybe<template_sms_mutation_response>;
  /** delete single row from the table: "template_sms" */
  delete_template_sms_by_pk?: Maybe<template_sms>;
  /** delete data from the table: "ticket" */
  delete_ticket?: Maybe<ticket_mutation_response>;
  /** delete data from the table: "ticket_activity_log" */
  delete_ticket_activity_log?: Maybe<ticket_activity_log_mutation_response>;
  /** delete single row from the table: "ticket_activity_log" */
  delete_ticket_activity_log_by_pk?: Maybe<ticket_activity_log>;
  /** delete single row from the table: "ticket" */
  delete_ticket_by_pk?: Maybe<ticket>;
  /** delete data from the table: "ticket_forms" */
  delete_ticket_forms?: Maybe<ticket_forms_mutation_response>;
  /** delete single row from the table: "ticket_forms" */
  delete_ticket_forms_by_pk?: Maybe<ticket_forms>;
  /** delete data from the table: "ticket_message_mentions" */
  delete_ticket_message_mentions?: Maybe<ticket_message_mentions_mutation_response>;
  /** delete single row from the table: "ticket_message_mentions" */
  delete_ticket_message_mentions_by_pk?: Maybe<ticket_message_mentions>;
  /** delete data from the table: "ticket_messages" */
  delete_ticket_messages?: Maybe<ticket_messages_mutation_response>;
  /** delete single row from the table: "ticket_messages" */
  delete_ticket_messages_by_pk?: Maybe<ticket_messages>;
  /** delete data from the table: "ticket_share" */
  delete_ticket_share?: Maybe<ticket_share_mutation_response>;
  /** delete single row from the table: "ticket_share" */
  delete_ticket_share_by_pk?: Maybe<ticket_share>;
  /** delete data from the table: "ticket_tags" */
  delete_ticket_tags?: Maybe<ticket_tags_mutation_response>;
  /** delete single row from the table: "ticket_tags" */
  delete_ticket_tags_by_pk?: Maybe<ticket_tags>;
  /** delete data from the table: "ticket_watch_list" */
  delete_ticket_watch_list?: Maybe<ticket_watch_list_mutation_response>;
  /** delete single row from the table: "ticket_watch_list" */
  delete_ticket_watch_list_by_pk?: Maybe<ticket_watch_list>;
  /** delete data from the table: "update_version" */
  delete_update_version?: Maybe<update_version_mutation_response>;
  /** delete single row from the table: "update_version" */
  delete_update_version_by_pk?: Maybe<update_version>;
  /** delete data from the table: "user_roles" */
  delete_user_roles?: Maybe<user_roles_mutation_response>;
  /** delete single row from the table: "user_roles" */
  delete_user_roles_by_pk?: Maybe<user_roles>;
  /** delete data from the table: "users" */
  delete_users?: Maybe<users_mutation_response>;
  /** delete single row from the table: "users" */
  delete_users_by_pk?: Maybe<users>;
  /** delete data from the table: "workflows_contact_reason" */
  delete_workflows_contact_reason?: Maybe<workflows_contact_reason_mutation_response>;
  /** delete single row from the table: "workflows_contact_reason" */
  delete_workflows_contact_reason_by_pk?: Maybe<workflows_contact_reason>;
  /** delete data from the table: "working_hours" */
  delete_working_hours?: Maybe<working_hours_mutation_response>;
  /** delete single row from the table: "working_hours" */
  delete_working_hours_by_pk?: Maybe<working_hours>;
  /** delete data from the table: "working_hours_shift" */
  delete_working_hours_shift?: Maybe<working_hours_shift_mutation_response>;
  /** delete single row from the table: "working_hours_shift" */
  delete_working_hours_shift_by_pk?: Maybe<working_hours_shift>;
  /** insert data into the table: "account_email_config" */
  insert_account_email_config?: Maybe<account_email_config_mutation_response>;
  /** insert a single row into the table: "account_email_config" */
  insert_account_email_config_one?: Maybe<account_email_config>;
  /** insert data into the table: "account_users" */
  insert_account_users?: Maybe<account_users_mutation_response>;
  /** insert a single row into the table: "account_users" */
  insert_account_users_one?: Maybe<account_users>;
  /** insert data into the table: "accounts" */
  insert_accounts?: Maybe<accounts_mutation_response>;
  /** insert a single row into the table: "accounts" */
  insert_accounts_one?: Maybe<accounts>;
  /** insert data into the table: "article_tags" */
  insert_article_tags?: Maybe<article_tags_mutation_response>;
  /** insert a single row into the table: "article_tags" */
  insert_article_tags_one?: Maybe<article_tags>;
  /** insert data into the table: "attachments" */
  insert_attachments?: Maybe<attachments_mutation_response>;
  /** insert a single row into the table: "attachments" */
  insert_attachments_one?: Maybe<attachments>;
  /** insert data into the table: "automation_flow_categories" */
  insert_automation_flow_categories?: Maybe<automation_flow_categories_mutation_response>;
  /** insert a single row into the table: "automation_flow_categories" */
  insert_automation_flow_categories_one?: Maybe<automation_flow_categories>;
  /** insert data into the table: "automation_flows" */
  insert_automation_flows?: Maybe<automation_flows_mutation_response>;
  /** insert a single row into the table: "automation_flows" */
  insert_automation_flows_one?: Maybe<automation_flows>;
  /** insert data into the table: "automation_rules" */
  insert_automation_rules?: Maybe<automation_rules_mutation_response>;
  /** insert a single row into the table: "automation_rules" */
  insert_automation_rules_one?: Maybe<automation_rules>;
  /** insert data into the table: "call_events" */
  insert_call_events?: Maybe<call_events_mutation_response>;
  /** insert a single row into the table: "call_events" */
  insert_call_events_one?: Maybe<call_events>;
  /** insert data into the table: "calls" */
  insert_calls?: Maybe<calls_mutation_response>;
  /** insert a single row into the table: "calls" */
  insert_calls_one?: Maybe<calls>;
  /** insert data into the table: "canned_responses" */
  insert_canned_responses?: Maybe<canned_responses_mutation_response>;
  /** insert data into the table: "canned_responses_category" */
  insert_canned_responses_category?: Maybe<canned_responses_category_mutation_response>;
  /** insert a single row into the table: "canned_responses_category" */
  insert_canned_responses_category_one?: Maybe<canned_responses_category>;
  /** insert a single row into the table: "canned_responses" */
  insert_canned_responses_one?: Maybe<canned_responses>;
  /** insert data into the table: "channel_email" */
  insert_channel_email?: Maybe<channel_email_mutation_response>;
  /** insert a single row into the table: "channel_email" */
  insert_channel_email_one?: Maybe<channel_email>;
  /** insert data into the table: "channel_google_business" */
  insert_channel_google_business?: Maybe<channel_google_business_mutation_response>;
  /** insert a single row into the table: "channel_google_business" */
  insert_channel_google_business_one?: Maybe<channel_google_business>;
  /** insert data into the table: "channel_instagram" */
  insert_channel_instagram?: Maybe<channel_instagram_mutation_response>;
  /** insert a single row into the table: "channel_instagram" */
  insert_channel_instagram_one?: Maybe<channel_instagram>;
  /** insert data into the table: "channel_live_chat" */
  insert_channel_live_chat?: Maybe<channel_live_chat_mutation_response>;
  /** insert a single row into the table: "channel_live_chat" */
  insert_channel_live_chat_one?: Maybe<channel_live_chat>;
  /** insert data into the table: "channel_twitter_profiles" */
  insert_channel_twitter_profiles?: Maybe<channel_twitter_profiles_mutation_response>;
  /** insert a single row into the table: "channel_twitter_profiles" */
  insert_channel_twitter_profiles_one?: Maybe<channel_twitter_profiles>;
  /** insert data into the table: "channel_twitter_stream" */
  insert_channel_twitter_stream?: Maybe<channel_twitter_stream_mutation_response>;
  /** insert a single row into the table: "channel_twitter_stream" */
  insert_channel_twitter_stream_one?: Maybe<channel_twitter_stream>;
  /** insert data into the table: "channel_web_chat" */
  insert_channel_web_chat?: Maybe<channel_web_chat_mutation_response>;
  /** insert a single row into the table: "channel_web_chat" */
  insert_channel_web_chat_one?: Maybe<channel_web_chat>;
  /** insert data into the table: "channel_whatsapp" */
  insert_channel_whatsapp?: Maybe<channel_whatsapp_mutation_response>;
  /** insert a single row into the table: "channel_whatsapp" */
  insert_channel_whatsapp_one?: Maybe<channel_whatsapp>;
  /** insert data into the table: "contact_inboxes" */
  insert_contact_inboxes?: Maybe<contact_inboxes_mutation_response>;
  /** insert a single row into the table: "contact_inboxes" */
  insert_contact_inboxes_one?: Maybe<contact_inboxes>;
  /** insert data into the table: "contact_tags" */
  insert_contact_tags?: Maybe<contact_tags_mutation_response>;
  /** insert a single row into the table: "contact_tags" */
  insert_contact_tags_one?: Maybe<contact_tags>;
  /** insert data into the table: "contacts" */
  insert_contacts?: Maybe<contacts_mutation_response>;
  /** insert a single row into the table: "contacts" */
  insert_contacts_one?: Maybe<contacts>;
  /** insert data into the table: "conversation_activity_log" */
  insert_conversation_activity_log?: Maybe<conversation_activity_log_mutation_response>;
  /** insert a single row into the table: "conversation_activity_log" */
  insert_conversation_activity_log_one?: Maybe<conversation_activity_log>;
  /** insert data into the table: "conversation_message_mentions" */
  insert_conversation_message_mentions?: Maybe<conversation_message_mentions_mutation_response>;
  /** insert a single row into the table: "conversation_message_mentions" */
  insert_conversation_message_mentions_one?: Maybe<conversation_message_mentions>;
  /** insert data into the table: "conversation_tags" */
  insert_conversation_tags?: Maybe<conversation_tags_mutation_response>;
  /** insert a single row into the table: "conversation_tags" */
  insert_conversation_tags_one?: Maybe<conversation_tags>;
  /** insert data into the table: "conversation_watch_list" */
  insert_conversation_watch_list?: Maybe<conversation_watch_list_mutation_response>;
  /** insert a single row into the table: "conversation_watch_list" */
  insert_conversation_watch_list_one?: Maybe<conversation_watch_list>;
  /** insert data into the table: "conversations" */
  insert_conversations?: Maybe<conversations_mutation_response>;
  /** insert a single row into the table: "conversations" */
  insert_conversations_one?: Maybe<conversations>;
  /** insert data into the table: "csat_feedback" */
  insert_csat_feedback?: Maybe<csat_feedback_mutation_response>;
  /** insert a single row into the table: "csat_feedback" */
  insert_csat_feedback_one?: Maybe<csat_feedback>;
  /** insert data into the table: "custom_filters" */
  insert_custom_filters?: Maybe<custom_filters_mutation_response>;
  /** insert a single row into the table: "custom_filters" */
  insert_custom_filters_one?: Maybe<custom_filters>;
  /** insert data into the table: "inboxes" */
  insert_inboxes?: Maybe<inboxes_mutation_response>;
  /** insert a single row into the table: "inboxes" */
  insert_inboxes_one?: Maybe<inboxes>;
  /** insert data into the table: "ivr_menus" */
  insert_ivr_menus?: Maybe<ivr_menus_mutation_response>;
  /** insert a single row into the table: "ivr_menus" */
  insert_ivr_menus_one?: Maybe<ivr_menus>;
  /** insert data into the table: "jira_tickets" */
  insert_jira_tickets?: Maybe<jira_tickets_mutation_response>;
  /** insert a single row into the table: "jira_tickets" */
  insert_jira_tickets_one?: Maybe<jira_tickets>;
  /** insert data into the table: "knowladge_base_appearance" */
  insert_knowladge_base_appearance?: Maybe<knowladge_base_appearance_mutation_response>;
  /** insert a single row into the table: "knowladge_base_appearance" */
  insert_knowladge_base_appearance_one?: Maybe<knowladge_base_appearance>;
  /** insert data into the table: "knowledge_base_articles" */
  insert_knowledge_base_articles?: Maybe<knowledge_base_articles_mutation_response>;
  /** insert a single row into the table: "knowledge_base_articles" */
  insert_knowledge_base_articles_one?: Maybe<knowledge_base_articles>;
  /** insert data into the table: "knowledge_base_categories" */
  insert_knowledge_base_categories?: Maybe<knowledge_base_categories_mutation_response>;
  /** insert a single row into the table: "knowledge_base_categories" */
  insert_knowledge_base_categories_one?: Maybe<knowledge_base_categories>;
  /** insert data into the table: "log_agent_status" */
  insert_log_agent_status?: Maybe<log_agent_status_mutation_response>;
  /** insert a single row into the table: "log_agent_status" */
  insert_log_agent_status_one?: Maybe<log_agent_status>;
  /** insert data into the table: "messages" */
  insert_messages?: Maybe<messages_mutation_response>;
  /** insert a single row into the table: "messages" */
  insert_messages_one?: Maybe<messages>;
  /** insert data into the table: "sla_policies" */
  insert_sla_policies?: Maybe<sla_policies_mutation_response>;
  /** insert a single row into the table: "sla_policies" */
  insert_sla_policies_one?: Maybe<sla_policies>;
  /** insert data into the table: "sla_target_policies" */
  insert_sla_target_policies?: Maybe<sla_target_policies_mutation_response>;
  /** insert a single row into the table: "sla_target_policies" */
  insert_sla_target_policies_one?: Maybe<sla_target_policies>;
  /** insert data into the table: "tags" */
  insert_tags?: Maybe<tags_mutation_response>;
  /** insert a single row into the table: "tags" */
  insert_tags_one?: Maybe<tags>;
  /** insert data into the table: "team_inboxes" */
  insert_team_inboxes?: Maybe<team_inboxes_mutation_response>;
  /** insert a single row into the table: "team_inboxes" */
  insert_team_inboxes_one?: Maybe<team_inboxes>;
  /** insert data into the table: "team_members" */
  insert_team_members?: Maybe<team_members_mutation_response>;
  /** insert a single row into the table: "team_members" */
  insert_team_members_one?: Maybe<team_members>;
  /** insert data into the table: "teams" */
  insert_teams?: Maybe<teams_mutation_response>;
  /** insert a single row into the table: "teams" */
  insert_teams_one?: Maybe<teams>;
  /** insert data into the table: "template_sms" */
  insert_template_sms?: Maybe<template_sms_mutation_response>;
  /** insert a single row into the table: "template_sms" */
  insert_template_sms_one?: Maybe<template_sms>;
  /** insert data into the table: "ticket" */
  insert_ticket?: Maybe<ticket_mutation_response>;
  /** insert data into the table: "ticket_activity_log" */
  insert_ticket_activity_log?: Maybe<ticket_activity_log_mutation_response>;
  /** insert a single row into the table: "ticket_activity_log" */
  insert_ticket_activity_log_one?: Maybe<ticket_activity_log>;
  /** insert data into the table: "ticket_forms" */
  insert_ticket_forms?: Maybe<ticket_forms_mutation_response>;
  /** insert a single row into the table: "ticket_forms" */
  insert_ticket_forms_one?: Maybe<ticket_forms>;
  /** insert data into the table: "ticket_message_mentions" */
  insert_ticket_message_mentions?: Maybe<ticket_message_mentions_mutation_response>;
  /** insert a single row into the table: "ticket_message_mentions" */
  insert_ticket_message_mentions_one?: Maybe<ticket_message_mentions>;
  /** insert data into the table: "ticket_messages" */
  insert_ticket_messages?: Maybe<ticket_messages_mutation_response>;
  /** insert a single row into the table: "ticket_messages" */
  insert_ticket_messages_one?: Maybe<ticket_messages>;
  /** insert a single row into the table: "ticket" */
  insert_ticket_one?: Maybe<ticket>;
  /** insert data into the table: "ticket_share" */
  insert_ticket_share?: Maybe<ticket_share_mutation_response>;
  /** insert a single row into the table: "ticket_share" */
  insert_ticket_share_one?: Maybe<ticket_share>;
  /** insert data into the table: "ticket_tags" */
  insert_ticket_tags?: Maybe<ticket_tags_mutation_response>;
  /** insert a single row into the table: "ticket_tags" */
  insert_ticket_tags_one?: Maybe<ticket_tags>;
  /** insert data into the table: "ticket_watch_list" */
  insert_ticket_watch_list?: Maybe<ticket_watch_list_mutation_response>;
  /** insert a single row into the table: "ticket_watch_list" */
  insert_ticket_watch_list_one?: Maybe<ticket_watch_list>;
  /** insert data into the table: "update_version" */
  insert_update_version?: Maybe<update_version_mutation_response>;
  /** insert a single row into the table: "update_version" */
  insert_update_version_one?: Maybe<update_version>;
  /** insert data into the table: "user_roles" */
  insert_user_roles?: Maybe<user_roles_mutation_response>;
  /** insert a single row into the table: "user_roles" */
  insert_user_roles_one?: Maybe<user_roles>;
  /** insert data into the table: "users" */
  insert_users?: Maybe<users_mutation_response>;
  /** insert a single row into the table: "users" */
  insert_users_one?: Maybe<users>;
  /** insert data into the table: "workflows_contact_reason" */
  insert_workflows_contact_reason?: Maybe<workflows_contact_reason_mutation_response>;
  /** insert a single row into the table: "workflows_contact_reason" */
  insert_workflows_contact_reason_one?: Maybe<workflows_contact_reason>;
  /** insert data into the table: "working_hours" */
  insert_working_hours?: Maybe<working_hours_mutation_response>;
  /** insert a single row into the table: "working_hours" */
  insert_working_hours_one?: Maybe<working_hours>;
  /** insert data into the table: "working_hours_shift" */
  insert_working_hours_shift?: Maybe<working_hours_shift_mutation_response>;
  /** insert a single row into the table: "working_hours_shift" */
  insert_working_hours_shift_one?: Maybe<working_hours_shift>;
  /** update data of the table: "account_email_config" */
  update_account_email_config?: Maybe<account_email_config_mutation_response>;
  /** update single row of the table: "account_email_config" */
  update_account_email_config_by_pk?: Maybe<account_email_config>;
  /** update multiples rows of table: "account_email_config" */
  update_account_email_config_many?: Maybe<Array<Maybe<account_email_config_mutation_response>>>;
  /** update data of the table: "account_users" */
  update_account_users?: Maybe<account_users_mutation_response>;
  /** update single row of the table: "account_users" */
  update_account_users_by_pk?: Maybe<account_users>;
  /** update multiples rows of table: "account_users" */
  update_account_users_many?: Maybe<Array<Maybe<account_users_mutation_response>>>;
  /** update data of the table: "accounts" */
  update_accounts?: Maybe<accounts_mutation_response>;
  /** update single row of the table: "accounts" */
  update_accounts_by_pk?: Maybe<accounts>;
  /** update multiples rows of table: "accounts" */
  update_accounts_many?: Maybe<Array<Maybe<accounts_mutation_response>>>;
  /** update data of the table: "article_tags" */
  update_article_tags?: Maybe<article_tags_mutation_response>;
  /** update single row of the table: "article_tags" */
  update_article_tags_by_pk?: Maybe<article_tags>;
  /** update multiples rows of table: "article_tags" */
  update_article_tags_many?: Maybe<Array<Maybe<article_tags_mutation_response>>>;
  /** update data of the table: "attachments" */
  update_attachments?: Maybe<attachments_mutation_response>;
  /** update single row of the table: "attachments" */
  update_attachments_by_pk?: Maybe<attachments>;
  /** update multiples rows of table: "attachments" */
  update_attachments_many?: Maybe<Array<Maybe<attachments_mutation_response>>>;
  /** update data of the table: "automation_flow_categories" */
  update_automation_flow_categories?: Maybe<automation_flow_categories_mutation_response>;
  /** update single row of the table: "automation_flow_categories" */
  update_automation_flow_categories_by_pk?: Maybe<automation_flow_categories>;
  /** update multiples rows of table: "automation_flow_categories" */
  update_automation_flow_categories_many?: Maybe<Array<Maybe<automation_flow_categories_mutation_response>>>;
  /** update data of the table: "automation_flows" */
  update_automation_flows?: Maybe<automation_flows_mutation_response>;
  /** update single row of the table: "automation_flows" */
  update_automation_flows_by_pk?: Maybe<automation_flows>;
  /** update multiples rows of table: "automation_flows" */
  update_automation_flows_many?: Maybe<Array<Maybe<automation_flows_mutation_response>>>;
  /** update data of the table: "automation_rules" */
  update_automation_rules?: Maybe<automation_rules_mutation_response>;
  /** update single row of the table: "automation_rules" */
  update_automation_rules_by_pk?: Maybe<automation_rules>;
  /** update multiples rows of table: "automation_rules" */
  update_automation_rules_many?: Maybe<Array<Maybe<automation_rules_mutation_response>>>;
  /** update data of the table: "call_events" */
  update_call_events?: Maybe<call_events_mutation_response>;
  /** update single row of the table: "call_events" */
  update_call_events_by_pk?: Maybe<call_events>;
  /** update multiples rows of table: "call_events" */
  update_call_events_many?: Maybe<Array<Maybe<call_events_mutation_response>>>;
  /** update data of the table: "calls" */
  update_calls?: Maybe<calls_mutation_response>;
  /** update single row of the table: "calls" */
  update_calls_by_pk?: Maybe<calls>;
  /** update multiples rows of table: "calls" */
  update_calls_many?: Maybe<Array<Maybe<calls_mutation_response>>>;
  /** update data of the table: "canned_responses" */
  update_canned_responses?: Maybe<canned_responses_mutation_response>;
  /** update single row of the table: "canned_responses" */
  update_canned_responses_by_pk?: Maybe<canned_responses>;
  /** update data of the table: "canned_responses_category" */
  update_canned_responses_category?: Maybe<canned_responses_category_mutation_response>;
  /** update single row of the table: "canned_responses_category" */
  update_canned_responses_category_by_pk?: Maybe<canned_responses_category>;
  /** update multiples rows of table: "canned_responses_category" */
  update_canned_responses_category_many?: Maybe<Array<Maybe<canned_responses_category_mutation_response>>>;
  /** update multiples rows of table: "canned_responses" */
  update_canned_responses_many?: Maybe<Array<Maybe<canned_responses_mutation_response>>>;
  /** update data of the table: "channel_email" */
  update_channel_email?: Maybe<channel_email_mutation_response>;
  /** update single row of the table: "channel_email" */
  update_channel_email_by_pk?: Maybe<channel_email>;
  /** update multiples rows of table: "channel_email" */
  update_channel_email_many?: Maybe<Array<Maybe<channel_email_mutation_response>>>;
  /** update data of the table: "channel_google_business" */
  update_channel_google_business?: Maybe<channel_google_business_mutation_response>;
  /** update single row of the table: "channel_google_business" */
  update_channel_google_business_by_pk?: Maybe<channel_google_business>;
  /** update multiples rows of table: "channel_google_business" */
  update_channel_google_business_many?: Maybe<Array<Maybe<channel_google_business_mutation_response>>>;
  /** update data of the table: "channel_instagram" */
  update_channel_instagram?: Maybe<channel_instagram_mutation_response>;
  /** update single row of the table: "channel_instagram" */
  update_channel_instagram_by_pk?: Maybe<channel_instagram>;
  /** update multiples rows of table: "channel_instagram" */
  update_channel_instagram_many?: Maybe<Array<Maybe<channel_instagram_mutation_response>>>;
  /** update data of the table: "channel_live_chat" */
  update_channel_live_chat?: Maybe<channel_live_chat_mutation_response>;
  /** update single row of the table: "channel_live_chat" */
  update_channel_live_chat_by_pk?: Maybe<channel_live_chat>;
  /** update multiples rows of table: "channel_live_chat" */
  update_channel_live_chat_many?: Maybe<Array<Maybe<channel_live_chat_mutation_response>>>;
  /** update data of the table: "channel_twitter_profiles" */
  update_channel_twitter_profiles?: Maybe<channel_twitter_profiles_mutation_response>;
  /** update single row of the table: "channel_twitter_profiles" */
  update_channel_twitter_profiles_by_pk?: Maybe<channel_twitter_profiles>;
  /** update multiples rows of table: "channel_twitter_profiles" */
  update_channel_twitter_profiles_many?: Maybe<Array<Maybe<channel_twitter_profiles_mutation_response>>>;
  /** update data of the table: "channel_twitter_stream" */
  update_channel_twitter_stream?: Maybe<channel_twitter_stream_mutation_response>;
  /** update single row of the table: "channel_twitter_stream" */
  update_channel_twitter_stream_by_pk?: Maybe<channel_twitter_stream>;
  /** update multiples rows of table: "channel_twitter_stream" */
  update_channel_twitter_stream_many?: Maybe<Array<Maybe<channel_twitter_stream_mutation_response>>>;
  /** update data of the table: "channel_web_chat" */
  update_channel_web_chat?: Maybe<channel_web_chat_mutation_response>;
  /** update single row of the table: "channel_web_chat" */
  update_channel_web_chat_by_pk?: Maybe<channel_web_chat>;
  /** update multiples rows of table: "channel_web_chat" */
  update_channel_web_chat_many?: Maybe<Array<Maybe<channel_web_chat_mutation_response>>>;
  /** update data of the table: "channel_whatsapp" */
  update_channel_whatsapp?: Maybe<channel_whatsapp_mutation_response>;
  /** update single row of the table: "channel_whatsapp" */
  update_channel_whatsapp_by_pk?: Maybe<channel_whatsapp>;
  /** update multiples rows of table: "channel_whatsapp" */
  update_channel_whatsapp_many?: Maybe<Array<Maybe<channel_whatsapp_mutation_response>>>;
  /** update data of the table: "contact_inboxes" */
  update_contact_inboxes?: Maybe<contact_inboxes_mutation_response>;
  /** update single row of the table: "contact_inboxes" */
  update_contact_inboxes_by_pk?: Maybe<contact_inboxes>;
  /** update multiples rows of table: "contact_inboxes" */
  update_contact_inboxes_many?: Maybe<Array<Maybe<contact_inboxes_mutation_response>>>;
  /** update data of the table: "contact_tags" */
  update_contact_tags?: Maybe<contact_tags_mutation_response>;
  /** update single row of the table: "contact_tags" */
  update_contact_tags_by_pk?: Maybe<contact_tags>;
  /** update multiples rows of table: "contact_tags" */
  update_contact_tags_many?: Maybe<Array<Maybe<contact_tags_mutation_response>>>;
  /** update data of the table: "contacts" */
  update_contacts?: Maybe<contacts_mutation_response>;
  /** update single row of the table: "contacts" */
  update_contacts_by_pk?: Maybe<contacts>;
  /** update multiples rows of table: "contacts" */
  update_contacts_many?: Maybe<Array<Maybe<contacts_mutation_response>>>;
  /** update data of the table: "conversation_activity_log" */
  update_conversation_activity_log?: Maybe<conversation_activity_log_mutation_response>;
  /** update single row of the table: "conversation_activity_log" */
  update_conversation_activity_log_by_pk?: Maybe<conversation_activity_log>;
  /** update multiples rows of table: "conversation_activity_log" */
  update_conversation_activity_log_many?: Maybe<Array<Maybe<conversation_activity_log_mutation_response>>>;
  /** update data of the table: "conversation_message_mentions" */
  update_conversation_message_mentions?: Maybe<conversation_message_mentions_mutation_response>;
  /** update single row of the table: "conversation_message_mentions" */
  update_conversation_message_mentions_by_pk?: Maybe<conversation_message_mentions>;
  /** update multiples rows of table: "conversation_message_mentions" */
  update_conversation_message_mentions_many?: Maybe<Array<Maybe<conversation_message_mentions_mutation_response>>>;
  /** update data of the table: "conversation_tags" */
  update_conversation_tags?: Maybe<conversation_tags_mutation_response>;
  /** update single row of the table: "conversation_tags" */
  update_conversation_tags_by_pk?: Maybe<conversation_tags>;
  /** update multiples rows of table: "conversation_tags" */
  update_conversation_tags_many?: Maybe<Array<Maybe<conversation_tags_mutation_response>>>;
  /** update data of the table: "conversation_watch_list" */
  update_conversation_watch_list?: Maybe<conversation_watch_list_mutation_response>;
  /** update single row of the table: "conversation_watch_list" */
  update_conversation_watch_list_by_pk?: Maybe<conversation_watch_list>;
  /** update multiples rows of table: "conversation_watch_list" */
  update_conversation_watch_list_many?: Maybe<Array<Maybe<conversation_watch_list_mutation_response>>>;
  /** update data of the table: "conversations" */
  update_conversations?: Maybe<conversations_mutation_response>;
  /** update single row of the table: "conversations" */
  update_conversations_by_pk?: Maybe<conversations>;
  /** update multiples rows of table: "conversations" */
  update_conversations_many?: Maybe<Array<Maybe<conversations_mutation_response>>>;
  /** update data of the table: "csat_feedback" */
  update_csat_feedback?: Maybe<csat_feedback_mutation_response>;
  /** update single row of the table: "csat_feedback" */
  update_csat_feedback_by_pk?: Maybe<csat_feedback>;
  /** update multiples rows of table: "csat_feedback" */
  update_csat_feedback_many?: Maybe<Array<Maybe<csat_feedback_mutation_response>>>;
  /** update data of the table: "custom_filters" */
  update_custom_filters?: Maybe<custom_filters_mutation_response>;
  /** update single row of the table: "custom_filters" */
  update_custom_filters_by_pk?: Maybe<custom_filters>;
  /** update multiples rows of table: "custom_filters" */
  update_custom_filters_many?: Maybe<Array<Maybe<custom_filters_mutation_response>>>;
  /** update data of the table: "inboxes" */
  update_inboxes?: Maybe<inboxes_mutation_response>;
  /** update single row of the table: "inboxes" */
  update_inboxes_by_pk?: Maybe<inboxes>;
  /** update multiples rows of table: "inboxes" */
  update_inboxes_many?: Maybe<Array<Maybe<inboxes_mutation_response>>>;
  /** update data of the table: "ivr_menus" */
  update_ivr_menus?: Maybe<ivr_menus_mutation_response>;
  /** update single row of the table: "ivr_menus" */
  update_ivr_menus_by_pk?: Maybe<ivr_menus>;
  /** update multiples rows of table: "ivr_menus" */
  update_ivr_menus_many?: Maybe<Array<Maybe<ivr_menus_mutation_response>>>;
  /** update data of the table: "jira_tickets" */
  update_jira_tickets?: Maybe<jira_tickets_mutation_response>;
  /** update single row of the table: "jira_tickets" */
  update_jira_tickets_by_pk?: Maybe<jira_tickets>;
  /** update multiples rows of table: "jira_tickets" */
  update_jira_tickets_many?: Maybe<Array<Maybe<jira_tickets_mutation_response>>>;
  /** update data of the table: "knowladge_base_appearance" */
  update_knowladge_base_appearance?: Maybe<knowladge_base_appearance_mutation_response>;
  /** update single row of the table: "knowladge_base_appearance" */
  update_knowladge_base_appearance_by_pk?: Maybe<knowladge_base_appearance>;
  /** update multiples rows of table: "knowladge_base_appearance" */
  update_knowladge_base_appearance_many?: Maybe<Array<Maybe<knowladge_base_appearance_mutation_response>>>;
  /** update data of the table: "knowledge_base_articles" */
  update_knowledge_base_articles?: Maybe<knowledge_base_articles_mutation_response>;
  /** update single row of the table: "knowledge_base_articles" */
  update_knowledge_base_articles_by_pk?: Maybe<knowledge_base_articles>;
  /** update multiples rows of table: "knowledge_base_articles" */
  update_knowledge_base_articles_many?: Maybe<Array<Maybe<knowledge_base_articles_mutation_response>>>;
  /** update data of the table: "knowledge_base_categories" */
  update_knowledge_base_categories?: Maybe<knowledge_base_categories_mutation_response>;
  /** update single row of the table: "knowledge_base_categories" */
  update_knowledge_base_categories_by_pk?: Maybe<knowledge_base_categories>;
  /** update multiples rows of table: "knowledge_base_categories" */
  update_knowledge_base_categories_many?: Maybe<Array<Maybe<knowledge_base_categories_mutation_response>>>;
  /** update data of the table: "log_agent_status" */
  update_log_agent_status?: Maybe<log_agent_status_mutation_response>;
  /** update single row of the table: "log_agent_status" */
  update_log_agent_status_by_pk?: Maybe<log_agent_status>;
  /** update multiples rows of table: "log_agent_status" */
  update_log_agent_status_many?: Maybe<Array<Maybe<log_agent_status_mutation_response>>>;
  /** update data of the table: "messages" */
  update_messages?: Maybe<messages_mutation_response>;
  /** update single row of the table: "messages" */
  update_messages_by_pk?: Maybe<messages>;
  /** update multiples rows of table: "messages" */
  update_messages_many?: Maybe<Array<Maybe<messages_mutation_response>>>;
  /** update data of the table: "sla_policies" */
  update_sla_policies?: Maybe<sla_policies_mutation_response>;
  /** update single row of the table: "sla_policies" */
  update_sla_policies_by_pk?: Maybe<sla_policies>;
  /** update multiples rows of table: "sla_policies" */
  update_sla_policies_many?: Maybe<Array<Maybe<sla_policies_mutation_response>>>;
  /** update data of the table: "sla_target_policies" */
  update_sla_target_policies?: Maybe<sla_target_policies_mutation_response>;
  /** update single row of the table: "sla_target_policies" */
  update_sla_target_policies_by_pk?: Maybe<sla_target_policies>;
  /** update multiples rows of table: "sla_target_policies" */
  update_sla_target_policies_many?: Maybe<Array<Maybe<sla_target_policies_mutation_response>>>;
  /** update data of the table: "tags" */
  update_tags?: Maybe<tags_mutation_response>;
  /** update single row of the table: "tags" */
  update_tags_by_pk?: Maybe<tags>;
  /** update multiples rows of table: "tags" */
  update_tags_many?: Maybe<Array<Maybe<tags_mutation_response>>>;
  /** update data of the table: "team_inboxes" */
  update_team_inboxes?: Maybe<team_inboxes_mutation_response>;
  /** update single row of the table: "team_inboxes" */
  update_team_inboxes_by_pk?: Maybe<team_inboxes>;
  /** update multiples rows of table: "team_inboxes" */
  update_team_inboxes_many?: Maybe<Array<Maybe<team_inboxes_mutation_response>>>;
  /** update data of the table: "team_members" */
  update_team_members?: Maybe<team_members_mutation_response>;
  /** update single row of the table: "team_members" */
  update_team_members_by_pk?: Maybe<team_members>;
  /** update multiples rows of table: "team_members" */
  update_team_members_many?: Maybe<Array<Maybe<team_members_mutation_response>>>;
  /** update data of the table: "teams" */
  update_teams?: Maybe<teams_mutation_response>;
  /** update single row of the table: "teams" */
  update_teams_by_pk?: Maybe<teams>;
  /** update multiples rows of table: "teams" */
  update_teams_many?: Maybe<Array<Maybe<teams_mutation_response>>>;
  /** update data of the table: "template_sms" */
  update_template_sms?: Maybe<template_sms_mutation_response>;
  /** update single row of the table: "template_sms" */
  update_template_sms_by_pk?: Maybe<template_sms>;
  /** update multiples rows of table: "template_sms" */
  update_template_sms_many?: Maybe<Array<Maybe<template_sms_mutation_response>>>;
  /** update data of the table: "ticket" */
  update_ticket?: Maybe<ticket_mutation_response>;
  /** update data of the table: "ticket_activity_log" */
  update_ticket_activity_log?: Maybe<ticket_activity_log_mutation_response>;
  /** update single row of the table: "ticket_activity_log" */
  update_ticket_activity_log_by_pk?: Maybe<ticket_activity_log>;
  /** update multiples rows of table: "ticket_activity_log" */
  update_ticket_activity_log_many?: Maybe<Array<Maybe<ticket_activity_log_mutation_response>>>;
  /** update single row of the table: "ticket" */
  update_ticket_by_pk?: Maybe<ticket>;
  /** update data of the table: "ticket_forms" */
  update_ticket_forms?: Maybe<ticket_forms_mutation_response>;
  /** update single row of the table: "ticket_forms" */
  update_ticket_forms_by_pk?: Maybe<ticket_forms>;
  /** update multiples rows of table: "ticket_forms" */
  update_ticket_forms_many?: Maybe<Array<Maybe<ticket_forms_mutation_response>>>;
  /** update multiples rows of table: "ticket" */
  update_ticket_many?: Maybe<Array<Maybe<ticket_mutation_response>>>;
  /** update data of the table: "ticket_message_mentions" */
  update_ticket_message_mentions?: Maybe<ticket_message_mentions_mutation_response>;
  /** update single row of the table: "ticket_message_mentions" */
  update_ticket_message_mentions_by_pk?: Maybe<ticket_message_mentions>;
  /** update multiples rows of table: "ticket_message_mentions" */
  update_ticket_message_mentions_many?: Maybe<Array<Maybe<ticket_message_mentions_mutation_response>>>;
  /** update data of the table: "ticket_messages" */
  update_ticket_messages?: Maybe<ticket_messages_mutation_response>;
  /** update single row of the table: "ticket_messages" */
  update_ticket_messages_by_pk?: Maybe<ticket_messages>;
  /** update multiples rows of table: "ticket_messages" */
  update_ticket_messages_many?: Maybe<Array<Maybe<ticket_messages_mutation_response>>>;
  /** update data of the table: "ticket_share" */
  update_ticket_share?: Maybe<ticket_share_mutation_response>;
  /** update single row of the table: "ticket_share" */
  update_ticket_share_by_pk?: Maybe<ticket_share>;
  /** update multiples rows of table: "ticket_share" */
  update_ticket_share_many?: Maybe<Array<Maybe<ticket_share_mutation_response>>>;
  /** update data of the table: "ticket_tags" */
  update_ticket_tags?: Maybe<ticket_tags_mutation_response>;
  /** update single row of the table: "ticket_tags" */
  update_ticket_tags_by_pk?: Maybe<ticket_tags>;
  /** update multiples rows of table: "ticket_tags" */
  update_ticket_tags_many?: Maybe<Array<Maybe<ticket_tags_mutation_response>>>;
  /** update data of the table: "ticket_watch_list" */
  update_ticket_watch_list?: Maybe<ticket_watch_list_mutation_response>;
  /** update single row of the table: "ticket_watch_list" */
  update_ticket_watch_list_by_pk?: Maybe<ticket_watch_list>;
  /** update multiples rows of table: "ticket_watch_list" */
  update_ticket_watch_list_many?: Maybe<Array<Maybe<ticket_watch_list_mutation_response>>>;
  /** update data of the table: "update_version" */
  update_update_version?: Maybe<update_version_mutation_response>;
  /** update single row of the table: "update_version" */
  update_update_version_by_pk?: Maybe<update_version>;
  /** update multiples rows of table: "update_version" */
  update_update_version_many?: Maybe<Array<Maybe<update_version_mutation_response>>>;
  /** update data of the table: "user_roles" */
  update_user_roles?: Maybe<user_roles_mutation_response>;
  /** update single row of the table: "user_roles" */
  update_user_roles_by_pk?: Maybe<user_roles>;
  /** update multiples rows of table: "user_roles" */
  update_user_roles_many?: Maybe<Array<Maybe<user_roles_mutation_response>>>;
  /** update data of the table: "users" */
  update_users?: Maybe<users_mutation_response>;
  /** update single row of the table: "users" */
  update_users_by_pk?: Maybe<users>;
  /** update multiples rows of table: "users" */
  update_users_many?: Maybe<Array<Maybe<users_mutation_response>>>;
  /** update data of the table: "workflows_contact_reason" */
  update_workflows_contact_reason?: Maybe<workflows_contact_reason_mutation_response>;
  /** update single row of the table: "workflows_contact_reason" */
  update_workflows_contact_reason_by_pk?: Maybe<workflows_contact_reason>;
  /** update multiples rows of table: "workflows_contact_reason" */
  update_workflows_contact_reason_many?: Maybe<Array<Maybe<workflows_contact_reason_mutation_response>>>;
  /** update data of the table: "working_hours" */
  update_working_hours?: Maybe<working_hours_mutation_response>;
  /** update single row of the table: "working_hours" */
  update_working_hours_by_pk?: Maybe<working_hours>;
  /** update multiples rows of table: "working_hours" */
  update_working_hours_many?: Maybe<Array<Maybe<working_hours_mutation_response>>>;
  /** update data of the table: "working_hours_shift" */
  update_working_hours_shift?: Maybe<working_hours_shift_mutation_response>;
  /** update single row of the table: "working_hours_shift" */
  update_working_hours_shift_by_pk?: Maybe<working_hours_shift>;
  /** update multiples rows of table: "working_hours_shift" */
  update_working_hours_shift_many?: Maybe<Array<Maybe<working_hours_shift_mutation_response>>>;
};


/** mutation root */
export type mutation_rootdelete_account_email_configArgs = {
  where: account_email_config_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_account_email_config_by_pkArgs = {
  account_id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_account_usersArgs = {
  where: account_users_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_account_users_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_accountsArgs = {
  where: accounts_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_accounts_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_article_tagsArgs = {
  where: article_tags_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_article_tags_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_attachmentsArgs = {
  where: attachments_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_attachments_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_automation_flow_categoriesArgs = {
  where: automation_flow_categories_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_automation_flow_categories_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_automation_flowsArgs = {
  where: automation_flows_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_automation_flows_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_automation_rulesArgs = {
  where: automation_rules_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_automation_rules_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_call_eventsArgs = {
  where: call_events_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_call_events_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_callsArgs = {
  where: calls_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_calls_by_pkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type mutation_rootdelete_canned_responsesArgs = {
  where: canned_responses_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_canned_responses_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_canned_responses_categoryArgs = {
  where: canned_responses_category_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_canned_responses_category_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_channel_emailArgs = {
  where: channel_email_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_channel_email_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_channel_google_businessArgs = {
  where: channel_google_business_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_channel_google_business_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_channel_instagramArgs = {
  where: channel_instagram_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_channel_instagram_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_channel_live_chatArgs = {
  where: channel_live_chat_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_channel_live_chat_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_channel_twitter_profilesArgs = {
  where: channel_twitter_profiles_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_channel_twitter_profiles_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_channel_twitter_streamArgs = {
  where: channel_twitter_stream_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_channel_twitter_stream_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_channel_web_chatArgs = {
  where: channel_web_chat_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_channel_web_chat_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_channel_whatsappArgs = {
  where: channel_whatsapp_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_channel_whatsapp_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_contact_inboxesArgs = {
  where: contact_inboxes_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_contact_inboxes_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_contact_tagsArgs = {
  where: contact_tags_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_contact_tags_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_contactsArgs = {
  where: contacts_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_contacts_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_conversation_activity_logArgs = {
  where: conversation_activity_log_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_conversation_activity_log_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_conversation_message_mentionsArgs = {
  where: conversation_message_mentions_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_conversation_message_mentions_by_pkArgs = {
  message_id: Scalars['bigint'];
  user_id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_conversation_tagsArgs = {
  where: conversation_tags_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_conversation_tags_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_conversation_watch_listArgs = {
  where: conversation_watch_list_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_conversation_watch_list_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_conversationsArgs = {
  where: conversations_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_conversations_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_csat_feedbackArgs = {
  where: csat_feedback_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_csat_feedback_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_custom_filtersArgs = {
  where: custom_filters_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_custom_filters_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_inboxesArgs = {
  where: inboxes_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_inboxes_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_ivr_menusArgs = {
  where: ivr_menus_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_ivr_menus_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_jira_ticketsArgs = {
  where: jira_tickets_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_jira_tickets_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_knowladge_base_appearanceArgs = {
  where: knowladge_base_appearance_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_knowladge_base_appearance_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_knowledge_base_articlesArgs = {
  where: knowledge_base_articles_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_knowledge_base_articles_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_knowledge_base_categoriesArgs = {
  where: knowledge_base_categories_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_knowledge_base_categories_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_log_agent_statusArgs = {
  where: log_agent_status_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_log_agent_status_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_messagesArgs = {
  where: messages_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_messages_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_sla_policiesArgs = {
  where: sla_policies_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_sla_policies_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_sla_target_policiesArgs = {
  where: sla_target_policies_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_sla_target_policies_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_tagsArgs = {
  where: tags_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_tags_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_team_inboxesArgs = {
  where: team_inboxes_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_team_inboxes_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_team_membersArgs = {
  where: team_members_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_team_members_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_teamsArgs = {
  where: teams_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_teams_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_template_smsArgs = {
  where: template_sms_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_template_sms_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_ticketArgs = {
  where: ticket_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_ticket_activity_logArgs = {
  where: ticket_activity_log_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_ticket_activity_log_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_ticket_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_ticket_formsArgs = {
  where: ticket_forms_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_ticket_forms_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_ticket_message_mentionsArgs = {
  where: ticket_message_mentions_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_ticket_message_mentions_by_pkArgs = {
  message_id: Scalars['bigint'];
  user_id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_ticket_messagesArgs = {
  where: ticket_messages_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_ticket_messages_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_ticket_shareArgs = {
  where: ticket_share_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_ticket_share_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_ticket_tagsArgs = {
  where: ticket_tags_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_ticket_tags_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_ticket_watch_listArgs = {
  where: ticket_watch_list_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_ticket_watch_list_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_update_versionArgs = {
  where: update_version_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_update_version_by_pkArgs = {
  version: Scalars['String'];
};


/** mutation root */
export type mutation_rootdelete_user_rolesArgs = {
  where: user_roles_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_user_roles_by_pkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type mutation_rootdelete_usersArgs = {
  where: users_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_users_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_workflows_contact_reasonArgs = {
  where: workflows_contact_reason_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_workflows_contact_reason_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_working_hoursArgs = {
  where: working_hours_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_working_hours_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootdelete_working_hours_shiftArgs = {
  where: working_hours_shift_bool_exp;
};


/** mutation root */
export type mutation_rootdelete_working_hours_shift_by_pkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type mutation_rootinsert_account_email_configArgs = {
  objects: Array<account_email_config_insert_input>;
  on_conflict?: InputMaybe<account_email_config_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_account_email_config_oneArgs = {
  object: account_email_config_insert_input;
  on_conflict?: InputMaybe<account_email_config_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_account_usersArgs = {
  objects: Array<account_users_insert_input>;
  on_conflict?: InputMaybe<account_users_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_account_users_oneArgs = {
  object: account_users_insert_input;
  on_conflict?: InputMaybe<account_users_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_accountsArgs = {
  objects: Array<accounts_insert_input>;
  on_conflict?: InputMaybe<accounts_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_accounts_oneArgs = {
  object: accounts_insert_input;
  on_conflict?: InputMaybe<accounts_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_article_tagsArgs = {
  objects: Array<article_tags_insert_input>;
  on_conflict?: InputMaybe<article_tags_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_article_tags_oneArgs = {
  object: article_tags_insert_input;
  on_conflict?: InputMaybe<article_tags_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_attachmentsArgs = {
  objects: Array<attachments_insert_input>;
  on_conflict?: InputMaybe<attachments_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_attachments_oneArgs = {
  object: attachments_insert_input;
  on_conflict?: InputMaybe<attachments_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_automation_flow_categoriesArgs = {
  objects: Array<automation_flow_categories_insert_input>;
  on_conflict?: InputMaybe<automation_flow_categories_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_automation_flow_categories_oneArgs = {
  object: automation_flow_categories_insert_input;
  on_conflict?: InputMaybe<automation_flow_categories_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_automation_flowsArgs = {
  objects: Array<automation_flows_insert_input>;
  on_conflict?: InputMaybe<automation_flows_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_automation_flows_oneArgs = {
  object: automation_flows_insert_input;
  on_conflict?: InputMaybe<automation_flows_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_automation_rulesArgs = {
  objects: Array<automation_rules_insert_input>;
  on_conflict?: InputMaybe<automation_rules_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_automation_rules_oneArgs = {
  object: automation_rules_insert_input;
  on_conflict?: InputMaybe<automation_rules_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_call_eventsArgs = {
  objects: Array<call_events_insert_input>;
  on_conflict?: InputMaybe<call_events_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_call_events_oneArgs = {
  object: call_events_insert_input;
  on_conflict?: InputMaybe<call_events_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_callsArgs = {
  objects: Array<calls_insert_input>;
  on_conflict?: InputMaybe<calls_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_calls_oneArgs = {
  object: calls_insert_input;
  on_conflict?: InputMaybe<calls_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_canned_responsesArgs = {
  objects: Array<canned_responses_insert_input>;
  on_conflict?: InputMaybe<canned_responses_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_canned_responses_categoryArgs = {
  objects: Array<canned_responses_category_insert_input>;
  on_conflict?: InputMaybe<canned_responses_category_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_canned_responses_category_oneArgs = {
  object: canned_responses_category_insert_input;
  on_conflict?: InputMaybe<canned_responses_category_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_canned_responses_oneArgs = {
  object: canned_responses_insert_input;
  on_conflict?: InputMaybe<canned_responses_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_emailArgs = {
  objects: Array<channel_email_insert_input>;
  on_conflict?: InputMaybe<channel_email_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_email_oneArgs = {
  object: channel_email_insert_input;
  on_conflict?: InputMaybe<channel_email_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_google_businessArgs = {
  objects: Array<channel_google_business_insert_input>;
  on_conflict?: InputMaybe<channel_google_business_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_google_business_oneArgs = {
  object: channel_google_business_insert_input;
  on_conflict?: InputMaybe<channel_google_business_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_instagramArgs = {
  objects: Array<channel_instagram_insert_input>;
  on_conflict?: InputMaybe<channel_instagram_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_instagram_oneArgs = {
  object: channel_instagram_insert_input;
  on_conflict?: InputMaybe<channel_instagram_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_live_chatArgs = {
  objects: Array<channel_live_chat_insert_input>;
  on_conflict?: InputMaybe<channel_live_chat_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_live_chat_oneArgs = {
  object: channel_live_chat_insert_input;
  on_conflict?: InputMaybe<channel_live_chat_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_twitter_profilesArgs = {
  objects: Array<channel_twitter_profiles_insert_input>;
  on_conflict?: InputMaybe<channel_twitter_profiles_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_twitter_profiles_oneArgs = {
  object: channel_twitter_profiles_insert_input;
  on_conflict?: InputMaybe<channel_twitter_profiles_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_twitter_streamArgs = {
  objects: Array<channel_twitter_stream_insert_input>;
  on_conflict?: InputMaybe<channel_twitter_stream_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_twitter_stream_oneArgs = {
  object: channel_twitter_stream_insert_input;
  on_conflict?: InputMaybe<channel_twitter_stream_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_web_chatArgs = {
  objects: Array<channel_web_chat_insert_input>;
  on_conflict?: InputMaybe<channel_web_chat_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_web_chat_oneArgs = {
  object: channel_web_chat_insert_input;
  on_conflict?: InputMaybe<channel_web_chat_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_whatsappArgs = {
  objects: Array<channel_whatsapp_insert_input>;
  on_conflict?: InputMaybe<channel_whatsapp_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_channel_whatsapp_oneArgs = {
  object: channel_whatsapp_insert_input;
  on_conflict?: InputMaybe<channel_whatsapp_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_contact_inboxesArgs = {
  objects: Array<contact_inboxes_insert_input>;
  on_conflict?: InputMaybe<contact_inboxes_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_contact_inboxes_oneArgs = {
  object: contact_inboxes_insert_input;
  on_conflict?: InputMaybe<contact_inboxes_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_contact_tagsArgs = {
  objects: Array<contact_tags_insert_input>;
  on_conflict?: InputMaybe<contact_tags_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_contact_tags_oneArgs = {
  object: contact_tags_insert_input;
  on_conflict?: InputMaybe<contact_tags_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_contactsArgs = {
  objects: Array<contacts_insert_input>;
  on_conflict?: InputMaybe<contacts_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_contacts_oneArgs = {
  object: contacts_insert_input;
  on_conflict?: InputMaybe<contacts_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_conversation_activity_logArgs = {
  objects: Array<conversation_activity_log_insert_input>;
  on_conflict?: InputMaybe<conversation_activity_log_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_conversation_activity_log_oneArgs = {
  object: conversation_activity_log_insert_input;
  on_conflict?: InputMaybe<conversation_activity_log_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_conversation_message_mentionsArgs = {
  objects: Array<conversation_message_mentions_insert_input>;
  on_conflict?: InputMaybe<conversation_message_mentions_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_conversation_message_mentions_oneArgs = {
  object: conversation_message_mentions_insert_input;
  on_conflict?: InputMaybe<conversation_message_mentions_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_conversation_tagsArgs = {
  objects: Array<conversation_tags_insert_input>;
  on_conflict?: InputMaybe<conversation_tags_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_conversation_tags_oneArgs = {
  object: conversation_tags_insert_input;
  on_conflict?: InputMaybe<conversation_tags_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_conversation_watch_listArgs = {
  objects: Array<conversation_watch_list_insert_input>;
  on_conflict?: InputMaybe<conversation_watch_list_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_conversation_watch_list_oneArgs = {
  object: conversation_watch_list_insert_input;
  on_conflict?: InputMaybe<conversation_watch_list_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_conversationsArgs = {
  objects: Array<conversations_insert_input>;
  on_conflict?: InputMaybe<conversations_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_conversations_oneArgs = {
  object: conversations_insert_input;
  on_conflict?: InputMaybe<conversations_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_csat_feedbackArgs = {
  objects: Array<csat_feedback_insert_input>;
  on_conflict?: InputMaybe<csat_feedback_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_csat_feedback_oneArgs = {
  object: csat_feedback_insert_input;
  on_conflict?: InputMaybe<csat_feedback_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_custom_filtersArgs = {
  objects: Array<custom_filters_insert_input>;
  on_conflict?: InputMaybe<custom_filters_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_custom_filters_oneArgs = {
  object: custom_filters_insert_input;
  on_conflict?: InputMaybe<custom_filters_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_inboxesArgs = {
  objects: Array<inboxes_insert_input>;
  on_conflict?: InputMaybe<inboxes_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_inboxes_oneArgs = {
  object: inboxes_insert_input;
  on_conflict?: InputMaybe<inboxes_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ivr_menusArgs = {
  objects: Array<ivr_menus_insert_input>;
  on_conflict?: InputMaybe<ivr_menus_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ivr_menus_oneArgs = {
  object: ivr_menus_insert_input;
  on_conflict?: InputMaybe<ivr_menus_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_jira_ticketsArgs = {
  objects: Array<jira_tickets_insert_input>;
  on_conflict?: InputMaybe<jira_tickets_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_jira_tickets_oneArgs = {
  object: jira_tickets_insert_input;
  on_conflict?: InputMaybe<jira_tickets_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_knowladge_base_appearanceArgs = {
  objects: Array<knowladge_base_appearance_insert_input>;
  on_conflict?: InputMaybe<knowladge_base_appearance_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_knowladge_base_appearance_oneArgs = {
  object: knowladge_base_appearance_insert_input;
  on_conflict?: InputMaybe<knowladge_base_appearance_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_knowledge_base_articlesArgs = {
  objects: Array<knowledge_base_articles_insert_input>;
  on_conflict?: InputMaybe<knowledge_base_articles_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_knowledge_base_articles_oneArgs = {
  object: knowledge_base_articles_insert_input;
  on_conflict?: InputMaybe<knowledge_base_articles_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_knowledge_base_categoriesArgs = {
  objects: Array<knowledge_base_categories_insert_input>;
  on_conflict?: InputMaybe<knowledge_base_categories_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_knowledge_base_categories_oneArgs = {
  object: knowledge_base_categories_insert_input;
  on_conflict?: InputMaybe<knowledge_base_categories_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_log_agent_statusArgs = {
  objects: Array<log_agent_status_insert_input>;
  on_conflict?: InputMaybe<log_agent_status_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_log_agent_status_oneArgs = {
  object: log_agent_status_insert_input;
  on_conflict?: InputMaybe<log_agent_status_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_messagesArgs = {
  objects: Array<messages_insert_input>;
  on_conflict?: InputMaybe<messages_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_messages_oneArgs = {
  object: messages_insert_input;
  on_conflict?: InputMaybe<messages_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_sla_policiesArgs = {
  objects: Array<sla_policies_insert_input>;
  on_conflict?: InputMaybe<sla_policies_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_sla_policies_oneArgs = {
  object: sla_policies_insert_input;
  on_conflict?: InputMaybe<sla_policies_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_sla_target_policiesArgs = {
  objects: Array<sla_target_policies_insert_input>;
  on_conflict?: InputMaybe<sla_target_policies_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_sla_target_policies_oneArgs = {
  object: sla_target_policies_insert_input;
  on_conflict?: InputMaybe<sla_target_policies_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_tagsArgs = {
  objects: Array<tags_insert_input>;
  on_conflict?: InputMaybe<tags_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_tags_oneArgs = {
  object: tags_insert_input;
  on_conflict?: InputMaybe<tags_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_team_inboxesArgs = {
  objects: Array<team_inboxes_insert_input>;
  on_conflict?: InputMaybe<team_inboxes_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_team_inboxes_oneArgs = {
  object: team_inboxes_insert_input;
  on_conflict?: InputMaybe<team_inboxes_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_team_membersArgs = {
  objects: Array<team_members_insert_input>;
  on_conflict?: InputMaybe<team_members_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_team_members_oneArgs = {
  object: team_members_insert_input;
  on_conflict?: InputMaybe<team_members_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_teamsArgs = {
  objects: Array<teams_insert_input>;
  on_conflict?: InputMaybe<teams_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_teams_oneArgs = {
  object: teams_insert_input;
  on_conflict?: InputMaybe<teams_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_template_smsArgs = {
  objects: Array<template_sms_insert_input>;
  on_conflict?: InputMaybe<template_sms_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_template_sms_oneArgs = {
  object: template_sms_insert_input;
  on_conflict?: InputMaybe<template_sms_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticketArgs = {
  objects: Array<ticket_insert_input>;
  on_conflict?: InputMaybe<ticket_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_activity_logArgs = {
  objects: Array<ticket_activity_log_insert_input>;
  on_conflict?: InputMaybe<ticket_activity_log_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_activity_log_oneArgs = {
  object: ticket_activity_log_insert_input;
  on_conflict?: InputMaybe<ticket_activity_log_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_formsArgs = {
  objects: Array<ticket_forms_insert_input>;
  on_conflict?: InputMaybe<ticket_forms_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_forms_oneArgs = {
  object: ticket_forms_insert_input;
  on_conflict?: InputMaybe<ticket_forms_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_message_mentionsArgs = {
  objects: Array<ticket_message_mentions_insert_input>;
  on_conflict?: InputMaybe<ticket_message_mentions_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_message_mentions_oneArgs = {
  object: ticket_message_mentions_insert_input;
  on_conflict?: InputMaybe<ticket_message_mentions_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_messagesArgs = {
  objects: Array<ticket_messages_insert_input>;
  on_conflict?: InputMaybe<ticket_messages_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_messages_oneArgs = {
  object: ticket_messages_insert_input;
  on_conflict?: InputMaybe<ticket_messages_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_oneArgs = {
  object: ticket_insert_input;
  on_conflict?: InputMaybe<ticket_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_shareArgs = {
  objects: Array<ticket_share_insert_input>;
  on_conflict?: InputMaybe<ticket_share_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_share_oneArgs = {
  object: ticket_share_insert_input;
  on_conflict?: InputMaybe<ticket_share_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_tagsArgs = {
  objects: Array<ticket_tags_insert_input>;
  on_conflict?: InputMaybe<ticket_tags_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_tags_oneArgs = {
  object: ticket_tags_insert_input;
  on_conflict?: InputMaybe<ticket_tags_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_watch_listArgs = {
  objects: Array<ticket_watch_list_insert_input>;
  on_conflict?: InputMaybe<ticket_watch_list_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_ticket_watch_list_oneArgs = {
  object: ticket_watch_list_insert_input;
  on_conflict?: InputMaybe<ticket_watch_list_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_update_versionArgs = {
  objects: Array<update_version_insert_input>;
  on_conflict?: InputMaybe<update_version_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_update_version_oneArgs = {
  object: update_version_insert_input;
  on_conflict?: InputMaybe<update_version_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_user_rolesArgs = {
  objects: Array<user_roles_insert_input>;
  on_conflict?: InputMaybe<user_roles_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_user_roles_oneArgs = {
  object: user_roles_insert_input;
  on_conflict?: InputMaybe<user_roles_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_usersArgs = {
  objects: Array<users_insert_input>;
  on_conflict?: InputMaybe<users_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_users_oneArgs = {
  object: users_insert_input;
  on_conflict?: InputMaybe<users_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_workflows_contact_reasonArgs = {
  objects: Array<workflows_contact_reason_insert_input>;
  on_conflict?: InputMaybe<workflows_contact_reason_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_workflows_contact_reason_oneArgs = {
  object: workflows_contact_reason_insert_input;
  on_conflict?: InputMaybe<workflows_contact_reason_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_working_hoursArgs = {
  objects: Array<working_hours_insert_input>;
  on_conflict?: InputMaybe<working_hours_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_working_hours_oneArgs = {
  object: working_hours_insert_input;
  on_conflict?: InputMaybe<working_hours_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_working_hours_shiftArgs = {
  objects: Array<working_hours_shift_insert_input>;
  on_conflict?: InputMaybe<working_hours_shift_on_conflict>;
};


/** mutation root */
export type mutation_rootinsert_working_hours_shift_oneArgs = {
  object: working_hours_shift_insert_input;
  on_conflict?: InputMaybe<working_hours_shift_on_conflict>;
};


/** mutation root */
export type mutation_rootupdate_account_email_configArgs = {
  _inc?: InputMaybe<account_email_config_inc_input>;
  _set?: InputMaybe<account_email_config_set_input>;
  where: account_email_config_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_account_email_config_by_pkArgs = {
  _inc?: InputMaybe<account_email_config_inc_input>;
  _set?: InputMaybe<account_email_config_set_input>;
  pk_columns: account_email_config_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_account_email_config_manyArgs = {
  updates: Array<account_email_config_updates>;
};


/** mutation root */
export type mutation_rootupdate_account_usersArgs = {
  _inc?: InputMaybe<account_users_inc_input>;
  _set?: InputMaybe<account_users_set_input>;
  where: account_users_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_account_users_by_pkArgs = {
  _inc?: InputMaybe<account_users_inc_input>;
  _set?: InputMaybe<account_users_set_input>;
  pk_columns: account_users_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_account_users_manyArgs = {
  updates: Array<account_users_updates>;
};


/** mutation root */
export type mutation_rootupdate_accountsArgs = {
  _inc?: InputMaybe<accounts_inc_input>;
  _set?: InputMaybe<accounts_set_input>;
  where: accounts_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_accounts_by_pkArgs = {
  _inc?: InputMaybe<accounts_inc_input>;
  _set?: InputMaybe<accounts_set_input>;
  pk_columns: accounts_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_accounts_manyArgs = {
  updates: Array<accounts_updates>;
};


/** mutation root */
export type mutation_rootupdate_article_tagsArgs = {
  _inc?: InputMaybe<article_tags_inc_input>;
  _set?: InputMaybe<article_tags_set_input>;
  where: article_tags_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_article_tags_by_pkArgs = {
  _inc?: InputMaybe<article_tags_inc_input>;
  _set?: InputMaybe<article_tags_set_input>;
  pk_columns: article_tags_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_article_tags_manyArgs = {
  updates: Array<article_tags_updates>;
};


/** mutation root */
export type mutation_rootupdate_attachmentsArgs = {
  _inc?: InputMaybe<attachments_inc_input>;
  _set?: InputMaybe<attachments_set_input>;
  where: attachments_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_attachments_by_pkArgs = {
  _inc?: InputMaybe<attachments_inc_input>;
  _set?: InputMaybe<attachments_set_input>;
  pk_columns: attachments_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_attachments_manyArgs = {
  updates: Array<attachments_updates>;
};


/** mutation root */
export type mutation_rootupdate_automation_flow_categoriesArgs = {
  _inc?: InputMaybe<automation_flow_categories_inc_input>;
  _set?: InputMaybe<automation_flow_categories_set_input>;
  where: automation_flow_categories_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_automation_flow_categories_by_pkArgs = {
  _inc?: InputMaybe<automation_flow_categories_inc_input>;
  _set?: InputMaybe<automation_flow_categories_set_input>;
  pk_columns: automation_flow_categories_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_automation_flow_categories_manyArgs = {
  updates: Array<automation_flow_categories_updates>;
};


/** mutation root */
export type mutation_rootupdate_automation_flowsArgs = {
  _append?: InputMaybe<automation_flows_append_input>;
  _delete_at_path?: InputMaybe<automation_flows_delete_at_path_input>;
  _delete_elem?: InputMaybe<automation_flows_delete_elem_input>;
  _delete_key?: InputMaybe<automation_flows_delete_key_input>;
  _inc?: InputMaybe<automation_flows_inc_input>;
  _prepend?: InputMaybe<automation_flows_prepend_input>;
  _set?: InputMaybe<automation_flows_set_input>;
  where: automation_flows_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_automation_flows_by_pkArgs = {
  _append?: InputMaybe<automation_flows_append_input>;
  _delete_at_path?: InputMaybe<automation_flows_delete_at_path_input>;
  _delete_elem?: InputMaybe<automation_flows_delete_elem_input>;
  _delete_key?: InputMaybe<automation_flows_delete_key_input>;
  _inc?: InputMaybe<automation_flows_inc_input>;
  _prepend?: InputMaybe<automation_flows_prepend_input>;
  _set?: InputMaybe<automation_flows_set_input>;
  pk_columns: automation_flows_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_automation_flows_manyArgs = {
  updates: Array<automation_flows_updates>;
};


/** mutation root */
export type mutation_rootupdate_automation_rulesArgs = {
  _append?: InputMaybe<automation_rules_append_input>;
  _delete_at_path?: InputMaybe<automation_rules_delete_at_path_input>;
  _delete_elem?: InputMaybe<automation_rules_delete_elem_input>;
  _delete_key?: InputMaybe<automation_rules_delete_key_input>;
  _inc?: InputMaybe<automation_rules_inc_input>;
  _prepend?: InputMaybe<automation_rules_prepend_input>;
  _set?: InputMaybe<automation_rules_set_input>;
  where: automation_rules_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_automation_rules_by_pkArgs = {
  _append?: InputMaybe<automation_rules_append_input>;
  _delete_at_path?: InputMaybe<automation_rules_delete_at_path_input>;
  _delete_elem?: InputMaybe<automation_rules_delete_elem_input>;
  _delete_key?: InputMaybe<automation_rules_delete_key_input>;
  _inc?: InputMaybe<automation_rules_inc_input>;
  _prepend?: InputMaybe<automation_rules_prepend_input>;
  _set?: InputMaybe<automation_rules_set_input>;
  pk_columns: automation_rules_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_automation_rules_manyArgs = {
  updates: Array<automation_rules_updates>;
};


/** mutation root */
export type mutation_rootupdate_call_eventsArgs = {
  _append?: InputMaybe<call_events_append_input>;
  _delete_at_path?: InputMaybe<call_events_delete_at_path_input>;
  _delete_elem?: InputMaybe<call_events_delete_elem_input>;
  _delete_key?: InputMaybe<call_events_delete_key_input>;
  _inc?: InputMaybe<call_events_inc_input>;
  _prepend?: InputMaybe<call_events_prepend_input>;
  _set?: InputMaybe<call_events_set_input>;
  where: call_events_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_call_events_by_pkArgs = {
  _append?: InputMaybe<call_events_append_input>;
  _delete_at_path?: InputMaybe<call_events_delete_at_path_input>;
  _delete_elem?: InputMaybe<call_events_delete_elem_input>;
  _delete_key?: InputMaybe<call_events_delete_key_input>;
  _inc?: InputMaybe<call_events_inc_input>;
  _prepend?: InputMaybe<call_events_prepend_input>;
  _set?: InputMaybe<call_events_set_input>;
  pk_columns: call_events_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_call_events_manyArgs = {
  updates: Array<call_events_updates>;
};


/** mutation root */
export type mutation_rootupdate_callsArgs = {
  _inc?: InputMaybe<calls_inc_input>;
  _set?: InputMaybe<calls_set_input>;
  where: calls_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_calls_by_pkArgs = {
  _inc?: InputMaybe<calls_inc_input>;
  _set?: InputMaybe<calls_set_input>;
  pk_columns: calls_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_calls_manyArgs = {
  updates: Array<calls_updates>;
};


/** mutation root */
export type mutation_rootupdate_canned_responsesArgs = {
  _inc?: InputMaybe<canned_responses_inc_input>;
  _set?: InputMaybe<canned_responses_set_input>;
  where: canned_responses_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_canned_responses_by_pkArgs = {
  _inc?: InputMaybe<canned_responses_inc_input>;
  _set?: InputMaybe<canned_responses_set_input>;
  pk_columns: canned_responses_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_canned_responses_categoryArgs = {
  _inc?: InputMaybe<canned_responses_category_inc_input>;
  _set?: InputMaybe<canned_responses_category_set_input>;
  where: canned_responses_category_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_canned_responses_category_by_pkArgs = {
  _inc?: InputMaybe<canned_responses_category_inc_input>;
  _set?: InputMaybe<canned_responses_category_set_input>;
  pk_columns: canned_responses_category_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_canned_responses_category_manyArgs = {
  updates: Array<canned_responses_category_updates>;
};


/** mutation root */
export type mutation_rootupdate_canned_responses_manyArgs = {
  updates: Array<canned_responses_updates>;
};


/** mutation root */
export type mutation_rootupdate_channel_emailArgs = {
  _inc?: InputMaybe<channel_email_inc_input>;
  _set?: InputMaybe<channel_email_set_input>;
  where: channel_email_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_channel_email_by_pkArgs = {
  _inc?: InputMaybe<channel_email_inc_input>;
  _set?: InputMaybe<channel_email_set_input>;
  pk_columns: channel_email_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_channel_email_manyArgs = {
  updates: Array<channel_email_updates>;
};


/** mutation root */
export type mutation_rootupdate_channel_google_businessArgs = {
  _inc?: InputMaybe<channel_google_business_inc_input>;
  _set?: InputMaybe<channel_google_business_set_input>;
  where: channel_google_business_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_channel_google_business_by_pkArgs = {
  _inc?: InputMaybe<channel_google_business_inc_input>;
  _set?: InputMaybe<channel_google_business_set_input>;
  pk_columns: channel_google_business_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_channel_google_business_manyArgs = {
  updates: Array<channel_google_business_updates>;
};


/** mutation root */
export type mutation_rootupdate_channel_instagramArgs = {
  _inc?: InputMaybe<channel_instagram_inc_input>;
  _set?: InputMaybe<channel_instagram_set_input>;
  where: channel_instagram_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_channel_instagram_by_pkArgs = {
  _inc?: InputMaybe<channel_instagram_inc_input>;
  _set?: InputMaybe<channel_instagram_set_input>;
  pk_columns: channel_instagram_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_channel_instagram_manyArgs = {
  updates: Array<channel_instagram_updates>;
};


/** mutation root */
export type mutation_rootupdate_channel_live_chatArgs = {
  _inc?: InputMaybe<channel_live_chat_inc_input>;
  _set?: InputMaybe<channel_live_chat_set_input>;
  where: channel_live_chat_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_channel_live_chat_by_pkArgs = {
  _inc?: InputMaybe<channel_live_chat_inc_input>;
  _set?: InputMaybe<channel_live_chat_set_input>;
  pk_columns: channel_live_chat_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_channel_live_chat_manyArgs = {
  updates: Array<channel_live_chat_updates>;
};


/** mutation root */
export type mutation_rootupdate_channel_twitter_profilesArgs = {
  _inc?: InputMaybe<channel_twitter_profiles_inc_input>;
  _set?: InputMaybe<channel_twitter_profiles_set_input>;
  where: channel_twitter_profiles_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_channel_twitter_profiles_by_pkArgs = {
  _inc?: InputMaybe<channel_twitter_profiles_inc_input>;
  _set?: InputMaybe<channel_twitter_profiles_set_input>;
  pk_columns: channel_twitter_profiles_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_channel_twitter_profiles_manyArgs = {
  updates: Array<channel_twitter_profiles_updates>;
};


/** mutation root */
export type mutation_rootupdate_channel_twitter_streamArgs = {
  _inc?: InputMaybe<channel_twitter_stream_inc_input>;
  _set?: InputMaybe<channel_twitter_stream_set_input>;
  where: channel_twitter_stream_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_channel_twitter_stream_by_pkArgs = {
  _inc?: InputMaybe<channel_twitter_stream_inc_input>;
  _set?: InputMaybe<channel_twitter_stream_set_input>;
  pk_columns: channel_twitter_stream_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_channel_twitter_stream_manyArgs = {
  updates: Array<channel_twitter_stream_updates>;
};


/** mutation root */
export type mutation_rootupdate_channel_web_chatArgs = {
  _inc?: InputMaybe<channel_web_chat_inc_input>;
  _set?: InputMaybe<channel_web_chat_set_input>;
  where: channel_web_chat_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_channel_web_chat_by_pkArgs = {
  _inc?: InputMaybe<channel_web_chat_inc_input>;
  _set?: InputMaybe<channel_web_chat_set_input>;
  pk_columns: channel_web_chat_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_channel_web_chat_manyArgs = {
  updates: Array<channel_web_chat_updates>;
};


/** mutation root */
export type mutation_rootupdate_channel_whatsappArgs = {
  _inc?: InputMaybe<channel_whatsapp_inc_input>;
  _set?: InputMaybe<channel_whatsapp_set_input>;
  where: channel_whatsapp_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_channel_whatsapp_by_pkArgs = {
  _inc?: InputMaybe<channel_whatsapp_inc_input>;
  _set?: InputMaybe<channel_whatsapp_set_input>;
  pk_columns: channel_whatsapp_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_channel_whatsapp_manyArgs = {
  updates: Array<channel_whatsapp_updates>;
};


/** mutation root */
export type mutation_rootupdate_contact_inboxesArgs = {
  _inc?: InputMaybe<contact_inboxes_inc_input>;
  _set?: InputMaybe<contact_inboxes_set_input>;
  where: contact_inboxes_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_contact_inboxes_by_pkArgs = {
  _inc?: InputMaybe<contact_inboxes_inc_input>;
  _set?: InputMaybe<contact_inboxes_set_input>;
  pk_columns: contact_inboxes_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_contact_inboxes_manyArgs = {
  updates: Array<contact_inboxes_updates>;
};


/** mutation root */
export type mutation_rootupdate_contact_tagsArgs = {
  _inc?: InputMaybe<contact_tags_inc_input>;
  _set?: InputMaybe<contact_tags_set_input>;
  where: contact_tags_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_contact_tags_by_pkArgs = {
  _inc?: InputMaybe<contact_tags_inc_input>;
  _set?: InputMaybe<contact_tags_set_input>;
  pk_columns: contact_tags_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_contact_tags_manyArgs = {
  updates: Array<contact_tags_updates>;
};


/** mutation root */
export type mutation_rootupdate_contactsArgs = {
  _append?: InputMaybe<contacts_append_input>;
  _delete_at_path?: InputMaybe<contacts_delete_at_path_input>;
  _delete_elem?: InputMaybe<contacts_delete_elem_input>;
  _delete_key?: InputMaybe<contacts_delete_key_input>;
  _inc?: InputMaybe<contacts_inc_input>;
  _prepend?: InputMaybe<contacts_prepend_input>;
  _set?: InputMaybe<contacts_set_input>;
  where: contacts_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_contacts_by_pkArgs = {
  _append?: InputMaybe<contacts_append_input>;
  _delete_at_path?: InputMaybe<contacts_delete_at_path_input>;
  _delete_elem?: InputMaybe<contacts_delete_elem_input>;
  _delete_key?: InputMaybe<contacts_delete_key_input>;
  _inc?: InputMaybe<contacts_inc_input>;
  _prepend?: InputMaybe<contacts_prepend_input>;
  _set?: InputMaybe<contacts_set_input>;
  pk_columns: contacts_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_contacts_manyArgs = {
  updates: Array<contacts_updates>;
};


/** mutation root */
export type mutation_rootupdate_conversation_activity_logArgs = {
  _append?: InputMaybe<conversation_activity_log_append_input>;
  _delete_at_path?: InputMaybe<conversation_activity_log_delete_at_path_input>;
  _delete_elem?: InputMaybe<conversation_activity_log_delete_elem_input>;
  _delete_key?: InputMaybe<conversation_activity_log_delete_key_input>;
  _inc?: InputMaybe<conversation_activity_log_inc_input>;
  _prepend?: InputMaybe<conversation_activity_log_prepend_input>;
  _set?: InputMaybe<conversation_activity_log_set_input>;
  where: conversation_activity_log_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_conversation_activity_log_by_pkArgs = {
  _append?: InputMaybe<conversation_activity_log_append_input>;
  _delete_at_path?: InputMaybe<conversation_activity_log_delete_at_path_input>;
  _delete_elem?: InputMaybe<conversation_activity_log_delete_elem_input>;
  _delete_key?: InputMaybe<conversation_activity_log_delete_key_input>;
  _inc?: InputMaybe<conversation_activity_log_inc_input>;
  _prepend?: InputMaybe<conversation_activity_log_prepend_input>;
  _set?: InputMaybe<conversation_activity_log_set_input>;
  pk_columns: conversation_activity_log_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_conversation_activity_log_manyArgs = {
  updates: Array<conversation_activity_log_updates>;
};


/** mutation root */
export type mutation_rootupdate_conversation_message_mentionsArgs = {
  _inc?: InputMaybe<conversation_message_mentions_inc_input>;
  _set?: InputMaybe<conversation_message_mentions_set_input>;
  where: conversation_message_mentions_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_conversation_message_mentions_by_pkArgs = {
  _inc?: InputMaybe<conversation_message_mentions_inc_input>;
  _set?: InputMaybe<conversation_message_mentions_set_input>;
  pk_columns: conversation_message_mentions_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_conversation_message_mentions_manyArgs = {
  updates: Array<conversation_message_mentions_updates>;
};


/** mutation root */
export type mutation_rootupdate_conversation_tagsArgs = {
  _inc?: InputMaybe<conversation_tags_inc_input>;
  _set?: InputMaybe<conversation_tags_set_input>;
  where: conversation_tags_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_conversation_tags_by_pkArgs = {
  _inc?: InputMaybe<conversation_tags_inc_input>;
  _set?: InputMaybe<conversation_tags_set_input>;
  pk_columns: conversation_tags_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_conversation_tags_manyArgs = {
  updates: Array<conversation_tags_updates>;
};


/** mutation root */
export type mutation_rootupdate_conversation_watch_listArgs = {
  _inc?: InputMaybe<conversation_watch_list_inc_input>;
  _set?: InputMaybe<conversation_watch_list_set_input>;
  where: conversation_watch_list_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_conversation_watch_list_by_pkArgs = {
  _inc?: InputMaybe<conversation_watch_list_inc_input>;
  _set?: InputMaybe<conversation_watch_list_set_input>;
  pk_columns: conversation_watch_list_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_conversation_watch_list_manyArgs = {
  updates: Array<conversation_watch_list_updates>;
};


/** mutation root */
export type mutation_rootupdate_conversationsArgs = {
  _append?: InputMaybe<conversations_append_input>;
  _delete_at_path?: InputMaybe<conversations_delete_at_path_input>;
  _delete_elem?: InputMaybe<conversations_delete_elem_input>;
  _delete_key?: InputMaybe<conversations_delete_key_input>;
  _inc?: InputMaybe<conversations_inc_input>;
  _prepend?: InputMaybe<conversations_prepend_input>;
  _set?: InputMaybe<conversations_set_input>;
  where: conversations_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_conversations_by_pkArgs = {
  _append?: InputMaybe<conversations_append_input>;
  _delete_at_path?: InputMaybe<conversations_delete_at_path_input>;
  _delete_elem?: InputMaybe<conversations_delete_elem_input>;
  _delete_key?: InputMaybe<conversations_delete_key_input>;
  _inc?: InputMaybe<conversations_inc_input>;
  _prepend?: InputMaybe<conversations_prepend_input>;
  _set?: InputMaybe<conversations_set_input>;
  pk_columns: conversations_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_conversations_manyArgs = {
  updates: Array<conversations_updates>;
};


/** mutation root */
export type mutation_rootupdate_csat_feedbackArgs = {
  _inc?: InputMaybe<csat_feedback_inc_input>;
  _set?: InputMaybe<csat_feedback_set_input>;
  where: csat_feedback_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_csat_feedback_by_pkArgs = {
  _inc?: InputMaybe<csat_feedback_inc_input>;
  _set?: InputMaybe<csat_feedback_set_input>;
  pk_columns: csat_feedback_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_csat_feedback_manyArgs = {
  updates: Array<csat_feedback_updates>;
};


/** mutation root */
export type mutation_rootupdate_custom_filtersArgs = {
  _append?: InputMaybe<custom_filters_append_input>;
  _delete_at_path?: InputMaybe<custom_filters_delete_at_path_input>;
  _delete_elem?: InputMaybe<custom_filters_delete_elem_input>;
  _delete_key?: InputMaybe<custom_filters_delete_key_input>;
  _inc?: InputMaybe<custom_filters_inc_input>;
  _prepend?: InputMaybe<custom_filters_prepend_input>;
  _set?: InputMaybe<custom_filters_set_input>;
  where: custom_filters_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_custom_filters_by_pkArgs = {
  _append?: InputMaybe<custom_filters_append_input>;
  _delete_at_path?: InputMaybe<custom_filters_delete_at_path_input>;
  _delete_elem?: InputMaybe<custom_filters_delete_elem_input>;
  _delete_key?: InputMaybe<custom_filters_delete_key_input>;
  _inc?: InputMaybe<custom_filters_inc_input>;
  _prepend?: InputMaybe<custom_filters_prepend_input>;
  _set?: InputMaybe<custom_filters_set_input>;
  pk_columns: custom_filters_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_custom_filters_manyArgs = {
  updates: Array<custom_filters_updates>;
};


/** mutation root */
export type mutation_rootupdate_inboxesArgs = {
  _inc?: InputMaybe<inboxes_inc_input>;
  _set?: InputMaybe<inboxes_set_input>;
  where: inboxes_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_inboxes_by_pkArgs = {
  _inc?: InputMaybe<inboxes_inc_input>;
  _set?: InputMaybe<inboxes_set_input>;
  pk_columns: inboxes_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_inboxes_manyArgs = {
  updates: Array<inboxes_updates>;
};


/** mutation root */
export type mutation_rootupdate_ivr_menusArgs = {
  _append?: InputMaybe<ivr_menus_append_input>;
  _delete_at_path?: InputMaybe<ivr_menus_delete_at_path_input>;
  _delete_elem?: InputMaybe<ivr_menus_delete_elem_input>;
  _delete_key?: InputMaybe<ivr_menus_delete_key_input>;
  _inc?: InputMaybe<ivr_menus_inc_input>;
  _prepend?: InputMaybe<ivr_menus_prepend_input>;
  _set?: InputMaybe<ivr_menus_set_input>;
  where: ivr_menus_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_ivr_menus_by_pkArgs = {
  _append?: InputMaybe<ivr_menus_append_input>;
  _delete_at_path?: InputMaybe<ivr_menus_delete_at_path_input>;
  _delete_elem?: InputMaybe<ivr_menus_delete_elem_input>;
  _delete_key?: InputMaybe<ivr_menus_delete_key_input>;
  _inc?: InputMaybe<ivr_menus_inc_input>;
  _prepend?: InputMaybe<ivr_menus_prepend_input>;
  _set?: InputMaybe<ivr_menus_set_input>;
  pk_columns: ivr_menus_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_ivr_menus_manyArgs = {
  updates: Array<ivr_menus_updates>;
};


/** mutation root */
export type mutation_rootupdate_jira_ticketsArgs = {
  _inc?: InputMaybe<jira_tickets_inc_input>;
  _set?: InputMaybe<jira_tickets_set_input>;
  where: jira_tickets_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_jira_tickets_by_pkArgs = {
  _inc?: InputMaybe<jira_tickets_inc_input>;
  _set?: InputMaybe<jira_tickets_set_input>;
  pk_columns: jira_tickets_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_jira_tickets_manyArgs = {
  updates: Array<jira_tickets_updates>;
};


/** mutation root */
export type mutation_rootupdate_knowladge_base_appearanceArgs = {
  _inc?: InputMaybe<knowladge_base_appearance_inc_input>;
  _set?: InputMaybe<knowladge_base_appearance_set_input>;
  where: knowladge_base_appearance_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_knowladge_base_appearance_by_pkArgs = {
  _inc?: InputMaybe<knowladge_base_appearance_inc_input>;
  _set?: InputMaybe<knowladge_base_appearance_set_input>;
  pk_columns: knowladge_base_appearance_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_knowladge_base_appearance_manyArgs = {
  updates: Array<knowladge_base_appearance_updates>;
};


/** mutation root */
export type mutation_rootupdate_knowledge_base_articlesArgs = {
  _inc?: InputMaybe<knowledge_base_articles_inc_input>;
  _set?: InputMaybe<knowledge_base_articles_set_input>;
  where: knowledge_base_articles_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_knowledge_base_articles_by_pkArgs = {
  _inc?: InputMaybe<knowledge_base_articles_inc_input>;
  _set?: InputMaybe<knowledge_base_articles_set_input>;
  pk_columns: knowledge_base_articles_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_knowledge_base_articles_manyArgs = {
  updates: Array<knowledge_base_articles_updates>;
};


/** mutation root */
export type mutation_rootupdate_knowledge_base_categoriesArgs = {
  _inc?: InputMaybe<knowledge_base_categories_inc_input>;
  _set?: InputMaybe<knowledge_base_categories_set_input>;
  where: knowledge_base_categories_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_knowledge_base_categories_by_pkArgs = {
  _inc?: InputMaybe<knowledge_base_categories_inc_input>;
  _set?: InputMaybe<knowledge_base_categories_set_input>;
  pk_columns: knowledge_base_categories_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_knowledge_base_categories_manyArgs = {
  updates: Array<knowledge_base_categories_updates>;
};


/** mutation root */
export type mutation_rootupdate_log_agent_statusArgs = {
  _inc?: InputMaybe<log_agent_status_inc_input>;
  _set?: InputMaybe<log_agent_status_set_input>;
  where: log_agent_status_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_log_agent_status_by_pkArgs = {
  _inc?: InputMaybe<log_agent_status_inc_input>;
  _set?: InputMaybe<log_agent_status_set_input>;
  pk_columns: log_agent_status_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_log_agent_status_manyArgs = {
  updates: Array<log_agent_status_updates>;
};


/** mutation root */
export type mutation_rootupdate_messagesArgs = {
  _append?: InputMaybe<messages_append_input>;
  _delete_at_path?: InputMaybe<messages_delete_at_path_input>;
  _delete_elem?: InputMaybe<messages_delete_elem_input>;
  _delete_key?: InputMaybe<messages_delete_key_input>;
  _inc?: InputMaybe<messages_inc_input>;
  _prepend?: InputMaybe<messages_prepend_input>;
  _set?: InputMaybe<messages_set_input>;
  where: messages_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_messages_by_pkArgs = {
  _append?: InputMaybe<messages_append_input>;
  _delete_at_path?: InputMaybe<messages_delete_at_path_input>;
  _delete_elem?: InputMaybe<messages_delete_elem_input>;
  _delete_key?: InputMaybe<messages_delete_key_input>;
  _inc?: InputMaybe<messages_inc_input>;
  _prepend?: InputMaybe<messages_prepend_input>;
  _set?: InputMaybe<messages_set_input>;
  pk_columns: messages_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_messages_manyArgs = {
  updates: Array<messages_updates>;
};


/** mutation root */
export type mutation_rootupdate_sla_policiesArgs = {
  _inc?: InputMaybe<sla_policies_inc_input>;
  _set?: InputMaybe<sla_policies_set_input>;
  where: sla_policies_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_sla_policies_by_pkArgs = {
  _inc?: InputMaybe<sla_policies_inc_input>;
  _set?: InputMaybe<sla_policies_set_input>;
  pk_columns: sla_policies_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_sla_policies_manyArgs = {
  updates: Array<sla_policies_updates>;
};


/** mutation root */
export type mutation_rootupdate_sla_target_policiesArgs = {
  _inc?: InputMaybe<sla_target_policies_inc_input>;
  _set?: InputMaybe<sla_target_policies_set_input>;
  where: sla_target_policies_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_sla_target_policies_by_pkArgs = {
  _inc?: InputMaybe<sla_target_policies_inc_input>;
  _set?: InputMaybe<sla_target_policies_set_input>;
  pk_columns: sla_target_policies_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_sla_target_policies_manyArgs = {
  updates: Array<sla_target_policies_updates>;
};


/** mutation root */
export type mutation_rootupdate_tagsArgs = {
  _append?: InputMaybe<tags_append_input>;
  _delete_at_path?: InputMaybe<tags_delete_at_path_input>;
  _delete_elem?: InputMaybe<tags_delete_elem_input>;
  _delete_key?: InputMaybe<tags_delete_key_input>;
  _inc?: InputMaybe<tags_inc_input>;
  _prepend?: InputMaybe<tags_prepend_input>;
  _set?: InputMaybe<tags_set_input>;
  where: tags_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_tags_by_pkArgs = {
  _append?: InputMaybe<tags_append_input>;
  _delete_at_path?: InputMaybe<tags_delete_at_path_input>;
  _delete_elem?: InputMaybe<tags_delete_elem_input>;
  _delete_key?: InputMaybe<tags_delete_key_input>;
  _inc?: InputMaybe<tags_inc_input>;
  _prepend?: InputMaybe<tags_prepend_input>;
  _set?: InputMaybe<tags_set_input>;
  pk_columns: tags_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_tags_manyArgs = {
  updates: Array<tags_updates>;
};


/** mutation root */
export type mutation_rootupdate_team_inboxesArgs = {
  _inc?: InputMaybe<team_inboxes_inc_input>;
  _set?: InputMaybe<team_inboxes_set_input>;
  where: team_inboxes_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_team_inboxes_by_pkArgs = {
  _inc?: InputMaybe<team_inboxes_inc_input>;
  _set?: InputMaybe<team_inboxes_set_input>;
  pk_columns: team_inboxes_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_team_inboxes_manyArgs = {
  updates: Array<team_inboxes_updates>;
};


/** mutation root */
export type mutation_rootupdate_team_membersArgs = {
  _inc?: InputMaybe<team_members_inc_input>;
  _set?: InputMaybe<team_members_set_input>;
  where: team_members_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_team_members_by_pkArgs = {
  _inc?: InputMaybe<team_members_inc_input>;
  _set?: InputMaybe<team_members_set_input>;
  pk_columns: team_members_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_team_members_manyArgs = {
  updates: Array<team_members_updates>;
};


/** mutation root */
export type mutation_rootupdate_teamsArgs = {
  _inc?: InputMaybe<teams_inc_input>;
  _set?: InputMaybe<teams_set_input>;
  where: teams_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_teams_by_pkArgs = {
  _inc?: InputMaybe<teams_inc_input>;
  _set?: InputMaybe<teams_set_input>;
  pk_columns: teams_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_teams_manyArgs = {
  updates: Array<teams_updates>;
};


/** mutation root */
export type mutation_rootupdate_template_smsArgs = {
  _append?: InputMaybe<template_sms_append_input>;
  _delete_at_path?: InputMaybe<template_sms_delete_at_path_input>;
  _delete_elem?: InputMaybe<template_sms_delete_elem_input>;
  _delete_key?: InputMaybe<template_sms_delete_key_input>;
  _inc?: InputMaybe<template_sms_inc_input>;
  _prepend?: InputMaybe<template_sms_prepend_input>;
  _set?: InputMaybe<template_sms_set_input>;
  where: template_sms_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_template_sms_by_pkArgs = {
  _append?: InputMaybe<template_sms_append_input>;
  _delete_at_path?: InputMaybe<template_sms_delete_at_path_input>;
  _delete_elem?: InputMaybe<template_sms_delete_elem_input>;
  _delete_key?: InputMaybe<template_sms_delete_key_input>;
  _inc?: InputMaybe<template_sms_inc_input>;
  _prepend?: InputMaybe<template_sms_prepend_input>;
  _set?: InputMaybe<template_sms_set_input>;
  pk_columns: template_sms_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_template_sms_manyArgs = {
  updates: Array<template_sms_updates>;
};


/** mutation root */
export type mutation_rootupdate_ticketArgs = {
  _append?: InputMaybe<ticket_append_input>;
  _delete_at_path?: InputMaybe<ticket_delete_at_path_input>;
  _delete_elem?: InputMaybe<ticket_delete_elem_input>;
  _delete_key?: InputMaybe<ticket_delete_key_input>;
  _inc?: InputMaybe<ticket_inc_input>;
  _prepend?: InputMaybe<ticket_prepend_input>;
  _set?: InputMaybe<ticket_set_input>;
  where: ticket_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_ticket_activity_logArgs = {
  _inc?: InputMaybe<ticket_activity_log_inc_input>;
  _set?: InputMaybe<ticket_activity_log_set_input>;
  where: ticket_activity_log_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_ticket_activity_log_by_pkArgs = {
  _inc?: InputMaybe<ticket_activity_log_inc_input>;
  _set?: InputMaybe<ticket_activity_log_set_input>;
  pk_columns: ticket_activity_log_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_ticket_activity_log_manyArgs = {
  updates: Array<ticket_activity_log_updates>;
};


/** mutation root */
export type mutation_rootupdate_ticket_by_pkArgs = {
  _append?: InputMaybe<ticket_append_input>;
  _delete_at_path?: InputMaybe<ticket_delete_at_path_input>;
  _delete_elem?: InputMaybe<ticket_delete_elem_input>;
  _delete_key?: InputMaybe<ticket_delete_key_input>;
  _inc?: InputMaybe<ticket_inc_input>;
  _prepend?: InputMaybe<ticket_prepend_input>;
  _set?: InputMaybe<ticket_set_input>;
  pk_columns: ticket_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_ticket_formsArgs = {
  _inc?: InputMaybe<ticket_forms_inc_input>;
  _set?: InputMaybe<ticket_forms_set_input>;
  where: ticket_forms_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_ticket_forms_by_pkArgs = {
  _inc?: InputMaybe<ticket_forms_inc_input>;
  _set?: InputMaybe<ticket_forms_set_input>;
  pk_columns: ticket_forms_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_ticket_forms_manyArgs = {
  updates: Array<ticket_forms_updates>;
};


/** mutation root */
export type mutation_rootupdate_ticket_manyArgs = {
  updates: Array<ticket_updates>;
};


/** mutation root */
export type mutation_rootupdate_ticket_message_mentionsArgs = {
  _inc?: InputMaybe<ticket_message_mentions_inc_input>;
  _set?: InputMaybe<ticket_message_mentions_set_input>;
  where: ticket_message_mentions_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_ticket_message_mentions_by_pkArgs = {
  _inc?: InputMaybe<ticket_message_mentions_inc_input>;
  _set?: InputMaybe<ticket_message_mentions_set_input>;
  pk_columns: ticket_message_mentions_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_ticket_message_mentions_manyArgs = {
  updates: Array<ticket_message_mentions_updates>;
};


/** mutation root */
export type mutation_rootupdate_ticket_messagesArgs = {
  _append?: InputMaybe<ticket_messages_append_input>;
  _delete_at_path?: InputMaybe<ticket_messages_delete_at_path_input>;
  _delete_elem?: InputMaybe<ticket_messages_delete_elem_input>;
  _delete_key?: InputMaybe<ticket_messages_delete_key_input>;
  _inc?: InputMaybe<ticket_messages_inc_input>;
  _prepend?: InputMaybe<ticket_messages_prepend_input>;
  _set?: InputMaybe<ticket_messages_set_input>;
  where: ticket_messages_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_ticket_messages_by_pkArgs = {
  _append?: InputMaybe<ticket_messages_append_input>;
  _delete_at_path?: InputMaybe<ticket_messages_delete_at_path_input>;
  _delete_elem?: InputMaybe<ticket_messages_delete_elem_input>;
  _delete_key?: InputMaybe<ticket_messages_delete_key_input>;
  _inc?: InputMaybe<ticket_messages_inc_input>;
  _prepend?: InputMaybe<ticket_messages_prepend_input>;
  _set?: InputMaybe<ticket_messages_set_input>;
  pk_columns: ticket_messages_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_ticket_messages_manyArgs = {
  updates: Array<ticket_messages_updates>;
};


/** mutation root */
export type mutation_rootupdate_ticket_shareArgs = {
  _inc?: InputMaybe<ticket_share_inc_input>;
  _set?: InputMaybe<ticket_share_set_input>;
  where: ticket_share_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_ticket_share_by_pkArgs = {
  _inc?: InputMaybe<ticket_share_inc_input>;
  _set?: InputMaybe<ticket_share_set_input>;
  pk_columns: ticket_share_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_ticket_share_manyArgs = {
  updates: Array<ticket_share_updates>;
};


/** mutation root */
export type mutation_rootupdate_ticket_tagsArgs = {
  _inc?: InputMaybe<ticket_tags_inc_input>;
  _set?: InputMaybe<ticket_tags_set_input>;
  where: ticket_tags_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_ticket_tags_by_pkArgs = {
  _inc?: InputMaybe<ticket_tags_inc_input>;
  _set?: InputMaybe<ticket_tags_set_input>;
  pk_columns: ticket_tags_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_ticket_tags_manyArgs = {
  updates: Array<ticket_tags_updates>;
};


/** mutation root */
export type mutation_rootupdate_ticket_watch_listArgs = {
  _inc?: InputMaybe<ticket_watch_list_inc_input>;
  _set?: InputMaybe<ticket_watch_list_set_input>;
  where: ticket_watch_list_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_ticket_watch_list_by_pkArgs = {
  _inc?: InputMaybe<ticket_watch_list_inc_input>;
  _set?: InputMaybe<ticket_watch_list_set_input>;
  pk_columns: ticket_watch_list_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_ticket_watch_list_manyArgs = {
  updates: Array<ticket_watch_list_updates>;
};


/** mutation root */
export type mutation_rootupdate_update_versionArgs = {
  _set?: InputMaybe<update_version_set_input>;
  where: update_version_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_update_version_by_pkArgs = {
  _set?: InputMaybe<update_version_set_input>;
  pk_columns: update_version_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_update_version_manyArgs = {
  updates: Array<update_version_updates>;
};


/** mutation root */
export type mutation_rootupdate_user_rolesArgs = {
  _inc?: InputMaybe<user_roles_inc_input>;
  _set?: InputMaybe<user_roles_set_input>;
  where: user_roles_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_user_roles_by_pkArgs = {
  _inc?: InputMaybe<user_roles_inc_input>;
  _set?: InputMaybe<user_roles_set_input>;
  pk_columns: user_roles_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_user_roles_manyArgs = {
  updates: Array<user_roles_updates>;
};


/** mutation root */
export type mutation_rootupdate_usersArgs = {
  _append?: InputMaybe<users_append_input>;
  _delete_at_path?: InputMaybe<users_delete_at_path_input>;
  _delete_elem?: InputMaybe<users_delete_elem_input>;
  _delete_key?: InputMaybe<users_delete_key_input>;
  _inc?: InputMaybe<users_inc_input>;
  _prepend?: InputMaybe<users_prepend_input>;
  _set?: InputMaybe<users_set_input>;
  where: users_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_users_by_pkArgs = {
  _append?: InputMaybe<users_append_input>;
  _delete_at_path?: InputMaybe<users_delete_at_path_input>;
  _delete_elem?: InputMaybe<users_delete_elem_input>;
  _delete_key?: InputMaybe<users_delete_key_input>;
  _inc?: InputMaybe<users_inc_input>;
  _prepend?: InputMaybe<users_prepend_input>;
  _set?: InputMaybe<users_set_input>;
  pk_columns: users_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_users_manyArgs = {
  updates: Array<users_updates>;
};


/** mutation root */
export type mutation_rootupdate_workflows_contact_reasonArgs = {
  _append?: InputMaybe<workflows_contact_reason_append_input>;
  _delete_at_path?: InputMaybe<workflows_contact_reason_delete_at_path_input>;
  _delete_elem?: InputMaybe<workflows_contact_reason_delete_elem_input>;
  _delete_key?: InputMaybe<workflows_contact_reason_delete_key_input>;
  _inc?: InputMaybe<workflows_contact_reason_inc_input>;
  _prepend?: InputMaybe<workflows_contact_reason_prepend_input>;
  _set?: InputMaybe<workflows_contact_reason_set_input>;
  where: workflows_contact_reason_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_workflows_contact_reason_by_pkArgs = {
  _append?: InputMaybe<workflows_contact_reason_append_input>;
  _delete_at_path?: InputMaybe<workflows_contact_reason_delete_at_path_input>;
  _delete_elem?: InputMaybe<workflows_contact_reason_delete_elem_input>;
  _delete_key?: InputMaybe<workflows_contact_reason_delete_key_input>;
  _inc?: InputMaybe<workflows_contact_reason_inc_input>;
  _prepend?: InputMaybe<workflows_contact_reason_prepend_input>;
  _set?: InputMaybe<workflows_contact_reason_set_input>;
  pk_columns: workflows_contact_reason_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_workflows_contact_reason_manyArgs = {
  updates: Array<workflows_contact_reason_updates>;
};


/** mutation root */
export type mutation_rootupdate_working_hoursArgs = {
  _inc?: InputMaybe<working_hours_inc_input>;
  _set?: InputMaybe<working_hours_set_input>;
  where: working_hours_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_working_hours_by_pkArgs = {
  _inc?: InputMaybe<working_hours_inc_input>;
  _set?: InputMaybe<working_hours_set_input>;
  pk_columns: working_hours_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_working_hours_manyArgs = {
  updates: Array<working_hours_updates>;
};


/** mutation root */
export type mutation_rootupdate_working_hours_shiftArgs = {
  _inc?: InputMaybe<working_hours_shift_inc_input>;
  _set?: InputMaybe<working_hours_shift_set_input>;
  where: working_hours_shift_bool_exp;
};


/** mutation root */
export type mutation_rootupdate_working_hours_shift_by_pkArgs = {
  _inc?: InputMaybe<working_hours_shift_inc_input>;
  _set?: InputMaybe<working_hours_shift_set_input>;
  pk_columns: working_hours_shift_pk_columns_input;
};


/** mutation root */
export type mutation_rootupdate_working_hours_shift_manyArgs = {
  updates: Array<working_hours_shift_updates>;
};

/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type numeric_comparison_exp = {
  _eq?: InputMaybe<Scalars['numeric']>;
  _gt?: InputMaybe<Scalars['numeric']>;
  _gte?: InputMaybe<Scalars['numeric']>;
  _in?: InputMaybe<Array<Scalars['numeric']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['numeric']>;
  _lte?: InputMaybe<Scalars['numeric']>;
  _neq?: InputMaybe<Scalars['numeric']>;
  _nin?: InputMaybe<Array<Scalars['numeric']>>;
};

/** column ordering options */
export enum order_by {
  /** in ascending order, nulls last */
  asc = 'asc',
  /** in ascending order, nulls first */
  asc_nulls_first = 'asc_nulls_first',
  /** in ascending order, nulls last */
  asc_nulls_last = 'asc_nulls_last',
  /** in descending order, nulls first */
  desc = 'desc',
  /** in descending order, nulls first */
  desc_nulls_first = 'desc_nulls_first',
  /** in descending order, nulls last */
  desc_nulls_last = 'desc_nulls_last'
}

export type query_root = {
  __typename?: 'query_root';
  /** fetch data from the table: "account_agents" */
  account_agents: Array<account_agents>;
  /** fetch aggregated fields from the table: "account_agents" */
  account_agents_aggregate: account_agents_aggregate;
  /** fetch data from the table: "account_email_config" */
  account_email_config: Array<account_email_config>;
  /** fetch aggregated fields from the table: "account_email_config" */
  account_email_config_aggregate: account_email_config_aggregate;
  /** fetch data from the table: "account_email_config" using primary key columns */
  account_email_config_by_pk?: Maybe<account_email_config>;
  /** An array relationship */
  account_users: Array<account_users>;
  /** An aggregate relationship */
  account_users_aggregate: account_users_aggregate;
  /** fetch data from the table: "account_users" using primary key columns */
  account_users_by_pk?: Maybe<account_users>;
  /** fetch data from the table: "accounts" */
  accounts: Array<accounts>;
  /** fetch aggregated fields from the table: "accounts" */
  accounts_aggregate: accounts_aggregate;
  /** fetch data from the table: "accounts" using primary key columns */
  accounts_by_pk?: Maybe<accounts>;
  /** fetch data from the table: "article_tags" */
  article_tags: Array<article_tags>;
  /** fetch aggregated fields from the table: "article_tags" */
  article_tags_aggregate: article_tags_aggregate;
  /** fetch data from the table: "article_tags" using primary key columns */
  article_tags_by_pk?: Maybe<article_tags>;
  /** An array relationship */
  attachments: Array<attachments>;
  /** An aggregate relationship */
  attachments_aggregate: attachments_aggregate;
  /** fetch data from the table: "attachments" using primary key columns */
  attachments_by_pk?: Maybe<attachments>;
  /** fetch data from the table: "automation_flow_categories" */
  automation_flow_categories: Array<automation_flow_categories>;
  /** fetch aggregated fields from the table: "automation_flow_categories" */
  automation_flow_categories_aggregate: automation_flow_categories_aggregate;
  /** fetch data from the table: "automation_flow_categories" using primary key columns */
  automation_flow_categories_by_pk?: Maybe<automation_flow_categories>;
  /** fetch data from the table: "automation_flows" */
  automation_flows: Array<automation_flows>;
  /** fetch aggregated fields from the table: "automation_flows" */
  automation_flows_aggregate: automation_flows_aggregate;
  /** fetch data from the table: "automation_flows" using primary key columns */
  automation_flows_by_pk?: Maybe<automation_flows>;
  /** fetch data from the table: "automation_rules" */
  automation_rules: Array<automation_rules>;
  /** fetch aggregated fields from the table: "automation_rules" */
  automation_rules_aggregate: automation_rules_aggregate;
  /** fetch data from the table: "automation_rules" using primary key columns */
  automation_rules_by_pk?: Maybe<automation_rules>;
  /** fetch data from the table: "call_events" */
  call_events: Array<call_events>;
  /** fetch aggregated fields from the table: "call_events" */
  call_events_aggregate: call_events_aggregate;
  /** fetch data from the table: "call_events" using primary key columns */
  call_events_by_pk?: Maybe<call_events>;
  /** fetch data from the table: "calls" */
  calls: Array<calls>;
  /** fetch aggregated fields from the table: "calls" */
  calls_aggregate: calls_aggregate;
  /** fetch data from the table: "calls" using primary key columns */
  calls_by_pk?: Maybe<calls>;
  /** An array relationship */
  canned_responses: Array<canned_responses>;
  /** An aggregate relationship */
  canned_responses_aggregate: canned_responses_aggregate;
  /** fetch data from the table: "canned_responses" using primary key columns */
  canned_responses_by_pk?: Maybe<canned_responses>;
  /** fetch data from the table: "canned_responses_category" */
  canned_responses_category: Array<canned_responses_category>;
  /** fetch aggregated fields from the table: "canned_responses_category" */
  canned_responses_category_aggregate: canned_responses_category_aggregate;
  /** fetch data from the table: "canned_responses_category" using primary key columns */
  canned_responses_category_by_pk?: Maybe<canned_responses_category>;
  /** fetch data from the table: "channel_email" */
  channel_email: Array<channel_email>;
  /** fetch aggregated fields from the table: "channel_email" */
  channel_email_aggregate: channel_email_aggregate;
  /** fetch data from the table: "channel_email" using primary key columns */
  channel_email_by_pk?: Maybe<channel_email>;
  /** fetch data from the table: "channel_google_business" */
  channel_google_business: Array<channel_google_business>;
  /** fetch aggregated fields from the table: "channel_google_business" */
  channel_google_business_aggregate: channel_google_business_aggregate;
  /** fetch data from the table: "channel_google_business" using primary key columns */
  channel_google_business_by_pk?: Maybe<channel_google_business>;
  /** fetch data from the table: "channel_instagram" */
  channel_instagram: Array<channel_instagram>;
  /** fetch aggregated fields from the table: "channel_instagram" */
  channel_instagram_aggregate: channel_instagram_aggregate;
  /** fetch data from the table: "channel_instagram" using primary key columns */
  channel_instagram_by_pk?: Maybe<channel_instagram>;
  /** fetch data from the table: "channel_live_chat" */
  channel_live_chat: Array<channel_live_chat>;
  /** fetch aggregated fields from the table: "channel_live_chat" */
  channel_live_chat_aggregate: channel_live_chat_aggregate;
  /** fetch data from the table: "channel_live_chat" using primary key columns */
  channel_live_chat_by_pk?: Maybe<channel_live_chat>;
  /** fetch data from the table: "channel_twitter_profiles" */
  channel_twitter_profiles: Array<channel_twitter_profiles>;
  /** fetch aggregated fields from the table: "channel_twitter_profiles" */
  channel_twitter_profiles_aggregate: channel_twitter_profiles_aggregate;
  /** fetch data from the table: "channel_twitter_profiles" using primary key columns */
  channel_twitter_profiles_by_pk?: Maybe<channel_twitter_profiles>;
  /** fetch data from the table: "channel_twitter_stream" */
  channel_twitter_stream: Array<channel_twitter_stream>;
  /** fetch aggregated fields from the table: "channel_twitter_stream" */
  channel_twitter_stream_aggregate: channel_twitter_stream_aggregate;
  /** fetch data from the table: "channel_twitter_stream" using primary key columns */
  channel_twitter_stream_by_pk?: Maybe<channel_twitter_stream>;
  /** fetch data from the table: "channel_web_chat" */
  channel_web_chat: Array<channel_web_chat>;
  /** fetch aggregated fields from the table: "channel_web_chat" */
  channel_web_chat_aggregate: channel_web_chat_aggregate;
  /** fetch data from the table: "channel_web_chat" using primary key columns */
  channel_web_chat_by_pk?: Maybe<channel_web_chat>;
  /** fetch data from the table: "channel_whatsapp" */
  channel_whatsapp: Array<channel_whatsapp>;
  /** fetch aggregated fields from the table: "channel_whatsapp" */
  channel_whatsapp_aggregate: channel_whatsapp_aggregate;
  /** fetch data from the table: "channel_whatsapp" using primary key columns */
  channel_whatsapp_by_pk?: Maybe<channel_whatsapp>;
  /** An array relationship */
  contact_inboxes: Array<contact_inboxes>;
  /** An aggregate relationship */
  contact_inboxes_aggregate: contact_inboxes_aggregate;
  /** fetch data from the table: "contact_inboxes" using primary key columns */
  contact_inboxes_by_pk?: Maybe<contact_inboxes>;
  /** An array relationship */
  contact_tags: Array<contact_tags>;
  /** An aggregate relationship */
  contact_tags_aggregate: contact_tags_aggregate;
  /** fetch data from the table: "contact_tags" using primary key columns */
  contact_tags_by_pk?: Maybe<contact_tags>;
  /** fetch data from the table: "contacts" */
  contacts: Array<contacts>;
  /** fetch aggregated fields from the table: "contacts" */
  contacts_aggregate: contacts_aggregate;
  /** fetch data from the table: "contacts" using primary key columns */
  contacts_by_pk?: Maybe<contacts>;
  /** fetch data from the table: "conversation_activity_log" */
  conversation_activity_log: Array<conversation_activity_log>;
  /** fetch aggregated fields from the table: "conversation_activity_log" */
  conversation_activity_log_aggregate: conversation_activity_log_aggregate;
  /** fetch data from the table: "conversation_activity_log" using primary key columns */
  conversation_activity_log_by_pk?: Maybe<conversation_activity_log>;
  /** fetch data from the table: "conversation_message_mentions" */
  conversation_message_mentions: Array<conversation_message_mentions>;
  /** fetch aggregated fields from the table: "conversation_message_mentions" */
  conversation_message_mentions_aggregate: conversation_message_mentions_aggregate;
  /** fetch data from the table: "conversation_message_mentions" using primary key columns */
  conversation_message_mentions_by_pk?: Maybe<conversation_message_mentions>;
  /** An array relationship */
  conversation_tags: Array<conversation_tags>;
  /** An aggregate relationship */
  conversation_tags_aggregate: conversation_tags_aggregate;
  /** fetch data from the table: "conversation_tags" using primary key columns */
  conversation_tags_by_pk?: Maybe<conversation_tags>;
  /** fetch data from the table: "conversation_watch_list" */
  conversation_watch_list: Array<conversation_watch_list>;
  /** fetch aggregated fields from the table: "conversation_watch_list" */
  conversation_watch_list_aggregate: conversation_watch_list_aggregate;
  /** fetch data from the table: "conversation_watch_list" using primary key columns */
  conversation_watch_list_by_pk?: Maybe<conversation_watch_list>;
  /** An array relationship */
  conversations: Array<conversations>;
  /** An aggregate relationship */
  conversations_aggregate: conversations_aggregate;
  /** fetch data from the table: "conversations" using primary key columns */
  conversations_by_pk?: Maybe<conversations>;
  /** fetch data from the table: "csat_feedback" */
  csat_feedback: Array<csat_feedback>;
  /** fetch aggregated fields from the table: "csat_feedback" */
  csat_feedback_aggregate: csat_feedback_aggregate;
  /** fetch data from the table: "csat_feedback" using primary key columns */
  csat_feedback_by_pk?: Maybe<csat_feedback>;
  /** fetch data from the table: "custom_filters" */
  custom_filters: Array<custom_filters>;
  /** fetch aggregated fields from the table: "custom_filters" */
  custom_filters_aggregate: custom_filters_aggregate;
  /** fetch data from the table: "custom_filters" using primary key columns */
  custom_filters_by_pk?: Maybe<custom_filters>;
  external_contact?: Maybe<ExternalContactByIdOutput>;
  /** fetch data from the table: "inboxes" */
  inboxes: Array<inboxes>;
  /** fetch aggregated fields from the table: "inboxes" */
  inboxes_aggregate: inboxes_aggregate;
  /** fetch data from the table: "inboxes" using primary key columns */
  inboxes_by_pk?: Maybe<inboxes>;
  /** fetch data from the table: "ivr_menus" */
  ivr_menus: Array<ivr_menus>;
  /** fetch aggregated fields from the table: "ivr_menus" */
  ivr_menus_aggregate: ivr_menus_aggregate;
  /** fetch data from the table: "ivr_menus" using primary key columns */
  ivr_menus_by_pk?: Maybe<ivr_menus>;
  /** fetch data from the table: "jira_tickets" */
  jira_tickets: Array<jira_tickets>;
  /** fetch aggregated fields from the table: "jira_tickets" */
  jira_tickets_aggregate: jira_tickets_aggregate;
  /** fetch data from the table: "jira_tickets" using primary key columns */
  jira_tickets_by_pk?: Maybe<jira_tickets>;
  /** fetch data from the table: "knowladge_base_appearance" */
  knowladge_base_appearance: Array<knowladge_base_appearance>;
  /** fetch aggregated fields from the table: "knowladge_base_appearance" */
  knowladge_base_appearance_aggregate: knowladge_base_appearance_aggregate;
  /** fetch data from the table: "knowladge_base_appearance" using primary key columns */
  knowladge_base_appearance_by_pk?: Maybe<knowladge_base_appearance>;
  /** fetch data from the table: "knowledge_base_articles" */
  knowledge_base_articles: Array<knowledge_base_articles>;
  /** fetch aggregated fields from the table: "knowledge_base_articles" */
  knowledge_base_articles_aggregate: knowledge_base_articles_aggregate;
  /** fetch data from the table: "knowledge_base_articles" using primary key columns */
  knowledge_base_articles_by_pk?: Maybe<knowledge_base_articles>;
  /** fetch data from the table: "knowledge_base_categories" */
  knowledge_base_categories: Array<knowledge_base_categories>;
  /** fetch aggregated fields from the table: "knowledge_base_categories" */
  knowledge_base_categories_aggregate: knowledge_base_categories_aggregate;
  /** fetch data from the table: "knowledge_base_categories" using primary key columns */
  knowledge_base_categories_by_pk?: Maybe<knowledge_base_categories>;
  /** fetch data from the table: "log_agent_status" */
  log_agent_status: Array<log_agent_status>;
  /** fetch aggregated fields from the table: "log_agent_status" */
  log_agent_status_aggregate: log_agent_status_aggregate;
  /** fetch data from the table: "log_agent_status" using primary key columns */
  log_agent_status_by_pk?: Maybe<log_agent_status>;
  /** An array relationship */
  messages: Array<messages>;
  /** An aggregate relationship */
  messages_aggregate: messages_aggregate;
  /** fetch data from the table: "messages" using primary key columns */
  messages_by_pk?: Maybe<messages>;
  mockarooApi?: Maybe<Array<Maybe<MockarooAPI>>>;
  /** fetch data from the table: "sla_policies" */
  sla_policies: Array<sla_policies>;
  /** fetch aggregated fields from the table: "sla_policies" */
  sla_policies_aggregate: sla_policies_aggregate;
  /** fetch data from the table: "sla_policies" using primary key columns */
  sla_policies_by_pk?: Maybe<sla_policies>;
  /** An array relationship */
  sla_target_policies: Array<sla_target_policies>;
  /** An aggregate relationship */
  sla_target_policies_aggregate: sla_target_policies_aggregate;
  /** fetch data from the table: "sla_target_policies" using primary key columns */
  sla_target_policies_by_pk?: Maybe<sla_target_policies>;
  /** fetch data from the table: "tags" */
  tags: Array<tags>;
  /** fetch aggregated fields from the table: "tags" */
  tags_aggregate: tags_aggregate;
  /** fetch data from the table: "tags" using primary key columns */
  tags_by_pk?: Maybe<tags>;
  /** An array relationship */
  team_inboxes: Array<team_inboxes>;
  /** An aggregate relationship */
  team_inboxes_aggregate: team_inboxes_aggregate;
  /** fetch data from the table: "team_inboxes" using primary key columns */
  team_inboxes_by_pk?: Maybe<team_inboxes>;
  /** An array relationship */
  team_members: Array<team_members>;
  /** An aggregate relationship */
  team_members_aggregate: team_members_aggregate;
  /** fetch data from the table: "team_members" using primary key columns */
  team_members_by_pk?: Maybe<team_members>;
  /** An array relationship */
  teams: Array<teams>;
  /** An aggregate relationship */
  teams_aggregate: teams_aggregate;
  /** fetch data from the table: "teams" using primary key columns */
  teams_by_pk?: Maybe<teams>;
  /** fetch data from the table: "template_sms" */
  template_sms: Array<template_sms>;
  /** fetch aggregated fields from the table: "template_sms" */
  template_sms_aggregate: template_sms_aggregate;
  /** fetch data from the table: "template_sms" using primary key columns */
  template_sms_by_pk?: Maybe<template_sms>;
  /** fetch data from the table: "ticket" */
  ticket: Array<ticket>;
  /** fetch data from the table: "ticket_activity_log" */
  ticket_activity_log: Array<ticket_activity_log>;
  /** fetch aggregated fields from the table: "ticket_activity_log" */
  ticket_activity_log_aggregate: ticket_activity_log_aggregate;
  /** fetch data from the table: "ticket_activity_log" using primary key columns */
  ticket_activity_log_by_pk?: Maybe<ticket_activity_log>;
  /** fetch aggregated fields from the table: "ticket" */
  ticket_aggregate: ticket_aggregate;
  /** fetch data from the table: "ticket" using primary key columns */
  ticket_by_pk?: Maybe<ticket>;
  /** fetch data from the table: "ticket_forms" */
  ticket_forms: Array<ticket_forms>;
  /** fetch aggregated fields from the table: "ticket_forms" */
  ticket_forms_aggregate: ticket_forms_aggregate;
  /** fetch data from the table: "ticket_forms" using primary key columns */
  ticket_forms_by_pk?: Maybe<ticket_forms>;
  /** fetch data from the table: "ticket_message_mentions" */
  ticket_message_mentions: Array<ticket_message_mentions>;
  /** fetch aggregated fields from the table: "ticket_message_mentions" */
  ticket_message_mentions_aggregate: ticket_message_mentions_aggregate;
  /** fetch data from the table: "ticket_message_mentions" using primary key columns */
  ticket_message_mentions_by_pk?: Maybe<ticket_message_mentions>;
  /** fetch data from the table: "ticket_messages" */
  ticket_messages: Array<ticket_messages>;
  /** fetch aggregated fields from the table: "ticket_messages" */
  ticket_messages_aggregate: ticket_messages_aggregate;
  /** fetch data from the table: "ticket_messages" using primary key columns */
  ticket_messages_by_pk?: Maybe<ticket_messages>;
  /** fetch data from the table: "ticket_share" */
  ticket_share: Array<ticket_share>;
  /** fetch aggregated fields from the table: "ticket_share" */
  ticket_share_aggregate: ticket_share_aggregate;
  /** fetch data from the table: "ticket_share" using primary key columns */
  ticket_share_by_pk?: Maybe<ticket_share>;
  /** An array relationship */
  ticket_tags: Array<ticket_tags>;
  /** An aggregate relationship */
  ticket_tags_aggregate: ticket_tags_aggregate;
  /** fetch data from the table: "ticket_tags" using primary key columns */
  ticket_tags_by_pk?: Maybe<ticket_tags>;
  /** fetch data from the table: "ticket_watch_list" */
  ticket_watch_list: Array<ticket_watch_list>;
  /** fetch aggregated fields from the table: "ticket_watch_list" */
  ticket_watch_list_aggregate: ticket_watch_list_aggregate;
  /** fetch data from the table: "ticket_watch_list" using primary key columns */
  ticket_watch_list_by_pk?: Maybe<ticket_watch_list>;
  /** fetch data from the table: "update_version" */
  update_version: Array<update_version>;
  /** fetch aggregated fields from the table: "update_version" */
  update_version_aggregate: update_version_aggregate;
  /** fetch data from the table: "update_version" using primary key columns */
  update_version_by_pk?: Maybe<update_version>;
  /** fetch data from the table: "user_roles" */
  user_roles: Array<user_roles>;
  /** fetch aggregated fields from the table: "user_roles" */
  user_roles_aggregate: user_roles_aggregate;
  /** fetch data from the table: "user_roles" using primary key columns */
  user_roles_by_pk?: Maybe<user_roles>;
  /** fetch data from the table: "users" */
  users: Array<users>;
  /** fetch aggregated fields from the table: "users" */
  users_aggregate: users_aggregate;
  /** fetch data from the table: "users" using primary key columns */
  users_by_pk?: Maybe<users>;
  /** fetch data from the table: "workflows_contact_reason" */
  workflows_contact_reason: Array<workflows_contact_reason>;
  /** fetch aggregated fields from the table: "workflows_contact_reason" */
  workflows_contact_reason_aggregate: workflows_contact_reason_aggregate;
  /** fetch data from the table: "workflows_contact_reason" using primary key columns */
  workflows_contact_reason_by_pk?: Maybe<workflows_contact_reason>;
  /** fetch data from the table: "working_hours" */
  working_hours: Array<working_hours>;
  /** fetch aggregated fields from the table: "working_hours" */
  working_hours_aggregate: working_hours_aggregate;
  /** fetch data from the table: "working_hours" using primary key columns */
  working_hours_by_pk?: Maybe<working_hours>;
  /** fetch data from the table: "working_hours_shift" */
  working_hours_shift: Array<working_hours_shift>;
  /** fetch aggregated fields from the table: "working_hours_shift" */
  working_hours_shift_aggregate: working_hours_shift_aggregate;
  /** fetch data from the table: "working_hours_shift" using primary key columns */
  working_hours_shift_by_pk?: Maybe<working_hours_shift>;
};


export type query_rootaccount_agentsArgs = {
  distinct_on?: InputMaybe<Array<account_agents_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_agents_order_by>>;
  where?: InputMaybe<account_agents_bool_exp>;
};


export type query_rootaccount_agents_aggregateArgs = {
  distinct_on?: InputMaybe<Array<account_agents_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_agents_order_by>>;
  where?: InputMaybe<account_agents_bool_exp>;
};


export type query_rootaccount_email_configArgs = {
  distinct_on?: InputMaybe<Array<account_email_config_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_email_config_order_by>>;
  where?: InputMaybe<account_email_config_bool_exp>;
};


export type query_rootaccount_email_config_aggregateArgs = {
  distinct_on?: InputMaybe<Array<account_email_config_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_email_config_order_by>>;
  where?: InputMaybe<account_email_config_bool_exp>;
};


export type query_rootaccount_email_config_by_pkArgs = {
  account_id: Scalars['Int'];
};


export type query_rootaccount_usersArgs = {
  distinct_on?: InputMaybe<Array<account_users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_users_order_by>>;
  where?: InputMaybe<account_users_bool_exp>;
};


export type query_rootaccount_users_aggregateArgs = {
  distinct_on?: InputMaybe<Array<account_users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_users_order_by>>;
  where?: InputMaybe<account_users_bool_exp>;
};


export type query_rootaccount_users_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootaccountsArgs = {
  distinct_on?: InputMaybe<Array<accounts_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<accounts_order_by>>;
  where?: InputMaybe<accounts_bool_exp>;
};


export type query_rootaccounts_aggregateArgs = {
  distinct_on?: InputMaybe<Array<accounts_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<accounts_order_by>>;
  where?: InputMaybe<accounts_bool_exp>;
};


export type query_rootaccounts_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootarticle_tagsArgs = {
  distinct_on?: InputMaybe<Array<article_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<article_tags_order_by>>;
  where?: InputMaybe<article_tags_bool_exp>;
};


export type query_rootarticle_tags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<article_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<article_tags_order_by>>;
  where?: InputMaybe<article_tags_bool_exp>;
};


export type query_rootarticle_tags_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootattachmentsArgs = {
  distinct_on?: InputMaybe<Array<attachments_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<attachments_order_by>>;
  where?: InputMaybe<attachments_bool_exp>;
};


export type query_rootattachments_aggregateArgs = {
  distinct_on?: InputMaybe<Array<attachments_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<attachments_order_by>>;
  where?: InputMaybe<attachments_bool_exp>;
};


export type query_rootattachments_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootautomation_flow_categoriesArgs = {
  distinct_on?: InputMaybe<Array<automation_flow_categories_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<automation_flow_categories_order_by>>;
  where?: InputMaybe<automation_flow_categories_bool_exp>;
};


export type query_rootautomation_flow_categories_aggregateArgs = {
  distinct_on?: InputMaybe<Array<automation_flow_categories_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<automation_flow_categories_order_by>>;
  where?: InputMaybe<automation_flow_categories_bool_exp>;
};


export type query_rootautomation_flow_categories_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootautomation_flowsArgs = {
  distinct_on?: InputMaybe<Array<automation_flows_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<automation_flows_order_by>>;
  where?: InputMaybe<automation_flows_bool_exp>;
};


export type query_rootautomation_flows_aggregateArgs = {
  distinct_on?: InputMaybe<Array<automation_flows_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<automation_flows_order_by>>;
  where?: InputMaybe<automation_flows_bool_exp>;
};


export type query_rootautomation_flows_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootautomation_rulesArgs = {
  distinct_on?: InputMaybe<Array<automation_rules_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<automation_rules_order_by>>;
  where?: InputMaybe<automation_rules_bool_exp>;
};


export type query_rootautomation_rules_aggregateArgs = {
  distinct_on?: InputMaybe<Array<automation_rules_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<automation_rules_order_by>>;
  where?: InputMaybe<automation_rules_bool_exp>;
};


export type query_rootautomation_rules_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootcall_eventsArgs = {
  distinct_on?: InputMaybe<Array<call_events_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<call_events_order_by>>;
  where?: InputMaybe<call_events_bool_exp>;
};


export type query_rootcall_events_aggregateArgs = {
  distinct_on?: InputMaybe<Array<call_events_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<call_events_order_by>>;
  where?: InputMaybe<call_events_bool_exp>;
};


export type query_rootcall_events_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootcallsArgs = {
  distinct_on?: InputMaybe<Array<calls_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<calls_order_by>>;
  where?: InputMaybe<calls_bool_exp>;
};


export type query_rootcalls_aggregateArgs = {
  distinct_on?: InputMaybe<Array<calls_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<calls_order_by>>;
  where?: InputMaybe<calls_bool_exp>;
};


export type query_rootcalls_by_pkArgs = {
  id: Scalars['uuid'];
};


export type query_rootcanned_responsesArgs = {
  distinct_on?: InputMaybe<Array<canned_responses_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<canned_responses_order_by>>;
  where?: InputMaybe<canned_responses_bool_exp>;
};


export type query_rootcanned_responses_aggregateArgs = {
  distinct_on?: InputMaybe<Array<canned_responses_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<canned_responses_order_by>>;
  where?: InputMaybe<canned_responses_bool_exp>;
};


export type query_rootcanned_responses_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootcanned_responses_categoryArgs = {
  distinct_on?: InputMaybe<Array<canned_responses_category_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<canned_responses_category_order_by>>;
  where?: InputMaybe<canned_responses_category_bool_exp>;
};


export type query_rootcanned_responses_category_aggregateArgs = {
  distinct_on?: InputMaybe<Array<canned_responses_category_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<canned_responses_category_order_by>>;
  where?: InputMaybe<canned_responses_category_bool_exp>;
};


export type query_rootcanned_responses_category_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootchannel_emailArgs = {
  distinct_on?: InputMaybe<Array<channel_email_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_email_order_by>>;
  where?: InputMaybe<channel_email_bool_exp>;
};


export type query_rootchannel_email_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_email_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_email_order_by>>;
  where?: InputMaybe<channel_email_bool_exp>;
};


export type query_rootchannel_email_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootchannel_google_businessArgs = {
  distinct_on?: InputMaybe<Array<channel_google_business_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_google_business_order_by>>;
  where?: InputMaybe<channel_google_business_bool_exp>;
};


export type query_rootchannel_google_business_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_google_business_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_google_business_order_by>>;
  where?: InputMaybe<channel_google_business_bool_exp>;
};


export type query_rootchannel_google_business_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootchannel_instagramArgs = {
  distinct_on?: InputMaybe<Array<channel_instagram_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_instagram_order_by>>;
  where?: InputMaybe<channel_instagram_bool_exp>;
};


export type query_rootchannel_instagram_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_instagram_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_instagram_order_by>>;
  where?: InputMaybe<channel_instagram_bool_exp>;
};


export type query_rootchannel_instagram_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootchannel_live_chatArgs = {
  distinct_on?: InputMaybe<Array<channel_live_chat_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_live_chat_order_by>>;
  where?: InputMaybe<channel_live_chat_bool_exp>;
};


export type query_rootchannel_live_chat_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_live_chat_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_live_chat_order_by>>;
  where?: InputMaybe<channel_live_chat_bool_exp>;
};


export type query_rootchannel_live_chat_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootchannel_twitter_profilesArgs = {
  distinct_on?: InputMaybe<Array<channel_twitter_profiles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_twitter_profiles_order_by>>;
  where?: InputMaybe<channel_twitter_profiles_bool_exp>;
};


export type query_rootchannel_twitter_profiles_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_twitter_profiles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_twitter_profiles_order_by>>;
  where?: InputMaybe<channel_twitter_profiles_bool_exp>;
};


export type query_rootchannel_twitter_profiles_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootchannel_twitter_streamArgs = {
  distinct_on?: InputMaybe<Array<channel_twitter_stream_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_twitter_stream_order_by>>;
  where?: InputMaybe<channel_twitter_stream_bool_exp>;
};


export type query_rootchannel_twitter_stream_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_twitter_stream_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_twitter_stream_order_by>>;
  where?: InputMaybe<channel_twitter_stream_bool_exp>;
};


export type query_rootchannel_twitter_stream_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootchannel_web_chatArgs = {
  distinct_on?: InputMaybe<Array<channel_web_chat_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_web_chat_order_by>>;
  where?: InputMaybe<channel_web_chat_bool_exp>;
};


export type query_rootchannel_web_chat_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_web_chat_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_web_chat_order_by>>;
  where?: InputMaybe<channel_web_chat_bool_exp>;
};


export type query_rootchannel_web_chat_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootchannel_whatsappArgs = {
  distinct_on?: InputMaybe<Array<channel_whatsapp_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_whatsapp_order_by>>;
  where?: InputMaybe<channel_whatsapp_bool_exp>;
};


export type query_rootchannel_whatsapp_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_whatsapp_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_whatsapp_order_by>>;
  where?: InputMaybe<channel_whatsapp_bool_exp>;
};


export type query_rootchannel_whatsapp_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootcontact_inboxesArgs = {
  distinct_on?: InputMaybe<Array<contact_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_inboxes_order_by>>;
  where?: InputMaybe<contact_inboxes_bool_exp>;
};


export type query_rootcontact_inboxes_aggregateArgs = {
  distinct_on?: InputMaybe<Array<contact_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_inboxes_order_by>>;
  where?: InputMaybe<contact_inboxes_bool_exp>;
};


export type query_rootcontact_inboxes_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootcontact_tagsArgs = {
  distinct_on?: InputMaybe<Array<contact_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_tags_order_by>>;
  where?: InputMaybe<contact_tags_bool_exp>;
};


export type query_rootcontact_tags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<contact_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_tags_order_by>>;
  where?: InputMaybe<contact_tags_bool_exp>;
};


export type query_rootcontact_tags_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootcontactsArgs = {
  distinct_on?: InputMaybe<Array<contacts_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contacts_order_by>>;
  where?: InputMaybe<contacts_bool_exp>;
};


export type query_rootcontacts_aggregateArgs = {
  distinct_on?: InputMaybe<Array<contacts_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contacts_order_by>>;
  where?: InputMaybe<contacts_bool_exp>;
};


export type query_rootcontacts_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootconversation_activity_logArgs = {
  distinct_on?: InputMaybe<Array<conversation_activity_log_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_activity_log_order_by>>;
  where?: InputMaybe<conversation_activity_log_bool_exp>;
};


export type query_rootconversation_activity_log_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversation_activity_log_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_activity_log_order_by>>;
  where?: InputMaybe<conversation_activity_log_bool_exp>;
};


export type query_rootconversation_activity_log_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootconversation_message_mentionsArgs = {
  distinct_on?: InputMaybe<Array<conversation_message_mentions_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_message_mentions_order_by>>;
  where?: InputMaybe<conversation_message_mentions_bool_exp>;
};


export type query_rootconversation_message_mentions_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversation_message_mentions_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_message_mentions_order_by>>;
  where?: InputMaybe<conversation_message_mentions_bool_exp>;
};


export type query_rootconversation_message_mentions_by_pkArgs = {
  message_id: Scalars['bigint'];
  user_id: Scalars['bigint'];
};


export type query_rootconversation_tagsArgs = {
  distinct_on?: InputMaybe<Array<conversation_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_tags_order_by>>;
  where?: InputMaybe<conversation_tags_bool_exp>;
};


export type query_rootconversation_tags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversation_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_tags_order_by>>;
  where?: InputMaybe<conversation_tags_bool_exp>;
};


export type query_rootconversation_tags_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootconversation_watch_listArgs = {
  distinct_on?: InputMaybe<Array<conversation_watch_list_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_watch_list_order_by>>;
  where?: InputMaybe<conversation_watch_list_bool_exp>;
};


export type query_rootconversation_watch_list_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversation_watch_list_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_watch_list_order_by>>;
  where?: InputMaybe<conversation_watch_list_bool_exp>;
};


export type query_rootconversation_watch_list_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootconversationsArgs = {
  distinct_on?: InputMaybe<Array<conversations_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversations_order_by>>;
  where?: InputMaybe<conversations_bool_exp>;
};


export type query_rootconversations_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversations_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversations_order_by>>;
  where?: InputMaybe<conversations_bool_exp>;
};


export type query_rootconversations_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootcsat_feedbackArgs = {
  distinct_on?: InputMaybe<Array<csat_feedback_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<csat_feedback_order_by>>;
  where?: InputMaybe<csat_feedback_bool_exp>;
};


export type query_rootcsat_feedback_aggregateArgs = {
  distinct_on?: InputMaybe<Array<csat_feedback_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<csat_feedback_order_by>>;
  where?: InputMaybe<csat_feedback_bool_exp>;
};


export type query_rootcsat_feedback_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootcustom_filtersArgs = {
  distinct_on?: InputMaybe<Array<custom_filters_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<custom_filters_order_by>>;
  where?: InputMaybe<custom_filters_bool_exp>;
};


export type query_rootcustom_filters_aggregateArgs = {
  distinct_on?: InputMaybe<Array<custom_filters_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<custom_filters_order_by>>;
  where?: InputMaybe<custom_filters_bool_exp>;
};


export type query_rootcustom_filters_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootexternal_contactArgs = {
  arg1?: InputMaybe<ExternalContactByIdInput>;
};


export type query_rootinboxesArgs = {
  distinct_on?: InputMaybe<Array<inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<inboxes_order_by>>;
  where?: InputMaybe<inboxes_bool_exp>;
};


export type query_rootinboxes_aggregateArgs = {
  distinct_on?: InputMaybe<Array<inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<inboxes_order_by>>;
  where?: InputMaybe<inboxes_bool_exp>;
};


export type query_rootinboxes_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootivr_menusArgs = {
  distinct_on?: InputMaybe<Array<ivr_menus_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ivr_menus_order_by>>;
  where?: InputMaybe<ivr_menus_bool_exp>;
};


export type query_rootivr_menus_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ivr_menus_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ivr_menus_order_by>>;
  where?: InputMaybe<ivr_menus_bool_exp>;
};


export type query_rootivr_menus_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootjira_ticketsArgs = {
  distinct_on?: InputMaybe<Array<jira_tickets_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<jira_tickets_order_by>>;
  where?: InputMaybe<jira_tickets_bool_exp>;
};


export type query_rootjira_tickets_aggregateArgs = {
  distinct_on?: InputMaybe<Array<jira_tickets_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<jira_tickets_order_by>>;
  where?: InputMaybe<jira_tickets_bool_exp>;
};


export type query_rootjira_tickets_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootknowladge_base_appearanceArgs = {
  distinct_on?: InputMaybe<Array<knowladge_base_appearance_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowladge_base_appearance_order_by>>;
  where?: InputMaybe<knowladge_base_appearance_bool_exp>;
};


export type query_rootknowladge_base_appearance_aggregateArgs = {
  distinct_on?: InputMaybe<Array<knowladge_base_appearance_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowladge_base_appearance_order_by>>;
  where?: InputMaybe<knowladge_base_appearance_bool_exp>;
};


export type query_rootknowladge_base_appearance_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootknowledge_base_articlesArgs = {
  distinct_on?: InputMaybe<Array<knowledge_base_articles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowledge_base_articles_order_by>>;
  where?: InputMaybe<knowledge_base_articles_bool_exp>;
};


export type query_rootknowledge_base_articles_aggregateArgs = {
  distinct_on?: InputMaybe<Array<knowledge_base_articles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowledge_base_articles_order_by>>;
  where?: InputMaybe<knowledge_base_articles_bool_exp>;
};


export type query_rootknowledge_base_articles_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootknowledge_base_categoriesArgs = {
  distinct_on?: InputMaybe<Array<knowledge_base_categories_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowledge_base_categories_order_by>>;
  where?: InputMaybe<knowledge_base_categories_bool_exp>;
};


export type query_rootknowledge_base_categories_aggregateArgs = {
  distinct_on?: InputMaybe<Array<knowledge_base_categories_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowledge_base_categories_order_by>>;
  where?: InputMaybe<knowledge_base_categories_bool_exp>;
};


export type query_rootknowledge_base_categories_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootlog_agent_statusArgs = {
  distinct_on?: InputMaybe<Array<log_agent_status_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<log_agent_status_order_by>>;
  where?: InputMaybe<log_agent_status_bool_exp>;
};


export type query_rootlog_agent_status_aggregateArgs = {
  distinct_on?: InputMaybe<Array<log_agent_status_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<log_agent_status_order_by>>;
  where?: InputMaybe<log_agent_status_bool_exp>;
};


export type query_rootlog_agent_status_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootmessagesArgs = {
  distinct_on?: InputMaybe<Array<messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<messages_order_by>>;
  where?: InputMaybe<messages_bool_exp>;
};


export type query_rootmessages_aggregateArgs = {
  distinct_on?: InputMaybe<Array<messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<messages_order_by>>;
  where?: InputMaybe<messages_bool_exp>;
};


export type query_rootmessages_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootmockarooApiArgs = {
  input?: InputMaybe<MockarooInput>;
};


export type query_rootsla_policiesArgs = {
  distinct_on?: InputMaybe<Array<sla_policies_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<sla_policies_order_by>>;
  where?: InputMaybe<sla_policies_bool_exp>;
};


export type query_rootsla_policies_aggregateArgs = {
  distinct_on?: InputMaybe<Array<sla_policies_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<sla_policies_order_by>>;
  where?: InputMaybe<sla_policies_bool_exp>;
};


export type query_rootsla_policies_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootsla_target_policiesArgs = {
  distinct_on?: InputMaybe<Array<sla_target_policies_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<sla_target_policies_order_by>>;
  where?: InputMaybe<sla_target_policies_bool_exp>;
};


export type query_rootsla_target_policies_aggregateArgs = {
  distinct_on?: InputMaybe<Array<sla_target_policies_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<sla_target_policies_order_by>>;
  where?: InputMaybe<sla_target_policies_bool_exp>;
};


export type query_rootsla_target_policies_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_roottagsArgs = {
  distinct_on?: InputMaybe<Array<tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<tags_order_by>>;
  where?: InputMaybe<tags_bool_exp>;
};


export type query_roottags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<tags_order_by>>;
  where?: InputMaybe<tags_bool_exp>;
};


export type query_roottags_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootteam_inboxesArgs = {
  distinct_on?: InputMaybe<Array<team_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_inboxes_order_by>>;
  where?: InputMaybe<team_inboxes_bool_exp>;
};


export type query_rootteam_inboxes_aggregateArgs = {
  distinct_on?: InputMaybe<Array<team_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_inboxes_order_by>>;
  where?: InputMaybe<team_inboxes_bool_exp>;
};


export type query_rootteam_inboxes_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootteam_membersArgs = {
  distinct_on?: InputMaybe<Array<team_members_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_members_order_by>>;
  where?: InputMaybe<team_members_bool_exp>;
};


export type query_rootteam_members_aggregateArgs = {
  distinct_on?: InputMaybe<Array<team_members_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_members_order_by>>;
  where?: InputMaybe<team_members_bool_exp>;
};


export type query_rootteam_members_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootteamsArgs = {
  distinct_on?: InputMaybe<Array<teams_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<teams_order_by>>;
  where?: InputMaybe<teams_bool_exp>;
};


export type query_rootteams_aggregateArgs = {
  distinct_on?: InputMaybe<Array<teams_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<teams_order_by>>;
  where?: InputMaybe<teams_bool_exp>;
};


export type query_rootteams_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_roottemplate_smsArgs = {
  distinct_on?: InputMaybe<Array<template_sms_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<template_sms_order_by>>;
  where?: InputMaybe<template_sms_bool_exp>;
};


export type query_roottemplate_sms_aggregateArgs = {
  distinct_on?: InputMaybe<Array<template_sms_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<template_sms_order_by>>;
  where?: InputMaybe<template_sms_bool_exp>;
};


export type query_roottemplate_sms_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootticketArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};


export type query_rootticket_activity_logArgs = {
  distinct_on?: InputMaybe<Array<ticket_activity_log_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_activity_log_order_by>>;
  where?: InputMaybe<ticket_activity_log_bool_exp>;
};


export type query_rootticket_activity_log_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_activity_log_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_activity_log_order_by>>;
  where?: InputMaybe<ticket_activity_log_bool_exp>;
};


export type query_rootticket_activity_log_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootticket_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};


export type query_rootticket_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootticket_formsArgs = {
  distinct_on?: InputMaybe<Array<ticket_forms_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_forms_order_by>>;
  where?: InputMaybe<ticket_forms_bool_exp>;
};


export type query_rootticket_forms_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_forms_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_forms_order_by>>;
  where?: InputMaybe<ticket_forms_bool_exp>;
};


export type query_rootticket_forms_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootticket_message_mentionsArgs = {
  distinct_on?: InputMaybe<Array<ticket_message_mentions_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_message_mentions_order_by>>;
  where?: InputMaybe<ticket_message_mentions_bool_exp>;
};


export type query_rootticket_message_mentions_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_message_mentions_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_message_mentions_order_by>>;
  where?: InputMaybe<ticket_message_mentions_bool_exp>;
};


export type query_rootticket_message_mentions_by_pkArgs = {
  message_id: Scalars['bigint'];
  user_id: Scalars['bigint'];
};


export type query_rootticket_messagesArgs = {
  distinct_on?: InputMaybe<Array<ticket_messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_messages_order_by>>;
  where?: InputMaybe<ticket_messages_bool_exp>;
};


export type query_rootticket_messages_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_messages_order_by>>;
  where?: InputMaybe<ticket_messages_bool_exp>;
};


export type query_rootticket_messages_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootticket_shareArgs = {
  distinct_on?: InputMaybe<Array<ticket_share_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_share_order_by>>;
  where?: InputMaybe<ticket_share_bool_exp>;
};


export type query_rootticket_share_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_share_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_share_order_by>>;
  where?: InputMaybe<ticket_share_bool_exp>;
};


export type query_rootticket_share_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootticket_tagsArgs = {
  distinct_on?: InputMaybe<Array<ticket_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_tags_order_by>>;
  where?: InputMaybe<ticket_tags_bool_exp>;
};


export type query_rootticket_tags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_tags_order_by>>;
  where?: InputMaybe<ticket_tags_bool_exp>;
};


export type query_rootticket_tags_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootticket_watch_listArgs = {
  distinct_on?: InputMaybe<Array<ticket_watch_list_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_watch_list_order_by>>;
  where?: InputMaybe<ticket_watch_list_bool_exp>;
};


export type query_rootticket_watch_list_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_watch_list_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_watch_list_order_by>>;
  where?: InputMaybe<ticket_watch_list_bool_exp>;
};


export type query_rootticket_watch_list_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootupdate_versionArgs = {
  distinct_on?: InputMaybe<Array<update_version_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<update_version_order_by>>;
  where?: InputMaybe<update_version_bool_exp>;
};


export type query_rootupdate_version_aggregateArgs = {
  distinct_on?: InputMaybe<Array<update_version_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<update_version_order_by>>;
  where?: InputMaybe<update_version_bool_exp>;
};


export type query_rootupdate_version_by_pkArgs = {
  version: Scalars['String'];
};


export type query_rootuser_rolesArgs = {
  distinct_on?: InputMaybe<Array<user_roles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<user_roles_order_by>>;
  where?: InputMaybe<user_roles_bool_exp>;
};


export type query_rootuser_roles_aggregateArgs = {
  distinct_on?: InputMaybe<Array<user_roles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<user_roles_order_by>>;
  where?: InputMaybe<user_roles_bool_exp>;
};


export type query_rootuser_roles_by_pkArgs = {
  id: Scalars['Int'];
};


export type query_rootusersArgs = {
  distinct_on?: InputMaybe<Array<users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<users_order_by>>;
  where?: InputMaybe<users_bool_exp>;
};


export type query_rootusers_aggregateArgs = {
  distinct_on?: InputMaybe<Array<users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<users_order_by>>;
  where?: InputMaybe<users_bool_exp>;
};


export type query_rootusers_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootworkflows_contact_reasonArgs = {
  distinct_on?: InputMaybe<Array<workflows_contact_reason_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<workflows_contact_reason_order_by>>;
  where?: InputMaybe<workflows_contact_reason_bool_exp>;
};


export type query_rootworkflows_contact_reason_aggregateArgs = {
  distinct_on?: InputMaybe<Array<workflows_contact_reason_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<workflows_contact_reason_order_by>>;
  where?: InputMaybe<workflows_contact_reason_bool_exp>;
};


export type query_rootworkflows_contact_reason_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootworking_hoursArgs = {
  distinct_on?: InputMaybe<Array<working_hours_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<working_hours_order_by>>;
  where?: InputMaybe<working_hours_bool_exp>;
};


export type query_rootworking_hours_aggregateArgs = {
  distinct_on?: InputMaybe<Array<working_hours_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<working_hours_order_by>>;
  where?: InputMaybe<working_hours_bool_exp>;
};


export type query_rootworking_hours_by_pkArgs = {
  id: Scalars['bigint'];
};


export type query_rootworking_hours_shiftArgs = {
  distinct_on?: InputMaybe<Array<working_hours_shift_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<working_hours_shift_order_by>>;
  where?: InputMaybe<working_hours_shift_bool_exp>;
};


export type query_rootworking_hours_shift_aggregateArgs = {
  distinct_on?: InputMaybe<Array<working_hours_shift_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<working_hours_shift_order_by>>;
  where?: InputMaybe<working_hours_shift_bool_exp>;
};


export type query_rootworking_hours_shift_by_pkArgs = {
  id: Scalars['bigint'];
};

/** columns and relationships of "sla_policies" */
export type sla_policies = {
  __typename?: 'sla_policies';
  account_id?: Maybe<Scalars['bigint']>;
  calculation: Scalars['String'];
  created_at: Scalars['timestamptz'];
  description: Scalars['String'];
  id: Scalars['bigint'];
  name: Scalars['String'];
  /** An array relationship */
  sla_target_policies: Array<sla_target_policies>;
  /** An aggregate relationship */
  sla_target_policies_aggregate: sla_target_policies_aggregate;
  updated_at: Scalars['timestamptz'];
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "sla_policies" */
export type sla_policiessla_target_policiesArgs = {
  distinct_on?: InputMaybe<Array<sla_target_policies_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<sla_target_policies_order_by>>;
  where?: InputMaybe<sla_target_policies_bool_exp>;
};


/** columns and relationships of "sla_policies" */
export type sla_policiessla_target_policies_aggregateArgs = {
  distinct_on?: InputMaybe<Array<sla_target_policies_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<sla_target_policies_order_by>>;
  where?: InputMaybe<sla_target_policies_bool_exp>;
};

/** aggregated selection of "sla_policies" */
export type sla_policies_aggregate = {
  __typename?: 'sla_policies_aggregate';
  aggregate?: Maybe<sla_policies_aggregate_fields>;
  nodes: Array<sla_policies>;
};

/** aggregate fields of "sla_policies" */
export type sla_policies_aggregate_fields = {
  __typename?: 'sla_policies_aggregate_fields';
  avg?: Maybe<sla_policies_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<sla_policies_max_fields>;
  min?: Maybe<sla_policies_min_fields>;
  stddev?: Maybe<sla_policies_stddev_fields>;
  stddev_pop?: Maybe<sla_policies_stddev_pop_fields>;
  stddev_samp?: Maybe<sla_policies_stddev_samp_fields>;
  sum?: Maybe<sla_policies_sum_fields>;
  var_pop?: Maybe<sla_policies_var_pop_fields>;
  var_samp?: Maybe<sla_policies_var_samp_fields>;
  variance?: Maybe<sla_policies_variance_fields>;
};


/** aggregate fields of "sla_policies" */
export type sla_policies_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<sla_policies_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type sla_policies_avg_fields = {
  __typename?: 'sla_policies_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sla_policies". All fields are combined with a logical 'AND'. */
export type sla_policies_bool_exp = {
  _and?: InputMaybe<Array<sla_policies_bool_exp>>;
  _not?: InputMaybe<sla_policies_bool_exp>;
  _or?: InputMaybe<Array<sla_policies_bool_exp>>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  calculation?: InputMaybe<String_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  description?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  sla_target_policies?: InputMaybe<sla_target_policies_bool_exp>;
  sla_target_policies_aggregate?: InputMaybe<sla_target_policies_aggregate_bool_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  user_id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "sla_policies" */
export enum sla_policies_constraint {
  /** unique or primary key constraint on columns "id" */
  sla_policies_pkey = 'sla_policies_pkey'
}

/** input type for incrementing numeric columns in table "sla_policies" */
export type sla_policies_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "sla_policies" */
export type sla_policies_insert_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  calculation?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Scalars['String']>;
  sla_target_policies?: InputMaybe<sla_target_policies_arr_rel_insert_input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type sla_policies_max_fields = {
  __typename?: 'sla_policies_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  calculation?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type sla_policies_min_fields = {
  __typename?: 'sla_policies_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  calculation?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "sla_policies" */
export type sla_policies_mutation_response = {
  __typename?: 'sla_policies_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<sla_policies>;
};

/** input type for inserting object relation for remote table "sla_policies" */
export type sla_policies_obj_rel_insert_input = {
  data: sla_policies_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<sla_policies_on_conflict>;
};

/** on_conflict condition type for table "sla_policies" */
export type sla_policies_on_conflict = {
  constraint: sla_policies_constraint;
  update_columns?: Array<sla_policies_update_column>;
  where?: InputMaybe<sla_policies_bool_exp>;
};

/** Ordering options when selecting data from "sla_policies". */
export type sla_policies_order_by = {
  account_id?: InputMaybe<order_by>;
  calculation?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  description?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  sla_target_policies_aggregate?: InputMaybe<sla_target_policies_aggregate_order_by>;
  updated_at?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: sla_policies */
export type sla_policies_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "sla_policies" */
export enum sla_policies_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  calculation = 'calculation',
  /** column name */
  created_at = 'created_at',
  /** column name */
  description = 'description',
  /** column name */
  id = 'id',
  /** column name */
  name = 'name',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

/** input type for updating data in table "sla_policies" */
export type sla_policies_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  calculation?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type sla_policies_stddev_fields = {
  __typename?: 'sla_policies_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type sla_policies_stddev_pop_fields = {
  __typename?: 'sla_policies_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type sla_policies_stddev_samp_fields = {
  __typename?: 'sla_policies_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "sla_policies" */
export type sla_policies_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: sla_policies_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type sla_policies_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  calculation?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type sla_policies_sum_fields = {
  __typename?: 'sla_policies_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "sla_policies" */
export enum sla_policies_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  calculation = 'calculation',
  /** column name */
  created_at = 'created_at',
  /** column name */
  description = 'description',
  /** column name */
  id = 'id',
  /** column name */
  name = 'name',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

export type sla_policies_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<sla_policies_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<sla_policies_set_input>;
  /** filter the rows which have to be updated */
  where: sla_policies_bool_exp;
};

/** aggregate var_pop on columns */
export type sla_policies_var_pop_fields = {
  __typename?: 'sla_policies_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type sla_policies_var_samp_fields = {
  __typename?: 'sla_policies_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type sla_policies_variance_fields = {
  __typename?: 'sla_policies_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sla_target_policies" */
export type sla_target_policies = {
  __typename?: 'sla_target_policies';
  assigned_time: Scalars['String'];
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  inbox_name: Scalars['String'];
  /** An object relationship */
  sla_policy: sla_policies;
  sla_policy_id: Scalars['bigint'];
  targeted: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sla_target_policies" */
export type sla_target_policies_aggregate = {
  __typename?: 'sla_target_policies_aggregate';
  aggregate?: Maybe<sla_target_policies_aggregate_fields>;
  nodes: Array<sla_target_policies>;
};

export type sla_target_policies_aggregate_bool_exp = {
  count?: InputMaybe<sla_target_policies_aggregate_bool_exp_count>;
};

export type sla_target_policies_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<sla_target_policies_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<sla_target_policies_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "sla_target_policies" */
export type sla_target_policies_aggregate_fields = {
  __typename?: 'sla_target_policies_aggregate_fields';
  avg?: Maybe<sla_target_policies_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<sla_target_policies_max_fields>;
  min?: Maybe<sla_target_policies_min_fields>;
  stddev?: Maybe<sla_target_policies_stddev_fields>;
  stddev_pop?: Maybe<sla_target_policies_stddev_pop_fields>;
  stddev_samp?: Maybe<sla_target_policies_stddev_samp_fields>;
  sum?: Maybe<sla_target_policies_sum_fields>;
  var_pop?: Maybe<sla_target_policies_var_pop_fields>;
  var_samp?: Maybe<sla_target_policies_var_samp_fields>;
  variance?: Maybe<sla_target_policies_variance_fields>;
};


/** aggregate fields of "sla_target_policies" */
export type sla_target_policies_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<sla_target_policies_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sla_target_policies" */
export type sla_target_policies_aggregate_order_by = {
  avg?: InputMaybe<sla_target_policies_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<sla_target_policies_max_order_by>;
  min?: InputMaybe<sla_target_policies_min_order_by>;
  stddev?: InputMaybe<sla_target_policies_stddev_order_by>;
  stddev_pop?: InputMaybe<sla_target_policies_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<sla_target_policies_stddev_samp_order_by>;
  sum?: InputMaybe<sla_target_policies_sum_order_by>;
  var_pop?: InputMaybe<sla_target_policies_var_pop_order_by>;
  var_samp?: InputMaybe<sla_target_policies_var_samp_order_by>;
  variance?: InputMaybe<sla_target_policies_variance_order_by>;
};

/** input type for inserting array relation for remote table "sla_target_policies" */
export type sla_target_policies_arr_rel_insert_input = {
  data: Array<sla_target_policies_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<sla_target_policies_on_conflict>;
};

/** aggregate avg on columns */
export type sla_target_policies_avg_fields = {
  __typename?: 'sla_target_policies_avg_fields';
  id?: Maybe<Scalars['Float']>;
  sla_policy_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sla_target_policies" */
export type sla_target_policies_avg_order_by = {
  id?: InputMaybe<order_by>;
  sla_policy_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "sla_target_policies". All fields are combined with a logical 'AND'. */
export type sla_target_policies_bool_exp = {
  _and?: InputMaybe<Array<sla_target_policies_bool_exp>>;
  _not?: InputMaybe<sla_target_policies_bool_exp>;
  _or?: InputMaybe<Array<sla_target_policies_bool_exp>>;
  assigned_time?: InputMaybe<String_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  inbox_name?: InputMaybe<String_comparison_exp>;
  sla_policy?: InputMaybe<sla_policies_bool_exp>;
  sla_policy_id?: InputMaybe<bigint_comparison_exp>;
  targeted?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "sla_target_policies" */
export enum sla_target_policies_constraint {
  /** unique or primary key constraint on columns "id" */
  sla_target_policies_pkey = 'sla_target_policies_pkey'
}

/** input type for incrementing numeric columns in table "sla_target_policies" */
export type sla_target_policies_inc_input = {
  id?: InputMaybe<Scalars['bigint']>;
  sla_policy_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "sla_target_policies" */
export type sla_target_policies_insert_input = {
  assigned_time?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox_name?: InputMaybe<Scalars['String']>;
  sla_policy?: InputMaybe<sla_policies_obj_rel_insert_input>;
  sla_policy_id?: InputMaybe<Scalars['bigint']>;
  targeted?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type sla_target_policies_max_fields = {
  __typename?: 'sla_target_policies_max_fields';
  assigned_time?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  inbox_name?: Maybe<Scalars['String']>;
  sla_policy_id?: Maybe<Scalars['bigint']>;
  targeted?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sla_target_policies" */
export type sla_target_policies_max_order_by = {
  assigned_time?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_name?: InputMaybe<order_by>;
  sla_policy_id?: InputMaybe<order_by>;
  targeted?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type sla_target_policies_min_fields = {
  __typename?: 'sla_target_policies_min_fields';
  assigned_time?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  inbox_name?: Maybe<Scalars['String']>;
  sla_policy_id?: Maybe<Scalars['bigint']>;
  targeted?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sla_target_policies" */
export type sla_target_policies_min_order_by = {
  assigned_time?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_name?: InputMaybe<order_by>;
  sla_policy_id?: InputMaybe<order_by>;
  targeted?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** response of any mutation on the table "sla_target_policies" */
export type sla_target_policies_mutation_response = {
  __typename?: 'sla_target_policies_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<sla_target_policies>;
};

/** on_conflict condition type for table "sla_target_policies" */
export type sla_target_policies_on_conflict = {
  constraint: sla_target_policies_constraint;
  update_columns?: Array<sla_target_policies_update_column>;
  where?: InputMaybe<sla_target_policies_bool_exp>;
};

/** Ordering options when selecting data from "sla_target_policies". */
export type sla_target_policies_order_by = {
  assigned_time?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_name?: InputMaybe<order_by>;
  sla_policy?: InputMaybe<sla_policies_order_by>;
  sla_policy_id?: InputMaybe<order_by>;
  targeted?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: sla_target_policies */
export type sla_target_policies_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "sla_target_policies" */
export enum sla_target_policies_select_column {
  /** column name */
  assigned_time = 'assigned_time',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  inbox_name = 'inbox_name',
  /** column name */
  sla_policy_id = 'sla_policy_id',
  /** column name */
  targeted = 'targeted',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "sla_target_policies" */
export type sla_target_policies_set_input = {
  assigned_time?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox_name?: InputMaybe<Scalars['String']>;
  sla_policy_id?: InputMaybe<Scalars['bigint']>;
  targeted?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type sla_target_policies_stddev_fields = {
  __typename?: 'sla_target_policies_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  sla_policy_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sla_target_policies" */
export type sla_target_policies_stddev_order_by = {
  id?: InputMaybe<order_by>;
  sla_policy_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type sla_target_policies_stddev_pop_fields = {
  __typename?: 'sla_target_policies_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  sla_policy_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sla_target_policies" */
export type sla_target_policies_stddev_pop_order_by = {
  id?: InputMaybe<order_by>;
  sla_policy_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type sla_target_policies_stddev_samp_fields = {
  __typename?: 'sla_target_policies_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  sla_policy_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sla_target_policies" */
export type sla_target_policies_stddev_samp_order_by = {
  id?: InputMaybe<order_by>;
  sla_policy_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "sla_target_policies" */
export type sla_target_policies_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: sla_target_policies_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type sla_target_policies_stream_cursor_value_input = {
  assigned_time?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox_name?: InputMaybe<Scalars['String']>;
  sla_policy_id?: InputMaybe<Scalars['bigint']>;
  targeted?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type sla_target_policies_sum_fields = {
  __typename?: 'sla_target_policies_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  sla_policy_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "sla_target_policies" */
export type sla_target_policies_sum_order_by = {
  id?: InputMaybe<order_by>;
  sla_policy_id?: InputMaybe<order_by>;
};

/** update columns of table "sla_target_policies" */
export enum sla_target_policies_update_column {
  /** column name */
  assigned_time = 'assigned_time',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  inbox_name = 'inbox_name',
  /** column name */
  sla_policy_id = 'sla_policy_id',
  /** column name */
  targeted = 'targeted',
  /** column name */
  updated_at = 'updated_at'
}

export type sla_target_policies_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<sla_target_policies_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<sla_target_policies_set_input>;
  /** filter the rows which have to be updated */
  where: sla_target_policies_bool_exp;
};

/** aggregate var_pop on columns */
export type sla_target_policies_var_pop_fields = {
  __typename?: 'sla_target_policies_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  sla_policy_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sla_target_policies" */
export type sla_target_policies_var_pop_order_by = {
  id?: InputMaybe<order_by>;
  sla_policy_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type sla_target_policies_var_samp_fields = {
  __typename?: 'sla_target_policies_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  sla_policy_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sla_target_policies" */
export type sla_target_policies_var_samp_order_by = {
  id?: InputMaybe<order_by>;
  sla_policy_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type sla_target_policies_variance_fields = {
  __typename?: 'sla_target_policies_variance_fields';
  id?: Maybe<Scalars['Float']>;
  sla_policy_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sla_target_policies" */
export type sla_target_policies_variance_order_by = {
  id?: InputMaybe<order_by>;
  sla_policy_id?: InputMaybe<order_by>;
};

export type subscription_root = {
  __typename?: 'subscription_root';
  /** fetch data from the table: "account_agents" */
  account_agents: Array<account_agents>;
  /** fetch aggregated fields from the table: "account_agents" */
  account_agents_aggregate: account_agents_aggregate;
  /** fetch data from the table in a streaming manner: "account_agents" */
  account_agents_stream: Array<account_agents>;
  /** fetch data from the table: "account_email_config" */
  account_email_config: Array<account_email_config>;
  /** fetch aggregated fields from the table: "account_email_config" */
  account_email_config_aggregate: account_email_config_aggregate;
  /** fetch data from the table: "account_email_config" using primary key columns */
  account_email_config_by_pk?: Maybe<account_email_config>;
  /** fetch data from the table in a streaming manner: "account_email_config" */
  account_email_config_stream: Array<account_email_config>;
  /** An array relationship */
  account_users: Array<account_users>;
  /** An aggregate relationship */
  account_users_aggregate: account_users_aggregate;
  /** fetch data from the table: "account_users" using primary key columns */
  account_users_by_pk?: Maybe<account_users>;
  /** fetch data from the table in a streaming manner: "account_users" */
  account_users_stream: Array<account_users>;
  /** fetch data from the table: "accounts" */
  accounts: Array<accounts>;
  /** fetch aggregated fields from the table: "accounts" */
  accounts_aggregate: accounts_aggregate;
  /** fetch data from the table: "accounts" using primary key columns */
  accounts_by_pk?: Maybe<accounts>;
  /** fetch data from the table in a streaming manner: "accounts" */
  accounts_stream: Array<accounts>;
  /** fetch data from the table: "article_tags" */
  article_tags: Array<article_tags>;
  /** fetch aggregated fields from the table: "article_tags" */
  article_tags_aggregate: article_tags_aggregate;
  /** fetch data from the table: "article_tags" using primary key columns */
  article_tags_by_pk?: Maybe<article_tags>;
  /** fetch data from the table in a streaming manner: "article_tags" */
  article_tags_stream: Array<article_tags>;
  /** An array relationship */
  attachments: Array<attachments>;
  /** An aggregate relationship */
  attachments_aggregate: attachments_aggregate;
  /** fetch data from the table: "attachments" using primary key columns */
  attachments_by_pk?: Maybe<attachments>;
  /** fetch data from the table in a streaming manner: "attachments" */
  attachments_stream: Array<attachments>;
  /** fetch data from the table: "automation_flow_categories" */
  automation_flow_categories: Array<automation_flow_categories>;
  /** fetch aggregated fields from the table: "automation_flow_categories" */
  automation_flow_categories_aggregate: automation_flow_categories_aggregate;
  /** fetch data from the table: "automation_flow_categories" using primary key columns */
  automation_flow_categories_by_pk?: Maybe<automation_flow_categories>;
  /** fetch data from the table in a streaming manner: "automation_flow_categories" */
  automation_flow_categories_stream: Array<automation_flow_categories>;
  /** fetch data from the table: "automation_flows" */
  automation_flows: Array<automation_flows>;
  /** fetch aggregated fields from the table: "automation_flows" */
  automation_flows_aggregate: automation_flows_aggregate;
  /** fetch data from the table: "automation_flows" using primary key columns */
  automation_flows_by_pk?: Maybe<automation_flows>;
  /** fetch data from the table in a streaming manner: "automation_flows" */
  automation_flows_stream: Array<automation_flows>;
  /** fetch data from the table: "automation_rules" */
  automation_rules: Array<automation_rules>;
  /** fetch aggregated fields from the table: "automation_rules" */
  automation_rules_aggregate: automation_rules_aggregate;
  /** fetch data from the table: "automation_rules" using primary key columns */
  automation_rules_by_pk?: Maybe<automation_rules>;
  /** fetch data from the table in a streaming manner: "automation_rules" */
  automation_rules_stream: Array<automation_rules>;
  /** fetch data from the table: "call_events" */
  call_events: Array<call_events>;
  /** fetch aggregated fields from the table: "call_events" */
  call_events_aggregate: call_events_aggregate;
  /** fetch data from the table: "call_events" using primary key columns */
  call_events_by_pk?: Maybe<call_events>;
  /** fetch data from the table in a streaming manner: "call_events" */
  call_events_stream: Array<call_events>;
  /** fetch data from the table: "calls" */
  calls: Array<calls>;
  /** fetch aggregated fields from the table: "calls" */
  calls_aggregate: calls_aggregate;
  /** fetch data from the table: "calls" using primary key columns */
  calls_by_pk?: Maybe<calls>;
  /** fetch data from the table in a streaming manner: "calls" */
  calls_stream: Array<calls>;
  /** An array relationship */
  canned_responses: Array<canned_responses>;
  /** An aggregate relationship */
  canned_responses_aggregate: canned_responses_aggregate;
  /** fetch data from the table: "canned_responses" using primary key columns */
  canned_responses_by_pk?: Maybe<canned_responses>;
  /** fetch data from the table: "canned_responses_category" */
  canned_responses_category: Array<canned_responses_category>;
  /** fetch aggregated fields from the table: "canned_responses_category" */
  canned_responses_category_aggregate: canned_responses_category_aggregate;
  /** fetch data from the table: "canned_responses_category" using primary key columns */
  canned_responses_category_by_pk?: Maybe<canned_responses_category>;
  /** fetch data from the table in a streaming manner: "canned_responses_category" */
  canned_responses_category_stream: Array<canned_responses_category>;
  /** fetch data from the table in a streaming manner: "canned_responses" */
  canned_responses_stream: Array<canned_responses>;
  /** fetch data from the table: "channel_email" */
  channel_email: Array<channel_email>;
  /** fetch aggregated fields from the table: "channel_email" */
  channel_email_aggregate: channel_email_aggregate;
  /** fetch data from the table: "channel_email" using primary key columns */
  channel_email_by_pk?: Maybe<channel_email>;
  /** fetch data from the table in a streaming manner: "channel_email" */
  channel_email_stream: Array<channel_email>;
  /** fetch data from the table: "channel_google_business" */
  channel_google_business: Array<channel_google_business>;
  /** fetch aggregated fields from the table: "channel_google_business" */
  channel_google_business_aggregate: channel_google_business_aggregate;
  /** fetch data from the table: "channel_google_business" using primary key columns */
  channel_google_business_by_pk?: Maybe<channel_google_business>;
  /** fetch data from the table in a streaming manner: "channel_google_business" */
  channel_google_business_stream: Array<channel_google_business>;
  /** fetch data from the table: "channel_instagram" */
  channel_instagram: Array<channel_instagram>;
  /** fetch aggregated fields from the table: "channel_instagram" */
  channel_instagram_aggregate: channel_instagram_aggregate;
  /** fetch data from the table: "channel_instagram" using primary key columns */
  channel_instagram_by_pk?: Maybe<channel_instagram>;
  /** fetch data from the table in a streaming manner: "channel_instagram" */
  channel_instagram_stream: Array<channel_instagram>;
  /** fetch data from the table: "channel_live_chat" */
  channel_live_chat: Array<channel_live_chat>;
  /** fetch aggregated fields from the table: "channel_live_chat" */
  channel_live_chat_aggregate: channel_live_chat_aggregate;
  /** fetch data from the table: "channel_live_chat" using primary key columns */
  channel_live_chat_by_pk?: Maybe<channel_live_chat>;
  /** fetch data from the table in a streaming manner: "channel_live_chat" */
  channel_live_chat_stream: Array<channel_live_chat>;
  /** fetch data from the table: "channel_twitter_profiles" */
  channel_twitter_profiles: Array<channel_twitter_profiles>;
  /** fetch aggregated fields from the table: "channel_twitter_profiles" */
  channel_twitter_profiles_aggregate: channel_twitter_profiles_aggregate;
  /** fetch data from the table: "channel_twitter_profiles" using primary key columns */
  channel_twitter_profiles_by_pk?: Maybe<channel_twitter_profiles>;
  /** fetch data from the table in a streaming manner: "channel_twitter_profiles" */
  channel_twitter_profiles_stream: Array<channel_twitter_profiles>;
  /** fetch data from the table: "channel_twitter_stream" */
  channel_twitter_stream: Array<channel_twitter_stream>;
  /** fetch aggregated fields from the table: "channel_twitter_stream" */
  channel_twitter_stream_aggregate: channel_twitter_stream_aggregate;
  /** fetch data from the table: "channel_twitter_stream" using primary key columns */
  channel_twitter_stream_by_pk?: Maybe<channel_twitter_stream>;
  /** fetch data from the table in a streaming manner: "channel_twitter_stream" */
  channel_twitter_stream_stream: Array<channel_twitter_stream>;
  /** fetch data from the table: "channel_web_chat" */
  channel_web_chat: Array<channel_web_chat>;
  /** fetch aggregated fields from the table: "channel_web_chat" */
  channel_web_chat_aggregate: channel_web_chat_aggregate;
  /** fetch data from the table: "channel_web_chat" using primary key columns */
  channel_web_chat_by_pk?: Maybe<channel_web_chat>;
  /** fetch data from the table in a streaming manner: "channel_web_chat" */
  channel_web_chat_stream: Array<channel_web_chat>;
  /** fetch data from the table: "channel_whatsapp" */
  channel_whatsapp: Array<channel_whatsapp>;
  /** fetch aggregated fields from the table: "channel_whatsapp" */
  channel_whatsapp_aggregate: channel_whatsapp_aggregate;
  /** fetch data from the table: "channel_whatsapp" using primary key columns */
  channel_whatsapp_by_pk?: Maybe<channel_whatsapp>;
  /** fetch data from the table in a streaming manner: "channel_whatsapp" */
  channel_whatsapp_stream: Array<channel_whatsapp>;
  /** An array relationship */
  contact_inboxes: Array<contact_inboxes>;
  /** An aggregate relationship */
  contact_inboxes_aggregate: contact_inboxes_aggregate;
  /** fetch data from the table: "contact_inboxes" using primary key columns */
  contact_inboxes_by_pk?: Maybe<contact_inboxes>;
  /** fetch data from the table in a streaming manner: "contact_inboxes" */
  contact_inboxes_stream: Array<contact_inboxes>;
  /** An array relationship */
  contact_tags: Array<contact_tags>;
  /** An aggregate relationship */
  contact_tags_aggregate: contact_tags_aggregate;
  /** fetch data from the table: "contact_tags" using primary key columns */
  contact_tags_by_pk?: Maybe<contact_tags>;
  /** fetch data from the table in a streaming manner: "contact_tags" */
  contact_tags_stream: Array<contact_tags>;
  /** fetch data from the table: "contacts" */
  contacts: Array<contacts>;
  /** fetch aggregated fields from the table: "contacts" */
  contacts_aggregate: contacts_aggregate;
  /** fetch data from the table: "contacts" using primary key columns */
  contacts_by_pk?: Maybe<contacts>;
  /** fetch data from the table in a streaming manner: "contacts" */
  contacts_stream: Array<contacts>;
  /** fetch data from the table: "conversation_activity_log" */
  conversation_activity_log: Array<conversation_activity_log>;
  /** fetch aggregated fields from the table: "conversation_activity_log" */
  conversation_activity_log_aggregate: conversation_activity_log_aggregate;
  /** fetch data from the table: "conversation_activity_log" using primary key columns */
  conversation_activity_log_by_pk?: Maybe<conversation_activity_log>;
  /** fetch data from the table in a streaming manner: "conversation_activity_log" */
  conversation_activity_log_stream: Array<conversation_activity_log>;
  /** fetch data from the table: "conversation_message_mentions" */
  conversation_message_mentions: Array<conversation_message_mentions>;
  /** fetch aggregated fields from the table: "conversation_message_mentions" */
  conversation_message_mentions_aggregate: conversation_message_mentions_aggregate;
  /** fetch data from the table: "conversation_message_mentions" using primary key columns */
  conversation_message_mentions_by_pk?: Maybe<conversation_message_mentions>;
  /** fetch data from the table in a streaming manner: "conversation_message_mentions" */
  conversation_message_mentions_stream: Array<conversation_message_mentions>;
  /** An array relationship */
  conversation_tags: Array<conversation_tags>;
  /** An aggregate relationship */
  conversation_tags_aggregate: conversation_tags_aggregate;
  /** fetch data from the table: "conversation_tags" using primary key columns */
  conversation_tags_by_pk?: Maybe<conversation_tags>;
  /** fetch data from the table in a streaming manner: "conversation_tags" */
  conversation_tags_stream: Array<conversation_tags>;
  /** fetch data from the table: "conversation_watch_list" */
  conversation_watch_list: Array<conversation_watch_list>;
  /** fetch aggregated fields from the table: "conversation_watch_list" */
  conversation_watch_list_aggregate: conversation_watch_list_aggregate;
  /** fetch data from the table: "conversation_watch_list" using primary key columns */
  conversation_watch_list_by_pk?: Maybe<conversation_watch_list>;
  /** fetch data from the table in a streaming manner: "conversation_watch_list" */
  conversation_watch_list_stream: Array<conversation_watch_list>;
  /** An array relationship */
  conversations: Array<conversations>;
  /** An aggregate relationship */
  conversations_aggregate: conversations_aggregate;
  /** fetch data from the table: "conversations" using primary key columns */
  conversations_by_pk?: Maybe<conversations>;
  /** fetch data from the table in a streaming manner: "conversations" */
  conversations_stream: Array<conversations>;
  /** fetch data from the table: "csat_feedback" */
  csat_feedback: Array<csat_feedback>;
  /** fetch aggregated fields from the table: "csat_feedback" */
  csat_feedback_aggregate: csat_feedback_aggregate;
  /** fetch data from the table: "csat_feedback" using primary key columns */
  csat_feedback_by_pk?: Maybe<csat_feedback>;
  /** fetch data from the table in a streaming manner: "csat_feedback" */
  csat_feedback_stream: Array<csat_feedback>;
  /** fetch data from the table: "custom_filters" */
  custom_filters: Array<custom_filters>;
  /** fetch aggregated fields from the table: "custom_filters" */
  custom_filters_aggregate: custom_filters_aggregate;
  /** fetch data from the table: "custom_filters" using primary key columns */
  custom_filters_by_pk?: Maybe<custom_filters>;
  /** fetch data from the table in a streaming manner: "custom_filters" */
  custom_filters_stream: Array<custom_filters>;
  /** fetch data from the table: "inboxes" */
  inboxes: Array<inboxes>;
  /** fetch aggregated fields from the table: "inboxes" */
  inboxes_aggregate: inboxes_aggregate;
  /** fetch data from the table: "inboxes" using primary key columns */
  inboxes_by_pk?: Maybe<inboxes>;
  /** fetch data from the table in a streaming manner: "inboxes" */
  inboxes_stream: Array<inboxes>;
  /** fetch data from the table: "ivr_menus" */
  ivr_menus: Array<ivr_menus>;
  /** fetch aggregated fields from the table: "ivr_menus" */
  ivr_menus_aggregate: ivr_menus_aggregate;
  /** fetch data from the table: "ivr_menus" using primary key columns */
  ivr_menus_by_pk?: Maybe<ivr_menus>;
  /** fetch data from the table in a streaming manner: "ivr_menus" */
  ivr_menus_stream: Array<ivr_menus>;
  /** fetch data from the table: "jira_tickets" */
  jira_tickets: Array<jira_tickets>;
  /** fetch aggregated fields from the table: "jira_tickets" */
  jira_tickets_aggregate: jira_tickets_aggregate;
  /** fetch data from the table: "jira_tickets" using primary key columns */
  jira_tickets_by_pk?: Maybe<jira_tickets>;
  /** fetch data from the table in a streaming manner: "jira_tickets" */
  jira_tickets_stream: Array<jira_tickets>;
  /** fetch data from the table: "knowladge_base_appearance" */
  knowladge_base_appearance: Array<knowladge_base_appearance>;
  /** fetch aggregated fields from the table: "knowladge_base_appearance" */
  knowladge_base_appearance_aggregate: knowladge_base_appearance_aggregate;
  /** fetch data from the table: "knowladge_base_appearance" using primary key columns */
  knowladge_base_appearance_by_pk?: Maybe<knowladge_base_appearance>;
  /** fetch data from the table in a streaming manner: "knowladge_base_appearance" */
  knowladge_base_appearance_stream: Array<knowladge_base_appearance>;
  /** fetch data from the table: "knowledge_base_articles" */
  knowledge_base_articles: Array<knowledge_base_articles>;
  /** fetch aggregated fields from the table: "knowledge_base_articles" */
  knowledge_base_articles_aggregate: knowledge_base_articles_aggregate;
  /** fetch data from the table: "knowledge_base_articles" using primary key columns */
  knowledge_base_articles_by_pk?: Maybe<knowledge_base_articles>;
  /** fetch data from the table in a streaming manner: "knowledge_base_articles" */
  knowledge_base_articles_stream: Array<knowledge_base_articles>;
  /** fetch data from the table: "knowledge_base_categories" */
  knowledge_base_categories: Array<knowledge_base_categories>;
  /** fetch aggregated fields from the table: "knowledge_base_categories" */
  knowledge_base_categories_aggregate: knowledge_base_categories_aggregate;
  /** fetch data from the table: "knowledge_base_categories" using primary key columns */
  knowledge_base_categories_by_pk?: Maybe<knowledge_base_categories>;
  /** fetch data from the table in a streaming manner: "knowledge_base_categories" */
  knowledge_base_categories_stream: Array<knowledge_base_categories>;
  /** fetch data from the table: "log_agent_status" */
  log_agent_status: Array<log_agent_status>;
  /** fetch aggregated fields from the table: "log_agent_status" */
  log_agent_status_aggregate: log_agent_status_aggregate;
  /** fetch data from the table: "log_agent_status" using primary key columns */
  log_agent_status_by_pk?: Maybe<log_agent_status>;
  /** fetch data from the table in a streaming manner: "log_agent_status" */
  log_agent_status_stream: Array<log_agent_status>;
  /** An array relationship */
  messages: Array<messages>;
  /** An aggregate relationship */
  messages_aggregate: messages_aggregate;
  /** fetch data from the table: "messages" using primary key columns */
  messages_by_pk?: Maybe<messages>;
  /** fetch data from the table in a streaming manner: "messages" */
  messages_stream: Array<messages>;
  /** fetch data from the table: "sla_policies" */
  sla_policies: Array<sla_policies>;
  /** fetch aggregated fields from the table: "sla_policies" */
  sla_policies_aggregate: sla_policies_aggregate;
  /** fetch data from the table: "sla_policies" using primary key columns */
  sla_policies_by_pk?: Maybe<sla_policies>;
  /** fetch data from the table in a streaming manner: "sla_policies" */
  sla_policies_stream: Array<sla_policies>;
  /** An array relationship */
  sla_target_policies: Array<sla_target_policies>;
  /** An aggregate relationship */
  sla_target_policies_aggregate: sla_target_policies_aggregate;
  /** fetch data from the table: "sla_target_policies" using primary key columns */
  sla_target_policies_by_pk?: Maybe<sla_target_policies>;
  /** fetch data from the table in a streaming manner: "sla_target_policies" */
  sla_target_policies_stream: Array<sla_target_policies>;
  /** fetch data from the table: "tags" */
  tags: Array<tags>;
  /** fetch aggregated fields from the table: "tags" */
  tags_aggregate: tags_aggregate;
  /** fetch data from the table: "tags" using primary key columns */
  tags_by_pk?: Maybe<tags>;
  /** fetch data from the table in a streaming manner: "tags" */
  tags_stream: Array<tags>;
  /** An array relationship */
  team_inboxes: Array<team_inboxes>;
  /** An aggregate relationship */
  team_inboxes_aggregate: team_inboxes_aggregate;
  /** fetch data from the table: "team_inboxes" using primary key columns */
  team_inboxes_by_pk?: Maybe<team_inboxes>;
  /** fetch data from the table in a streaming manner: "team_inboxes" */
  team_inboxes_stream: Array<team_inboxes>;
  /** An array relationship */
  team_members: Array<team_members>;
  /** An aggregate relationship */
  team_members_aggregate: team_members_aggregate;
  /** fetch data from the table: "team_members" using primary key columns */
  team_members_by_pk?: Maybe<team_members>;
  /** fetch data from the table in a streaming manner: "team_members" */
  team_members_stream: Array<team_members>;
  /** An array relationship */
  teams: Array<teams>;
  /** An aggregate relationship */
  teams_aggregate: teams_aggregate;
  /** fetch data from the table: "teams" using primary key columns */
  teams_by_pk?: Maybe<teams>;
  /** fetch data from the table in a streaming manner: "teams" */
  teams_stream: Array<teams>;
  /** fetch data from the table: "template_sms" */
  template_sms: Array<template_sms>;
  /** fetch aggregated fields from the table: "template_sms" */
  template_sms_aggregate: template_sms_aggregate;
  /** fetch data from the table: "template_sms" using primary key columns */
  template_sms_by_pk?: Maybe<template_sms>;
  /** fetch data from the table in a streaming manner: "template_sms" */
  template_sms_stream: Array<template_sms>;
  /** fetch data from the table: "ticket" */
  ticket: Array<ticket>;
  /** fetch data from the table: "ticket_activity_log" */
  ticket_activity_log: Array<ticket_activity_log>;
  /** fetch aggregated fields from the table: "ticket_activity_log" */
  ticket_activity_log_aggregate: ticket_activity_log_aggregate;
  /** fetch data from the table: "ticket_activity_log" using primary key columns */
  ticket_activity_log_by_pk?: Maybe<ticket_activity_log>;
  /** fetch data from the table in a streaming manner: "ticket_activity_log" */
  ticket_activity_log_stream: Array<ticket_activity_log>;
  /** fetch aggregated fields from the table: "ticket" */
  ticket_aggregate: ticket_aggregate;
  /** fetch data from the table: "ticket" using primary key columns */
  ticket_by_pk?: Maybe<ticket>;
  /** fetch data from the table: "ticket_forms" */
  ticket_forms: Array<ticket_forms>;
  /** fetch aggregated fields from the table: "ticket_forms" */
  ticket_forms_aggregate: ticket_forms_aggregate;
  /** fetch data from the table: "ticket_forms" using primary key columns */
  ticket_forms_by_pk?: Maybe<ticket_forms>;
  /** fetch data from the table in a streaming manner: "ticket_forms" */
  ticket_forms_stream: Array<ticket_forms>;
  /** fetch data from the table: "ticket_message_mentions" */
  ticket_message_mentions: Array<ticket_message_mentions>;
  /** fetch aggregated fields from the table: "ticket_message_mentions" */
  ticket_message_mentions_aggregate: ticket_message_mentions_aggregate;
  /** fetch data from the table: "ticket_message_mentions" using primary key columns */
  ticket_message_mentions_by_pk?: Maybe<ticket_message_mentions>;
  /** fetch data from the table in a streaming manner: "ticket_message_mentions" */
  ticket_message_mentions_stream: Array<ticket_message_mentions>;
  /** fetch data from the table: "ticket_messages" */
  ticket_messages: Array<ticket_messages>;
  /** fetch aggregated fields from the table: "ticket_messages" */
  ticket_messages_aggregate: ticket_messages_aggregate;
  /** fetch data from the table: "ticket_messages" using primary key columns */
  ticket_messages_by_pk?: Maybe<ticket_messages>;
  /** fetch data from the table in a streaming manner: "ticket_messages" */
  ticket_messages_stream: Array<ticket_messages>;
  /** fetch data from the table: "ticket_share" */
  ticket_share: Array<ticket_share>;
  /** fetch aggregated fields from the table: "ticket_share" */
  ticket_share_aggregate: ticket_share_aggregate;
  /** fetch data from the table: "ticket_share" using primary key columns */
  ticket_share_by_pk?: Maybe<ticket_share>;
  /** fetch data from the table in a streaming manner: "ticket_share" */
  ticket_share_stream: Array<ticket_share>;
  /** fetch data from the table in a streaming manner: "ticket" */
  ticket_stream: Array<ticket>;
  /** An array relationship */
  ticket_tags: Array<ticket_tags>;
  /** An aggregate relationship */
  ticket_tags_aggregate: ticket_tags_aggregate;
  /** fetch data from the table: "ticket_tags" using primary key columns */
  ticket_tags_by_pk?: Maybe<ticket_tags>;
  /** fetch data from the table in a streaming manner: "ticket_tags" */
  ticket_tags_stream: Array<ticket_tags>;
  /** fetch data from the table: "ticket_watch_list" */
  ticket_watch_list: Array<ticket_watch_list>;
  /** fetch aggregated fields from the table: "ticket_watch_list" */
  ticket_watch_list_aggregate: ticket_watch_list_aggregate;
  /** fetch data from the table: "ticket_watch_list" using primary key columns */
  ticket_watch_list_by_pk?: Maybe<ticket_watch_list>;
  /** fetch data from the table in a streaming manner: "ticket_watch_list" */
  ticket_watch_list_stream: Array<ticket_watch_list>;
  /** fetch data from the table: "update_version" */
  update_version: Array<update_version>;
  /** fetch aggregated fields from the table: "update_version" */
  update_version_aggregate: update_version_aggregate;
  /** fetch data from the table: "update_version" using primary key columns */
  update_version_by_pk?: Maybe<update_version>;
  /** fetch data from the table in a streaming manner: "update_version" */
  update_version_stream: Array<update_version>;
  /** fetch data from the table: "user_roles" */
  user_roles: Array<user_roles>;
  /** fetch aggregated fields from the table: "user_roles" */
  user_roles_aggregate: user_roles_aggregate;
  /** fetch data from the table: "user_roles" using primary key columns */
  user_roles_by_pk?: Maybe<user_roles>;
  /** fetch data from the table in a streaming manner: "user_roles" */
  user_roles_stream: Array<user_roles>;
  /** fetch data from the table: "users" */
  users: Array<users>;
  /** fetch aggregated fields from the table: "users" */
  users_aggregate: users_aggregate;
  /** fetch data from the table: "users" using primary key columns */
  users_by_pk?: Maybe<users>;
  /** fetch data from the table in a streaming manner: "users" */
  users_stream: Array<users>;
  /** fetch data from the table: "workflows_contact_reason" */
  workflows_contact_reason: Array<workflows_contact_reason>;
  /** fetch aggregated fields from the table: "workflows_contact_reason" */
  workflows_contact_reason_aggregate: workflows_contact_reason_aggregate;
  /** fetch data from the table: "workflows_contact_reason" using primary key columns */
  workflows_contact_reason_by_pk?: Maybe<workflows_contact_reason>;
  /** fetch data from the table in a streaming manner: "workflows_contact_reason" */
  workflows_contact_reason_stream: Array<workflows_contact_reason>;
  /** fetch data from the table: "working_hours" */
  working_hours: Array<working_hours>;
  /** fetch aggregated fields from the table: "working_hours" */
  working_hours_aggregate: working_hours_aggregate;
  /** fetch data from the table: "working_hours" using primary key columns */
  working_hours_by_pk?: Maybe<working_hours>;
  /** fetch data from the table: "working_hours_shift" */
  working_hours_shift: Array<working_hours_shift>;
  /** fetch aggregated fields from the table: "working_hours_shift" */
  working_hours_shift_aggregate: working_hours_shift_aggregate;
  /** fetch data from the table: "working_hours_shift" using primary key columns */
  working_hours_shift_by_pk?: Maybe<working_hours_shift>;
  /** fetch data from the table in a streaming manner: "working_hours_shift" */
  working_hours_shift_stream: Array<working_hours_shift>;
  /** fetch data from the table in a streaming manner: "working_hours" */
  working_hours_stream: Array<working_hours>;
};


export type subscription_rootaccount_agentsArgs = {
  distinct_on?: InputMaybe<Array<account_agents_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_agents_order_by>>;
  where?: InputMaybe<account_agents_bool_exp>;
};


export type subscription_rootaccount_agents_aggregateArgs = {
  distinct_on?: InputMaybe<Array<account_agents_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_agents_order_by>>;
  where?: InputMaybe<account_agents_bool_exp>;
};


export type subscription_rootaccount_agents_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<account_agents_stream_cursor_input>>;
  where?: InputMaybe<account_agents_bool_exp>;
};


export type subscription_rootaccount_email_configArgs = {
  distinct_on?: InputMaybe<Array<account_email_config_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_email_config_order_by>>;
  where?: InputMaybe<account_email_config_bool_exp>;
};


export type subscription_rootaccount_email_config_aggregateArgs = {
  distinct_on?: InputMaybe<Array<account_email_config_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_email_config_order_by>>;
  where?: InputMaybe<account_email_config_bool_exp>;
};


export type subscription_rootaccount_email_config_by_pkArgs = {
  account_id: Scalars['Int'];
};


export type subscription_rootaccount_email_config_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<account_email_config_stream_cursor_input>>;
  where?: InputMaybe<account_email_config_bool_exp>;
};


export type subscription_rootaccount_usersArgs = {
  distinct_on?: InputMaybe<Array<account_users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_users_order_by>>;
  where?: InputMaybe<account_users_bool_exp>;
};


export type subscription_rootaccount_users_aggregateArgs = {
  distinct_on?: InputMaybe<Array<account_users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_users_order_by>>;
  where?: InputMaybe<account_users_bool_exp>;
};


export type subscription_rootaccount_users_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootaccount_users_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<account_users_stream_cursor_input>>;
  where?: InputMaybe<account_users_bool_exp>;
};


export type subscription_rootaccountsArgs = {
  distinct_on?: InputMaybe<Array<accounts_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<accounts_order_by>>;
  where?: InputMaybe<accounts_bool_exp>;
};


export type subscription_rootaccounts_aggregateArgs = {
  distinct_on?: InputMaybe<Array<accounts_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<accounts_order_by>>;
  where?: InputMaybe<accounts_bool_exp>;
};


export type subscription_rootaccounts_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootaccounts_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<accounts_stream_cursor_input>>;
  where?: InputMaybe<accounts_bool_exp>;
};


export type subscription_rootarticle_tagsArgs = {
  distinct_on?: InputMaybe<Array<article_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<article_tags_order_by>>;
  where?: InputMaybe<article_tags_bool_exp>;
};


export type subscription_rootarticle_tags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<article_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<article_tags_order_by>>;
  where?: InputMaybe<article_tags_bool_exp>;
};


export type subscription_rootarticle_tags_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootarticle_tags_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<article_tags_stream_cursor_input>>;
  where?: InputMaybe<article_tags_bool_exp>;
};


export type subscription_rootattachmentsArgs = {
  distinct_on?: InputMaybe<Array<attachments_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<attachments_order_by>>;
  where?: InputMaybe<attachments_bool_exp>;
};


export type subscription_rootattachments_aggregateArgs = {
  distinct_on?: InputMaybe<Array<attachments_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<attachments_order_by>>;
  where?: InputMaybe<attachments_bool_exp>;
};


export type subscription_rootattachments_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootattachments_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<attachments_stream_cursor_input>>;
  where?: InputMaybe<attachments_bool_exp>;
};


export type subscription_rootautomation_flow_categoriesArgs = {
  distinct_on?: InputMaybe<Array<automation_flow_categories_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<automation_flow_categories_order_by>>;
  where?: InputMaybe<automation_flow_categories_bool_exp>;
};


export type subscription_rootautomation_flow_categories_aggregateArgs = {
  distinct_on?: InputMaybe<Array<automation_flow_categories_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<automation_flow_categories_order_by>>;
  where?: InputMaybe<automation_flow_categories_bool_exp>;
};


export type subscription_rootautomation_flow_categories_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootautomation_flow_categories_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<automation_flow_categories_stream_cursor_input>>;
  where?: InputMaybe<automation_flow_categories_bool_exp>;
};


export type subscription_rootautomation_flowsArgs = {
  distinct_on?: InputMaybe<Array<automation_flows_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<automation_flows_order_by>>;
  where?: InputMaybe<automation_flows_bool_exp>;
};


export type subscription_rootautomation_flows_aggregateArgs = {
  distinct_on?: InputMaybe<Array<automation_flows_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<automation_flows_order_by>>;
  where?: InputMaybe<automation_flows_bool_exp>;
};


export type subscription_rootautomation_flows_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootautomation_flows_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<automation_flows_stream_cursor_input>>;
  where?: InputMaybe<automation_flows_bool_exp>;
};


export type subscription_rootautomation_rulesArgs = {
  distinct_on?: InputMaybe<Array<automation_rules_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<automation_rules_order_by>>;
  where?: InputMaybe<automation_rules_bool_exp>;
};


export type subscription_rootautomation_rules_aggregateArgs = {
  distinct_on?: InputMaybe<Array<automation_rules_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<automation_rules_order_by>>;
  where?: InputMaybe<automation_rules_bool_exp>;
};


export type subscription_rootautomation_rules_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootautomation_rules_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<automation_rules_stream_cursor_input>>;
  where?: InputMaybe<automation_rules_bool_exp>;
};


export type subscription_rootcall_eventsArgs = {
  distinct_on?: InputMaybe<Array<call_events_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<call_events_order_by>>;
  where?: InputMaybe<call_events_bool_exp>;
};


export type subscription_rootcall_events_aggregateArgs = {
  distinct_on?: InputMaybe<Array<call_events_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<call_events_order_by>>;
  where?: InputMaybe<call_events_bool_exp>;
};


export type subscription_rootcall_events_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootcall_events_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<call_events_stream_cursor_input>>;
  where?: InputMaybe<call_events_bool_exp>;
};


export type subscription_rootcallsArgs = {
  distinct_on?: InputMaybe<Array<calls_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<calls_order_by>>;
  where?: InputMaybe<calls_bool_exp>;
};


export type subscription_rootcalls_aggregateArgs = {
  distinct_on?: InputMaybe<Array<calls_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<calls_order_by>>;
  where?: InputMaybe<calls_bool_exp>;
};


export type subscription_rootcalls_by_pkArgs = {
  id: Scalars['uuid'];
};


export type subscription_rootcalls_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<calls_stream_cursor_input>>;
  where?: InputMaybe<calls_bool_exp>;
};


export type subscription_rootcanned_responsesArgs = {
  distinct_on?: InputMaybe<Array<canned_responses_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<canned_responses_order_by>>;
  where?: InputMaybe<canned_responses_bool_exp>;
};


export type subscription_rootcanned_responses_aggregateArgs = {
  distinct_on?: InputMaybe<Array<canned_responses_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<canned_responses_order_by>>;
  where?: InputMaybe<canned_responses_bool_exp>;
};


export type subscription_rootcanned_responses_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootcanned_responses_categoryArgs = {
  distinct_on?: InputMaybe<Array<canned_responses_category_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<canned_responses_category_order_by>>;
  where?: InputMaybe<canned_responses_category_bool_exp>;
};


export type subscription_rootcanned_responses_category_aggregateArgs = {
  distinct_on?: InputMaybe<Array<canned_responses_category_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<canned_responses_category_order_by>>;
  where?: InputMaybe<canned_responses_category_bool_exp>;
};


export type subscription_rootcanned_responses_category_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootcanned_responses_category_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<canned_responses_category_stream_cursor_input>>;
  where?: InputMaybe<canned_responses_category_bool_exp>;
};


export type subscription_rootcanned_responses_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<canned_responses_stream_cursor_input>>;
  where?: InputMaybe<canned_responses_bool_exp>;
};


export type subscription_rootchannel_emailArgs = {
  distinct_on?: InputMaybe<Array<channel_email_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_email_order_by>>;
  where?: InputMaybe<channel_email_bool_exp>;
};


export type subscription_rootchannel_email_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_email_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_email_order_by>>;
  where?: InputMaybe<channel_email_bool_exp>;
};


export type subscription_rootchannel_email_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootchannel_email_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<channel_email_stream_cursor_input>>;
  where?: InputMaybe<channel_email_bool_exp>;
};


export type subscription_rootchannel_google_businessArgs = {
  distinct_on?: InputMaybe<Array<channel_google_business_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_google_business_order_by>>;
  where?: InputMaybe<channel_google_business_bool_exp>;
};


export type subscription_rootchannel_google_business_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_google_business_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_google_business_order_by>>;
  where?: InputMaybe<channel_google_business_bool_exp>;
};


export type subscription_rootchannel_google_business_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootchannel_google_business_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<channel_google_business_stream_cursor_input>>;
  where?: InputMaybe<channel_google_business_bool_exp>;
};


export type subscription_rootchannel_instagramArgs = {
  distinct_on?: InputMaybe<Array<channel_instagram_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_instagram_order_by>>;
  where?: InputMaybe<channel_instagram_bool_exp>;
};


export type subscription_rootchannel_instagram_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_instagram_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_instagram_order_by>>;
  where?: InputMaybe<channel_instagram_bool_exp>;
};


export type subscription_rootchannel_instagram_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootchannel_instagram_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<channel_instagram_stream_cursor_input>>;
  where?: InputMaybe<channel_instagram_bool_exp>;
};


export type subscription_rootchannel_live_chatArgs = {
  distinct_on?: InputMaybe<Array<channel_live_chat_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_live_chat_order_by>>;
  where?: InputMaybe<channel_live_chat_bool_exp>;
};


export type subscription_rootchannel_live_chat_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_live_chat_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_live_chat_order_by>>;
  where?: InputMaybe<channel_live_chat_bool_exp>;
};


export type subscription_rootchannel_live_chat_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootchannel_live_chat_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<channel_live_chat_stream_cursor_input>>;
  where?: InputMaybe<channel_live_chat_bool_exp>;
};


export type subscription_rootchannel_twitter_profilesArgs = {
  distinct_on?: InputMaybe<Array<channel_twitter_profiles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_twitter_profiles_order_by>>;
  where?: InputMaybe<channel_twitter_profiles_bool_exp>;
};


export type subscription_rootchannel_twitter_profiles_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_twitter_profiles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_twitter_profiles_order_by>>;
  where?: InputMaybe<channel_twitter_profiles_bool_exp>;
};


export type subscription_rootchannel_twitter_profiles_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootchannel_twitter_profiles_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<channel_twitter_profiles_stream_cursor_input>>;
  where?: InputMaybe<channel_twitter_profiles_bool_exp>;
};


export type subscription_rootchannel_twitter_streamArgs = {
  distinct_on?: InputMaybe<Array<channel_twitter_stream_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_twitter_stream_order_by>>;
  where?: InputMaybe<channel_twitter_stream_bool_exp>;
};


export type subscription_rootchannel_twitter_stream_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_twitter_stream_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_twitter_stream_order_by>>;
  where?: InputMaybe<channel_twitter_stream_bool_exp>;
};


export type subscription_rootchannel_twitter_stream_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootchannel_twitter_stream_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<channel_twitter_stream_stream_cursor_input>>;
  where?: InputMaybe<channel_twitter_stream_bool_exp>;
};


export type subscription_rootchannel_web_chatArgs = {
  distinct_on?: InputMaybe<Array<channel_web_chat_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_web_chat_order_by>>;
  where?: InputMaybe<channel_web_chat_bool_exp>;
};


export type subscription_rootchannel_web_chat_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_web_chat_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_web_chat_order_by>>;
  where?: InputMaybe<channel_web_chat_bool_exp>;
};


export type subscription_rootchannel_web_chat_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootchannel_web_chat_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<channel_web_chat_stream_cursor_input>>;
  where?: InputMaybe<channel_web_chat_bool_exp>;
};


export type subscription_rootchannel_whatsappArgs = {
  distinct_on?: InputMaybe<Array<channel_whatsapp_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_whatsapp_order_by>>;
  where?: InputMaybe<channel_whatsapp_bool_exp>;
};


export type subscription_rootchannel_whatsapp_aggregateArgs = {
  distinct_on?: InputMaybe<Array<channel_whatsapp_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<channel_whatsapp_order_by>>;
  where?: InputMaybe<channel_whatsapp_bool_exp>;
};


export type subscription_rootchannel_whatsapp_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootchannel_whatsapp_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<channel_whatsapp_stream_cursor_input>>;
  where?: InputMaybe<channel_whatsapp_bool_exp>;
};


export type subscription_rootcontact_inboxesArgs = {
  distinct_on?: InputMaybe<Array<contact_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_inboxes_order_by>>;
  where?: InputMaybe<contact_inboxes_bool_exp>;
};


export type subscription_rootcontact_inboxes_aggregateArgs = {
  distinct_on?: InputMaybe<Array<contact_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_inboxes_order_by>>;
  where?: InputMaybe<contact_inboxes_bool_exp>;
};


export type subscription_rootcontact_inboxes_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootcontact_inboxes_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<contact_inboxes_stream_cursor_input>>;
  where?: InputMaybe<contact_inboxes_bool_exp>;
};


export type subscription_rootcontact_tagsArgs = {
  distinct_on?: InputMaybe<Array<contact_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_tags_order_by>>;
  where?: InputMaybe<contact_tags_bool_exp>;
};


export type subscription_rootcontact_tags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<contact_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contact_tags_order_by>>;
  where?: InputMaybe<contact_tags_bool_exp>;
};


export type subscription_rootcontact_tags_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootcontact_tags_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<contact_tags_stream_cursor_input>>;
  where?: InputMaybe<contact_tags_bool_exp>;
};


export type subscription_rootcontactsArgs = {
  distinct_on?: InputMaybe<Array<contacts_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contacts_order_by>>;
  where?: InputMaybe<contacts_bool_exp>;
};


export type subscription_rootcontacts_aggregateArgs = {
  distinct_on?: InputMaybe<Array<contacts_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<contacts_order_by>>;
  where?: InputMaybe<contacts_bool_exp>;
};


export type subscription_rootcontacts_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootcontacts_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<contacts_stream_cursor_input>>;
  where?: InputMaybe<contacts_bool_exp>;
};


export type subscription_rootconversation_activity_logArgs = {
  distinct_on?: InputMaybe<Array<conversation_activity_log_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_activity_log_order_by>>;
  where?: InputMaybe<conversation_activity_log_bool_exp>;
};


export type subscription_rootconversation_activity_log_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversation_activity_log_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_activity_log_order_by>>;
  where?: InputMaybe<conversation_activity_log_bool_exp>;
};


export type subscription_rootconversation_activity_log_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootconversation_activity_log_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<conversation_activity_log_stream_cursor_input>>;
  where?: InputMaybe<conversation_activity_log_bool_exp>;
};


export type subscription_rootconversation_message_mentionsArgs = {
  distinct_on?: InputMaybe<Array<conversation_message_mentions_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_message_mentions_order_by>>;
  where?: InputMaybe<conversation_message_mentions_bool_exp>;
};


export type subscription_rootconversation_message_mentions_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversation_message_mentions_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_message_mentions_order_by>>;
  where?: InputMaybe<conversation_message_mentions_bool_exp>;
};


export type subscription_rootconversation_message_mentions_by_pkArgs = {
  message_id: Scalars['bigint'];
  user_id: Scalars['bigint'];
};


export type subscription_rootconversation_message_mentions_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<conversation_message_mentions_stream_cursor_input>>;
  where?: InputMaybe<conversation_message_mentions_bool_exp>;
};


export type subscription_rootconversation_tagsArgs = {
  distinct_on?: InputMaybe<Array<conversation_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_tags_order_by>>;
  where?: InputMaybe<conversation_tags_bool_exp>;
};


export type subscription_rootconversation_tags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversation_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_tags_order_by>>;
  where?: InputMaybe<conversation_tags_bool_exp>;
};


export type subscription_rootconversation_tags_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootconversation_tags_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<conversation_tags_stream_cursor_input>>;
  where?: InputMaybe<conversation_tags_bool_exp>;
};


export type subscription_rootconversation_watch_listArgs = {
  distinct_on?: InputMaybe<Array<conversation_watch_list_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_watch_list_order_by>>;
  where?: InputMaybe<conversation_watch_list_bool_exp>;
};


export type subscription_rootconversation_watch_list_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversation_watch_list_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_watch_list_order_by>>;
  where?: InputMaybe<conversation_watch_list_bool_exp>;
};


export type subscription_rootconversation_watch_list_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootconversation_watch_list_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<conversation_watch_list_stream_cursor_input>>;
  where?: InputMaybe<conversation_watch_list_bool_exp>;
};


export type subscription_rootconversationsArgs = {
  distinct_on?: InputMaybe<Array<conversations_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversations_order_by>>;
  where?: InputMaybe<conversations_bool_exp>;
};


export type subscription_rootconversations_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversations_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversations_order_by>>;
  where?: InputMaybe<conversations_bool_exp>;
};


export type subscription_rootconversations_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootconversations_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<conversations_stream_cursor_input>>;
  where?: InputMaybe<conversations_bool_exp>;
};


export type subscription_rootcsat_feedbackArgs = {
  distinct_on?: InputMaybe<Array<csat_feedback_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<csat_feedback_order_by>>;
  where?: InputMaybe<csat_feedback_bool_exp>;
};


export type subscription_rootcsat_feedback_aggregateArgs = {
  distinct_on?: InputMaybe<Array<csat_feedback_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<csat_feedback_order_by>>;
  where?: InputMaybe<csat_feedback_bool_exp>;
};


export type subscription_rootcsat_feedback_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootcsat_feedback_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<csat_feedback_stream_cursor_input>>;
  where?: InputMaybe<csat_feedback_bool_exp>;
};


export type subscription_rootcustom_filtersArgs = {
  distinct_on?: InputMaybe<Array<custom_filters_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<custom_filters_order_by>>;
  where?: InputMaybe<custom_filters_bool_exp>;
};


export type subscription_rootcustom_filters_aggregateArgs = {
  distinct_on?: InputMaybe<Array<custom_filters_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<custom_filters_order_by>>;
  where?: InputMaybe<custom_filters_bool_exp>;
};


export type subscription_rootcustom_filters_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootcustom_filters_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<custom_filters_stream_cursor_input>>;
  where?: InputMaybe<custom_filters_bool_exp>;
};


export type subscription_rootinboxesArgs = {
  distinct_on?: InputMaybe<Array<inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<inboxes_order_by>>;
  where?: InputMaybe<inboxes_bool_exp>;
};


export type subscription_rootinboxes_aggregateArgs = {
  distinct_on?: InputMaybe<Array<inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<inboxes_order_by>>;
  where?: InputMaybe<inboxes_bool_exp>;
};


export type subscription_rootinboxes_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootinboxes_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<inboxes_stream_cursor_input>>;
  where?: InputMaybe<inboxes_bool_exp>;
};


export type subscription_rootivr_menusArgs = {
  distinct_on?: InputMaybe<Array<ivr_menus_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ivr_menus_order_by>>;
  where?: InputMaybe<ivr_menus_bool_exp>;
};


export type subscription_rootivr_menus_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ivr_menus_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ivr_menus_order_by>>;
  where?: InputMaybe<ivr_menus_bool_exp>;
};


export type subscription_rootivr_menus_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootivr_menus_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<ivr_menus_stream_cursor_input>>;
  where?: InputMaybe<ivr_menus_bool_exp>;
};


export type subscription_rootjira_ticketsArgs = {
  distinct_on?: InputMaybe<Array<jira_tickets_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<jira_tickets_order_by>>;
  where?: InputMaybe<jira_tickets_bool_exp>;
};


export type subscription_rootjira_tickets_aggregateArgs = {
  distinct_on?: InputMaybe<Array<jira_tickets_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<jira_tickets_order_by>>;
  where?: InputMaybe<jira_tickets_bool_exp>;
};


export type subscription_rootjira_tickets_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootjira_tickets_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<jira_tickets_stream_cursor_input>>;
  where?: InputMaybe<jira_tickets_bool_exp>;
};


export type subscription_rootknowladge_base_appearanceArgs = {
  distinct_on?: InputMaybe<Array<knowladge_base_appearance_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowladge_base_appearance_order_by>>;
  where?: InputMaybe<knowladge_base_appearance_bool_exp>;
};


export type subscription_rootknowladge_base_appearance_aggregateArgs = {
  distinct_on?: InputMaybe<Array<knowladge_base_appearance_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowladge_base_appearance_order_by>>;
  where?: InputMaybe<knowladge_base_appearance_bool_exp>;
};


export type subscription_rootknowladge_base_appearance_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootknowladge_base_appearance_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<knowladge_base_appearance_stream_cursor_input>>;
  where?: InputMaybe<knowladge_base_appearance_bool_exp>;
};


export type subscription_rootknowledge_base_articlesArgs = {
  distinct_on?: InputMaybe<Array<knowledge_base_articles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowledge_base_articles_order_by>>;
  where?: InputMaybe<knowledge_base_articles_bool_exp>;
};


export type subscription_rootknowledge_base_articles_aggregateArgs = {
  distinct_on?: InputMaybe<Array<knowledge_base_articles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowledge_base_articles_order_by>>;
  where?: InputMaybe<knowledge_base_articles_bool_exp>;
};


export type subscription_rootknowledge_base_articles_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootknowledge_base_articles_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<knowledge_base_articles_stream_cursor_input>>;
  where?: InputMaybe<knowledge_base_articles_bool_exp>;
};


export type subscription_rootknowledge_base_categoriesArgs = {
  distinct_on?: InputMaybe<Array<knowledge_base_categories_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowledge_base_categories_order_by>>;
  where?: InputMaybe<knowledge_base_categories_bool_exp>;
};


export type subscription_rootknowledge_base_categories_aggregateArgs = {
  distinct_on?: InputMaybe<Array<knowledge_base_categories_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<knowledge_base_categories_order_by>>;
  where?: InputMaybe<knowledge_base_categories_bool_exp>;
};


export type subscription_rootknowledge_base_categories_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootknowledge_base_categories_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<knowledge_base_categories_stream_cursor_input>>;
  where?: InputMaybe<knowledge_base_categories_bool_exp>;
};


export type subscription_rootlog_agent_statusArgs = {
  distinct_on?: InputMaybe<Array<log_agent_status_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<log_agent_status_order_by>>;
  where?: InputMaybe<log_agent_status_bool_exp>;
};


export type subscription_rootlog_agent_status_aggregateArgs = {
  distinct_on?: InputMaybe<Array<log_agent_status_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<log_agent_status_order_by>>;
  where?: InputMaybe<log_agent_status_bool_exp>;
};


export type subscription_rootlog_agent_status_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootlog_agent_status_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<log_agent_status_stream_cursor_input>>;
  where?: InputMaybe<log_agent_status_bool_exp>;
};


export type subscription_rootmessagesArgs = {
  distinct_on?: InputMaybe<Array<messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<messages_order_by>>;
  where?: InputMaybe<messages_bool_exp>;
};


export type subscription_rootmessages_aggregateArgs = {
  distinct_on?: InputMaybe<Array<messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<messages_order_by>>;
  where?: InputMaybe<messages_bool_exp>;
};


export type subscription_rootmessages_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootmessages_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<messages_stream_cursor_input>>;
  where?: InputMaybe<messages_bool_exp>;
};


export type subscription_rootsla_policiesArgs = {
  distinct_on?: InputMaybe<Array<sla_policies_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<sla_policies_order_by>>;
  where?: InputMaybe<sla_policies_bool_exp>;
};


export type subscription_rootsla_policies_aggregateArgs = {
  distinct_on?: InputMaybe<Array<sla_policies_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<sla_policies_order_by>>;
  where?: InputMaybe<sla_policies_bool_exp>;
};


export type subscription_rootsla_policies_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootsla_policies_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<sla_policies_stream_cursor_input>>;
  where?: InputMaybe<sla_policies_bool_exp>;
};


export type subscription_rootsla_target_policiesArgs = {
  distinct_on?: InputMaybe<Array<sla_target_policies_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<sla_target_policies_order_by>>;
  where?: InputMaybe<sla_target_policies_bool_exp>;
};


export type subscription_rootsla_target_policies_aggregateArgs = {
  distinct_on?: InputMaybe<Array<sla_target_policies_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<sla_target_policies_order_by>>;
  where?: InputMaybe<sla_target_policies_bool_exp>;
};


export type subscription_rootsla_target_policies_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootsla_target_policies_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<sla_target_policies_stream_cursor_input>>;
  where?: InputMaybe<sla_target_policies_bool_exp>;
};


export type subscription_roottagsArgs = {
  distinct_on?: InputMaybe<Array<tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<tags_order_by>>;
  where?: InputMaybe<tags_bool_exp>;
};


export type subscription_roottags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<tags_order_by>>;
  where?: InputMaybe<tags_bool_exp>;
};


export type subscription_roottags_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_roottags_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<tags_stream_cursor_input>>;
  where?: InputMaybe<tags_bool_exp>;
};


export type subscription_rootteam_inboxesArgs = {
  distinct_on?: InputMaybe<Array<team_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_inboxes_order_by>>;
  where?: InputMaybe<team_inboxes_bool_exp>;
};


export type subscription_rootteam_inboxes_aggregateArgs = {
  distinct_on?: InputMaybe<Array<team_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_inboxes_order_by>>;
  where?: InputMaybe<team_inboxes_bool_exp>;
};


export type subscription_rootteam_inboxes_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootteam_inboxes_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<team_inboxes_stream_cursor_input>>;
  where?: InputMaybe<team_inboxes_bool_exp>;
};


export type subscription_rootteam_membersArgs = {
  distinct_on?: InputMaybe<Array<team_members_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_members_order_by>>;
  where?: InputMaybe<team_members_bool_exp>;
};


export type subscription_rootteam_members_aggregateArgs = {
  distinct_on?: InputMaybe<Array<team_members_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_members_order_by>>;
  where?: InputMaybe<team_members_bool_exp>;
};


export type subscription_rootteam_members_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootteam_members_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<team_members_stream_cursor_input>>;
  where?: InputMaybe<team_members_bool_exp>;
};


export type subscription_rootteamsArgs = {
  distinct_on?: InputMaybe<Array<teams_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<teams_order_by>>;
  where?: InputMaybe<teams_bool_exp>;
};


export type subscription_rootteams_aggregateArgs = {
  distinct_on?: InputMaybe<Array<teams_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<teams_order_by>>;
  where?: InputMaybe<teams_bool_exp>;
};


export type subscription_rootteams_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootteams_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<teams_stream_cursor_input>>;
  where?: InputMaybe<teams_bool_exp>;
};


export type subscription_roottemplate_smsArgs = {
  distinct_on?: InputMaybe<Array<template_sms_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<template_sms_order_by>>;
  where?: InputMaybe<template_sms_bool_exp>;
};


export type subscription_roottemplate_sms_aggregateArgs = {
  distinct_on?: InputMaybe<Array<template_sms_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<template_sms_order_by>>;
  where?: InputMaybe<template_sms_bool_exp>;
};


export type subscription_roottemplate_sms_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_roottemplate_sms_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<template_sms_stream_cursor_input>>;
  where?: InputMaybe<template_sms_bool_exp>;
};


export type subscription_rootticketArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};


export type subscription_rootticket_activity_logArgs = {
  distinct_on?: InputMaybe<Array<ticket_activity_log_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_activity_log_order_by>>;
  where?: InputMaybe<ticket_activity_log_bool_exp>;
};


export type subscription_rootticket_activity_log_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_activity_log_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_activity_log_order_by>>;
  where?: InputMaybe<ticket_activity_log_bool_exp>;
};


export type subscription_rootticket_activity_log_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootticket_activity_log_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<ticket_activity_log_stream_cursor_input>>;
  where?: InputMaybe<ticket_activity_log_bool_exp>;
};


export type subscription_rootticket_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};


export type subscription_rootticket_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootticket_formsArgs = {
  distinct_on?: InputMaybe<Array<ticket_forms_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_forms_order_by>>;
  where?: InputMaybe<ticket_forms_bool_exp>;
};


export type subscription_rootticket_forms_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_forms_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_forms_order_by>>;
  where?: InputMaybe<ticket_forms_bool_exp>;
};


export type subscription_rootticket_forms_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootticket_forms_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<ticket_forms_stream_cursor_input>>;
  where?: InputMaybe<ticket_forms_bool_exp>;
};


export type subscription_rootticket_message_mentionsArgs = {
  distinct_on?: InputMaybe<Array<ticket_message_mentions_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_message_mentions_order_by>>;
  where?: InputMaybe<ticket_message_mentions_bool_exp>;
};


export type subscription_rootticket_message_mentions_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_message_mentions_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_message_mentions_order_by>>;
  where?: InputMaybe<ticket_message_mentions_bool_exp>;
};


export type subscription_rootticket_message_mentions_by_pkArgs = {
  message_id: Scalars['bigint'];
  user_id: Scalars['bigint'];
};


export type subscription_rootticket_message_mentions_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<ticket_message_mentions_stream_cursor_input>>;
  where?: InputMaybe<ticket_message_mentions_bool_exp>;
};


export type subscription_rootticket_messagesArgs = {
  distinct_on?: InputMaybe<Array<ticket_messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_messages_order_by>>;
  where?: InputMaybe<ticket_messages_bool_exp>;
};


export type subscription_rootticket_messages_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_messages_order_by>>;
  where?: InputMaybe<ticket_messages_bool_exp>;
};


export type subscription_rootticket_messages_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootticket_messages_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<ticket_messages_stream_cursor_input>>;
  where?: InputMaybe<ticket_messages_bool_exp>;
};


export type subscription_rootticket_shareArgs = {
  distinct_on?: InputMaybe<Array<ticket_share_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_share_order_by>>;
  where?: InputMaybe<ticket_share_bool_exp>;
};


export type subscription_rootticket_share_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_share_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_share_order_by>>;
  where?: InputMaybe<ticket_share_bool_exp>;
};


export type subscription_rootticket_share_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootticket_share_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<ticket_share_stream_cursor_input>>;
  where?: InputMaybe<ticket_share_bool_exp>;
};


export type subscription_rootticket_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<ticket_stream_cursor_input>>;
  where?: InputMaybe<ticket_bool_exp>;
};


export type subscription_rootticket_tagsArgs = {
  distinct_on?: InputMaybe<Array<ticket_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_tags_order_by>>;
  where?: InputMaybe<ticket_tags_bool_exp>;
};


export type subscription_rootticket_tags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_tags_order_by>>;
  where?: InputMaybe<ticket_tags_bool_exp>;
};


export type subscription_rootticket_tags_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootticket_tags_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<ticket_tags_stream_cursor_input>>;
  where?: InputMaybe<ticket_tags_bool_exp>;
};


export type subscription_rootticket_watch_listArgs = {
  distinct_on?: InputMaybe<Array<ticket_watch_list_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_watch_list_order_by>>;
  where?: InputMaybe<ticket_watch_list_bool_exp>;
};


export type subscription_rootticket_watch_list_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_watch_list_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_watch_list_order_by>>;
  where?: InputMaybe<ticket_watch_list_bool_exp>;
};


export type subscription_rootticket_watch_list_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootticket_watch_list_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<ticket_watch_list_stream_cursor_input>>;
  where?: InputMaybe<ticket_watch_list_bool_exp>;
};


export type subscription_rootupdate_versionArgs = {
  distinct_on?: InputMaybe<Array<update_version_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<update_version_order_by>>;
  where?: InputMaybe<update_version_bool_exp>;
};


export type subscription_rootupdate_version_aggregateArgs = {
  distinct_on?: InputMaybe<Array<update_version_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<update_version_order_by>>;
  where?: InputMaybe<update_version_bool_exp>;
};


export type subscription_rootupdate_version_by_pkArgs = {
  version: Scalars['String'];
};


export type subscription_rootupdate_version_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<update_version_stream_cursor_input>>;
  where?: InputMaybe<update_version_bool_exp>;
};


export type subscription_rootuser_rolesArgs = {
  distinct_on?: InputMaybe<Array<user_roles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<user_roles_order_by>>;
  where?: InputMaybe<user_roles_bool_exp>;
};


export type subscription_rootuser_roles_aggregateArgs = {
  distinct_on?: InputMaybe<Array<user_roles_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<user_roles_order_by>>;
  where?: InputMaybe<user_roles_bool_exp>;
};


export type subscription_rootuser_roles_by_pkArgs = {
  id: Scalars['Int'];
};


export type subscription_rootuser_roles_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<user_roles_stream_cursor_input>>;
  where?: InputMaybe<user_roles_bool_exp>;
};


export type subscription_rootusersArgs = {
  distinct_on?: InputMaybe<Array<users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<users_order_by>>;
  where?: InputMaybe<users_bool_exp>;
};


export type subscription_rootusers_aggregateArgs = {
  distinct_on?: InputMaybe<Array<users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<users_order_by>>;
  where?: InputMaybe<users_bool_exp>;
};


export type subscription_rootusers_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootusers_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<users_stream_cursor_input>>;
  where?: InputMaybe<users_bool_exp>;
};


export type subscription_rootworkflows_contact_reasonArgs = {
  distinct_on?: InputMaybe<Array<workflows_contact_reason_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<workflows_contact_reason_order_by>>;
  where?: InputMaybe<workflows_contact_reason_bool_exp>;
};


export type subscription_rootworkflows_contact_reason_aggregateArgs = {
  distinct_on?: InputMaybe<Array<workflows_contact_reason_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<workflows_contact_reason_order_by>>;
  where?: InputMaybe<workflows_contact_reason_bool_exp>;
};


export type subscription_rootworkflows_contact_reason_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootworkflows_contact_reason_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<workflows_contact_reason_stream_cursor_input>>;
  where?: InputMaybe<workflows_contact_reason_bool_exp>;
};


export type subscription_rootworking_hoursArgs = {
  distinct_on?: InputMaybe<Array<working_hours_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<working_hours_order_by>>;
  where?: InputMaybe<working_hours_bool_exp>;
};


export type subscription_rootworking_hours_aggregateArgs = {
  distinct_on?: InputMaybe<Array<working_hours_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<working_hours_order_by>>;
  where?: InputMaybe<working_hours_bool_exp>;
};


export type subscription_rootworking_hours_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootworking_hours_shiftArgs = {
  distinct_on?: InputMaybe<Array<working_hours_shift_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<working_hours_shift_order_by>>;
  where?: InputMaybe<working_hours_shift_bool_exp>;
};


export type subscription_rootworking_hours_shift_aggregateArgs = {
  distinct_on?: InputMaybe<Array<working_hours_shift_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<working_hours_shift_order_by>>;
  where?: InputMaybe<working_hours_shift_bool_exp>;
};


export type subscription_rootworking_hours_shift_by_pkArgs = {
  id: Scalars['bigint'];
};


export type subscription_rootworking_hours_shift_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<working_hours_shift_stream_cursor_input>>;
  where?: InputMaybe<working_hours_shift_bool_exp>;
};


export type subscription_rootworking_hours_streamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<working_hours_stream_cursor_input>>;
  where?: InputMaybe<working_hours_bool_exp>;
};

/** All tags/labels. */
export type tags = {
  __typename?: 'tags';
  /** An object relationship */
  account: accounts;
  account_id: Scalars['bigint'];
  color?: Maybe<Scalars['String']>;
  /** An array relationship */
  conversation_tags: Array<conversation_tags>;
  /** An aggregate relationship */
  conversation_tags_aggregate: conversation_tags_aggregate;
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  created_by?: Maybe<account_agents>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  is_enabled: Scalars['Boolean'];
  level: Scalars['jsonb'];
  name: Scalars['String'];
  smart_tags?: Maybe<Scalars['jsonb']>;
  updated_at: Scalars['timestamptz'];
};


/** All tags/labels. */
export type tagsconversation_tagsArgs = {
  distinct_on?: InputMaybe<Array<conversation_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_tags_order_by>>;
  where?: InputMaybe<conversation_tags_bool_exp>;
};


/** All tags/labels. */
export type tagsconversation_tags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversation_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversation_tags_order_by>>;
  where?: InputMaybe<conversation_tags_bool_exp>;
};


/** All tags/labels. */
export type tagslevelArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** All tags/labels. */
export type tagssmart_tagsArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "tags" */
export type tags_aggregate = {
  __typename?: 'tags_aggregate';
  aggregate?: Maybe<tags_aggregate_fields>;
  nodes: Array<tags>;
};

/** aggregate fields of "tags" */
export type tags_aggregate_fields = {
  __typename?: 'tags_aggregate_fields';
  avg?: Maybe<tags_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<tags_max_fields>;
  min?: Maybe<tags_min_fields>;
  stddev?: Maybe<tags_stddev_fields>;
  stddev_pop?: Maybe<tags_stddev_pop_fields>;
  stddev_samp?: Maybe<tags_stddev_samp_fields>;
  sum?: Maybe<tags_sum_fields>;
  var_pop?: Maybe<tags_var_pop_fields>;
  var_samp?: Maybe<tags_var_samp_fields>;
  variance?: Maybe<tags_variance_fields>;
};


/** aggregate fields of "tags" */
export type tags_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<tags_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type tags_append_input = {
  level?: InputMaybe<Scalars['jsonb']>;
  smart_tags?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type tags_avg_fields = {
  __typename?: 'tags_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "tags". All fields are combined with a logical 'AND'. */
export type tags_bool_exp = {
  _and?: InputMaybe<Array<tags_bool_exp>>;
  _not?: InputMaybe<tags_bool_exp>;
  _or?: InputMaybe<Array<tags_bool_exp>>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  color?: InputMaybe<String_comparison_exp>;
  conversation_tags?: InputMaybe<conversation_tags_bool_exp>;
  conversation_tags_aggregate?: InputMaybe<conversation_tags_aggregate_bool_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  created_by?: InputMaybe<account_agents_bool_exp>;
  created_by_user_id?: InputMaybe<bigint_comparison_exp>;
  description?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  is_enabled?: InputMaybe<Boolean_comparison_exp>;
  level?: InputMaybe<jsonb_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  smart_tags?: InputMaybe<jsonb_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "tags" */
export enum tags_constraint {
  /** unique or primary key constraint on columns "id" */
  tags_pkey = 'tags_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type tags_delete_at_path_input = {
  level?: InputMaybe<Array<Scalars['String']>>;
  smart_tags?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type tags_delete_elem_input = {
  level?: InputMaybe<Scalars['Int']>;
  smart_tags?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type tags_delete_key_input = {
  level?: InputMaybe<Scalars['String']>;
  smart_tags?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tags" */
export type tags_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tags" */
export type tags_insert_input = {
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['bigint']>;
  color?: InputMaybe<Scalars['String']>;
  conversation_tags?: InputMaybe<conversation_tags_arr_rel_insert_input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<account_agents_obj_rel_insert_input>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['jsonb']>;
  name?: InputMaybe<Scalars['String']>;
  smart_tags?: InputMaybe<Scalars['jsonb']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type tags_max_fields = {
  __typename?: 'tags_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  color?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type tags_min_fields = {
  __typename?: 'tags_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  color?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "tags" */
export type tags_mutation_response = {
  __typename?: 'tags_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<tags>;
};

/** input type for inserting object relation for remote table "tags" */
export type tags_obj_rel_insert_input = {
  data: tags_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<tags_on_conflict>;
};

/** on_conflict condition type for table "tags" */
export type tags_on_conflict = {
  constraint: tags_constraint;
  update_columns?: Array<tags_update_column>;
  where?: InputMaybe<tags_bool_exp>;
};

/** Ordering options when selecting data from "tags". */
export type tags_order_by = {
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  color?: InputMaybe<order_by>;
  conversation_tags_aggregate?: InputMaybe<conversation_tags_aggregate_order_by>;
  created_at?: InputMaybe<order_by>;
  created_by?: InputMaybe<account_agents_order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  description?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  is_enabled?: InputMaybe<order_by>;
  level?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  smart_tags?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: tags */
export type tags_pk_columns_input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type tags_prepend_input = {
  level?: InputMaybe<Scalars['jsonb']>;
  smart_tags?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "tags" */
export enum tags_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  color = 'color',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  description = 'description',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  level = 'level',
  /** column name */
  name = 'name',
  /** column name */
  smart_tags = 'smart_tags',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "tags" */
export type tags_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  color?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['jsonb']>;
  name?: InputMaybe<Scalars['String']>;
  smart_tags?: InputMaybe<Scalars['jsonb']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type tags_stddev_fields = {
  __typename?: 'tags_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type tags_stddev_pop_fields = {
  __typename?: 'tags_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type tags_stddev_samp_fields = {
  __typename?: 'tags_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "tags" */
export type tags_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: tags_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type tags_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  color?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['jsonb']>;
  name?: InputMaybe<Scalars['String']>;
  smart_tags?: InputMaybe<Scalars['jsonb']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type tags_sum_fields = {
  __typename?: 'tags_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "tags" */
export enum tags_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  color = 'color',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  description = 'description',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  level = 'level',
  /** column name */
  name = 'name',
  /** column name */
  smart_tags = 'smart_tags',
  /** column name */
  updated_at = 'updated_at'
}

export type tags_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<tags_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<tags_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<tags_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<tags_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<tags_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<tags_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<tags_set_input>;
  /** filter the rows which have to be updated */
  where: tags_bool_exp;
};

/** aggregate var_pop on columns */
export type tags_var_pop_fields = {
  __typename?: 'tags_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type tags_var_samp_fields = {
  __typename?: 'tags_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type tags_variance_fields = {
  __typename?: 'tags_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Teams assigned to specific inboxes. */
export type team_inboxes = {
  __typename?: 'team_inboxes';
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  /** An object relationship */
  inbox: inboxes;
  inbox_id: Scalars['bigint'];
  /** An object relationship */
  team: teams;
  team_id: Scalars['bigint'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "team_inboxes" */
export type team_inboxes_aggregate = {
  __typename?: 'team_inboxes_aggregate';
  aggregate?: Maybe<team_inboxes_aggregate_fields>;
  nodes: Array<team_inboxes>;
};

export type team_inboxes_aggregate_bool_exp = {
  count?: InputMaybe<team_inboxes_aggregate_bool_exp_count>;
};

export type team_inboxes_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<team_inboxes_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<team_inboxes_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "team_inboxes" */
export type team_inboxes_aggregate_fields = {
  __typename?: 'team_inboxes_aggregate_fields';
  avg?: Maybe<team_inboxes_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<team_inboxes_max_fields>;
  min?: Maybe<team_inboxes_min_fields>;
  stddev?: Maybe<team_inboxes_stddev_fields>;
  stddev_pop?: Maybe<team_inboxes_stddev_pop_fields>;
  stddev_samp?: Maybe<team_inboxes_stddev_samp_fields>;
  sum?: Maybe<team_inboxes_sum_fields>;
  var_pop?: Maybe<team_inboxes_var_pop_fields>;
  var_samp?: Maybe<team_inboxes_var_samp_fields>;
  variance?: Maybe<team_inboxes_variance_fields>;
};


/** aggregate fields of "team_inboxes" */
export type team_inboxes_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<team_inboxes_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "team_inboxes" */
export type team_inboxes_aggregate_order_by = {
  avg?: InputMaybe<team_inboxes_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<team_inboxes_max_order_by>;
  min?: InputMaybe<team_inboxes_min_order_by>;
  stddev?: InputMaybe<team_inboxes_stddev_order_by>;
  stddev_pop?: InputMaybe<team_inboxes_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<team_inboxes_stddev_samp_order_by>;
  sum?: InputMaybe<team_inboxes_sum_order_by>;
  var_pop?: InputMaybe<team_inboxes_var_pop_order_by>;
  var_samp?: InputMaybe<team_inboxes_var_samp_order_by>;
  variance?: InputMaybe<team_inboxes_variance_order_by>;
};

/** input type for inserting array relation for remote table "team_inboxes" */
export type team_inboxes_arr_rel_insert_input = {
  data: Array<team_inboxes_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<team_inboxes_on_conflict>;
};

/** aggregate avg on columns */
export type team_inboxes_avg_fields = {
  __typename?: 'team_inboxes_avg_fields';
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "team_inboxes" */
export type team_inboxes_avg_order_by = {
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "team_inboxes". All fields are combined with a logical 'AND'. */
export type team_inboxes_bool_exp = {
  _and?: InputMaybe<Array<team_inboxes_bool_exp>>;
  _not?: InputMaybe<team_inboxes_bool_exp>;
  _or?: InputMaybe<Array<team_inboxes_bool_exp>>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  inbox?: InputMaybe<inboxes_bool_exp>;
  inbox_id?: InputMaybe<bigint_comparison_exp>;
  team?: InputMaybe<teams_bool_exp>;
  team_id?: InputMaybe<bigint_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "team_inboxes" */
export enum team_inboxes_constraint {
  /** unique or primary key constraint on columns "id" */
  team_inboxes_pkey = 'team_inboxes_pkey',
  /** unique or primary key constraint on columns "inbox_id", "team_id" */
  team_inboxes_team_id_inbox_id_key = 'team_inboxes_team_id_inbox_id_key'
}

/** input type for incrementing numeric columns in table "team_inboxes" */
export type team_inboxes_inc_input = {
  id?: InputMaybe<Scalars['bigint']>;
  inbox_id?: InputMaybe<Scalars['bigint']>;
  team_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "team_inboxes" */
export type team_inboxes_insert_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox?: InputMaybe<inboxes_obj_rel_insert_input>;
  inbox_id?: InputMaybe<Scalars['bigint']>;
  team?: InputMaybe<teams_obj_rel_insert_input>;
  team_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type team_inboxes_max_fields = {
  __typename?: 'team_inboxes_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  inbox_id?: Maybe<Scalars['bigint']>;
  team_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "team_inboxes" */
export type team_inboxes_max_order_by = {
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type team_inboxes_min_fields = {
  __typename?: 'team_inboxes_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  inbox_id?: Maybe<Scalars['bigint']>;
  team_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "team_inboxes" */
export type team_inboxes_min_order_by = {
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** response of any mutation on the table "team_inboxes" */
export type team_inboxes_mutation_response = {
  __typename?: 'team_inboxes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<team_inboxes>;
};

/** on_conflict condition type for table "team_inboxes" */
export type team_inboxes_on_conflict = {
  constraint: team_inboxes_constraint;
  update_columns?: Array<team_inboxes_update_column>;
  where?: InputMaybe<team_inboxes_bool_exp>;
};

/** Ordering options when selecting data from "team_inboxes". */
export type team_inboxes_order_by = {
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox?: InputMaybe<inboxes_order_by>;
  inbox_id?: InputMaybe<order_by>;
  team?: InputMaybe<teams_order_by>;
  team_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: team_inboxes */
export type team_inboxes_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "team_inboxes" */
export enum team_inboxes_select_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  inbox_id = 'inbox_id',
  /** column name */
  team_id = 'team_id',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "team_inboxes" */
export type team_inboxes_set_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox_id?: InputMaybe<Scalars['bigint']>;
  team_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type team_inboxes_stddev_fields = {
  __typename?: 'team_inboxes_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "team_inboxes" */
export type team_inboxes_stddev_order_by = {
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type team_inboxes_stddev_pop_fields = {
  __typename?: 'team_inboxes_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "team_inboxes" */
export type team_inboxes_stddev_pop_order_by = {
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type team_inboxes_stddev_samp_fields = {
  __typename?: 'team_inboxes_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "team_inboxes" */
export type team_inboxes_stddev_samp_order_by = {
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "team_inboxes" */
export type team_inboxes_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: team_inboxes_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type team_inboxes_stream_cursor_value_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox_id?: InputMaybe<Scalars['bigint']>;
  team_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type team_inboxes_sum_fields = {
  __typename?: 'team_inboxes_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  inbox_id?: Maybe<Scalars['bigint']>;
  team_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "team_inboxes" */
export type team_inboxes_sum_order_by = {
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
};

/** update columns of table "team_inboxes" */
export enum team_inboxes_update_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  inbox_id = 'inbox_id',
  /** column name */
  team_id = 'team_id',
  /** column name */
  updated_at = 'updated_at'
}

export type team_inboxes_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<team_inboxes_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<team_inboxes_set_input>;
  /** filter the rows which have to be updated */
  where: team_inboxes_bool_exp;
};

/** aggregate var_pop on columns */
export type team_inboxes_var_pop_fields = {
  __typename?: 'team_inboxes_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "team_inboxes" */
export type team_inboxes_var_pop_order_by = {
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type team_inboxes_var_samp_fields = {
  __typename?: 'team_inboxes_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "team_inboxes" */
export type team_inboxes_var_samp_order_by = {
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type team_inboxes_variance_fields = {
  __typename?: 'team_inboxes_variance_fields';
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "team_inboxes" */
export type team_inboxes_variance_order_by = {
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
};

/** Members added to different teams. */
export type team_members = {
  __typename?: 'team_members';
  /** An object relationship */
  agent?: Maybe<account_agents>;
  approval_enabled: Scalars['Boolean'];
  auto_assign_enabled: Scalars['Boolean'];
  /** A computed field, executes function "team_member_availabilty" */
  available?: Maybe<Scalars['Boolean']>;
  /** An array relationship */
  conversations: Array<conversations>;
  /** An aggregate relationship */
  conversations_aggregate: conversations_aggregate;
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  max_conversation_queue: Scalars['Int'];
  /** An object relationship */
  team: teams;
  team_id: Scalars['bigint'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: users;
  user_id: Scalars['bigint'];
};


/** Members added to different teams. */
export type team_membersconversationsArgs = {
  distinct_on?: InputMaybe<Array<conversations_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversations_order_by>>;
  where?: InputMaybe<conversations_bool_exp>;
};


/** Members added to different teams. */
export type team_membersconversations_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversations_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversations_order_by>>;
  where?: InputMaybe<conversations_bool_exp>;
};

/** aggregated selection of "team_members" */
export type team_members_aggregate = {
  __typename?: 'team_members_aggregate';
  aggregate?: Maybe<team_members_aggregate_fields>;
  nodes: Array<team_members>;
};

export type team_members_aggregate_bool_exp = {
  bool_and?: InputMaybe<team_members_aggregate_bool_exp_bool_and>;
  bool_or?: InputMaybe<team_members_aggregate_bool_exp_bool_or>;
  count?: InputMaybe<team_members_aggregate_bool_exp_count>;
};

export type team_members_aggregate_bool_exp_bool_and = {
  arguments: team_members_select_column_team_members_aggregate_bool_exp_bool_and_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<team_members_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type team_members_aggregate_bool_exp_bool_or = {
  arguments: team_members_select_column_team_members_aggregate_bool_exp_bool_or_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<team_members_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type team_members_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<team_members_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<team_members_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "team_members" */
export type team_members_aggregate_fields = {
  __typename?: 'team_members_aggregate_fields';
  avg?: Maybe<team_members_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<team_members_max_fields>;
  min?: Maybe<team_members_min_fields>;
  stddev?: Maybe<team_members_stddev_fields>;
  stddev_pop?: Maybe<team_members_stddev_pop_fields>;
  stddev_samp?: Maybe<team_members_stddev_samp_fields>;
  sum?: Maybe<team_members_sum_fields>;
  var_pop?: Maybe<team_members_var_pop_fields>;
  var_samp?: Maybe<team_members_var_samp_fields>;
  variance?: Maybe<team_members_variance_fields>;
};


/** aggregate fields of "team_members" */
export type team_members_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<team_members_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "team_members" */
export type team_members_aggregate_order_by = {
  avg?: InputMaybe<team_members_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<team_members_max_order_by>;
  min?: InputMaybe<team_members_min_order_by>;
  stddev?: InputMaybe<team_members_stddev_order_by>;
  stddev_pop?: InputMaybe<team_members_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<team_members_stddev_samp_order_by>;
  sum?: InputMaybe<team_members_sum_order_by>;
  var_pop?: InputMaybe<team_members_var_pop_order_by>;
  var_samp?: InputMaybe<team_members_var_samp_order_by>;
  variance?: InputMaybe<team_members_variance_order_by>;
};

/** input type for inserting array relation for remote table "team_members" */
export type team_members_arr_rel_insert_input = {
  data: Array<team_members_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<team_members_on_conflict>;
};

/** aggregate avg on columns */
export type team_members_avg_fields = {
  __typename?: 'team_members_avg_fields';
  id?: Maybe<Scalars['Float']>;
  max_conversation_queue?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "team_members" */
export type team_members_avg_order_by = {
  id?: InputMaybe<order_by>;
  max_conversation_queue?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "team_members". All fields are combined with a logical 'AND'. */
export type team_members_bool_exp = {
  _and?: InputMaybe<Array<team_members_bool_exp>>;
  _not?: InputMaybe<team_members_bool_exp>;
  _or?: InputMaybe<Array<team_members_bool_exp>>;
  agent?: InputMaybe<account_agents_bool_exp>;
  approval_enabled?: InputMaybe<Boolean_comparison_exp>;
  auto_assign_enabled?: InputMaybe<Boolean_comparison_exp>;
  available?: InputMaybe<Boolean_comparison_exp>;
  conversations?: InputMaybe<conversations_bool_exp>;
  conversations_aggregate?: InputMaybe<conversations_aggregate_bool_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  max_conversation_queue?: InputMaybe<Int_comparison_exp>;
  team?: InputMaybe<teams_bool_exp>;
  team_id?: InputMaybe<bigint_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  user?: InputMaybe<users_bool_exp>;
  user_id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "team_members" */
export enum team_members_constraint {
  /** unique or primary key constraint on columns "id" */
  team_members_pkey = 'team_members_pkey',
  /** unique or primary key constraint on columns "user_id", "team_id" */
  team_members_team_id_user_id_key = 'team_members_team_id_user_id_key'
}

/** input type for incrementing numeric columns in table "team_members" */
export type team_members_inc_input = {
  id?: InputMaybe<Scalars['bigint']>;
  max_conversation_queue?: InputMaybe<Scalars['Int']>;
  team_id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "team_members" */
export type team_members_insert_input = {
  agent?: InputMaybe<account_agents_obj_rel_insert_input>;
  approval_enabled?: InputMaybe<Scalars['Boolean']>;
  auto_assign_enabled?: InputMaybe<Scalars['Boolean']>;
  conversations?: InputMaybe<conversations_arr_rel_insert_input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  max_conversation_queue?: InputMaybe<Scalars['Int']>;
  team?: InputMaybe<teams_obj_rel_insert_input>;
  team_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<users_obj_rel_insert_input>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type team_members_max_fields = {
  __typename?: 'team_members_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  max_conversation_queue?: Maybe<Scalars['Int']>;
  team_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "team_members" */
export type team_members_max_order_by = {
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  max_conversation_queue?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type team_members_min_fields = {
  __typename?: 'team_members_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  max_conversation_queue?: Maybe<Scalars['Int']>;
  team_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "team_members" */
export type team_members_min_order_by = {
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  max_conversation_queue?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** response of any mutation on the table "team_members" */
export type team_members_mutation_response = {
  __typename?: 'team_members_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<team_members>;
};

/** input type for inserting object relation for remote table "team_members" */
export type team_members_obj_rel_insert_input = {
  data: team_members_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<team_members_on_conflict>;
};

/** on_conflict condition type for table "team_members" */
export type team_members_on_conflict = {
  constraint: team_members_constraint;
  update_columns?: Array<team_members_update_column>;
  where?: InputMaybe<team_members_bool_exp>;
};

/** Ordering options when selecting data from "team_members". */
export type team_members_order_by = {
  agent?: InputMaybe<account_agents_order_by>;
  approval_enabled?: InputMaybe<order_by>;
  auto_assign_enabled?: InputMaybe<order_by>;
  available?: InputMaybe<order_by>;
  conversations_aggregate?: InputMaybe<conversations_aggregate_order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  max_conversation_queue?: InputMaybe<order_by>;
  team?: InputMaybe<teams_order_by>;
  team_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user?: InputMaybe<users_order_by>;
  user_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: team_members */
export type team_members_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "team_members" */
export enum team_members_select_column {
  /** column name */
  approval_enabled = 'approval_enabled',
  /** column name */
  auto_assign_enabled = 'auto_assign_enabled',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  max_conversation_queue = 'max_conversation_queue',
  /** column name */
  team_id = 'team_id',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

/** select "team_members_aggregate_bool_exp_bool_and_arguments_columns" columns of table "team_members" */
export enum team_members_select_column_team_members_aggregate_bool_exp_bool_and_arguments_columns {
  /** column name */
  approval_enabled = 'approval_enabled',
  /** column name */
  auto_assign_enabled = 'auto_assign_enabled'
}

/** select "team_members_aggregate_bool_exp_bool_or_arguments_columns" columns of table "team_members" */
export enum team_members_select_column_team_members_aggregate_bool_exp_bool_or_arguments_columns {
  /** column name */
  approval_enabled = 'approval_enabled',
  /** column name */
  auto_assign_enabled = 'auto_assign_enabled'
}

/** input type for updating data in table "team_members" */
export type team_members_set_input = {
  approval_enabled?: InputMaybe<Scalars['Boolean']>;
  auto_assign_enabled?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  max_conversation_queue?: InputMaybe<Scalars['Int']>;
  team_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type team_members_stddev_fields = {
  __typename?: 'team_members_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  max_conversation_queue?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "team_members" */
export type team_members_stddev_order_by = {
  id?: InputMaybe<order_by>;
  max_conversation_queue?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type team_members_stddev_pop_fields = {
  __typename?: 'team_members_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  max_conversation_queue?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "team_members" */
export type team_members_stddev_pop_order_by = {
  id?: InputMaybe<order_by>;
  max_conversation_queue?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type team_members_stddev_samp_fields = {
  __typename?: 'team_members_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  max_conversation_queue?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "team_members" */
export type team_members_stddev_samp_order_by = {
  id?: InputMaybe<order_by>;
  max_conversation_queue?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "team_members" */
export type team_members_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: team_members_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type team_members_stream_cursor_value_input = {
  approval_enabled?: InputMaybe<Scalars['Boolean']>;
  auto_assign_enabled?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  max_conversation_queue?: InputMaybe<Scalars['Int']>;
  team_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type team_members_sum_fields = {
  __typename?: 'team_members_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  max_conversation_queue?: Maybe<Scalars['Int']>;
  team_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "team_members" */
export type team_members_sum_order_by = {
  id?: InputMaybe<order_by>;
  max_conversation_queue?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** update columns of table "team_members" */
export enum team_members_update_column {
  /** column name */
  approval_enabled = 'approval_enabled',
  /** column name */
  auto_assign_enabled = 'auto_assign_enabled',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  max_conversation_queue = 'max_conversation_queue',
  /** column name */
  team_id = 'team_id',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

export type team_members_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<team_members_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<team_members_set_input>;
  /** filter the rows which have to be updated */
  where: team_members_bool_exp;
};

/** aggregate var_pop on columns */
export type team_members_var_pop_fields = {
  __typename?: 'team_members_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  max_conversation_queue?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "team_members" */
export type team_members_var_pop_order_by = {
  id?: InputMaybe<order_by>;
  max_conversation_queue?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type team_members_var_samp_fields = {
  __typename?: 'team_members_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  max_conversation_queue?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "team_members" */
export type team_members_var_samp_order_by = {
  id?: InputMaybe<order_by>;
  max_conversation_queue?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type team_members_variance_fields = {
  __typename?: 'team_members_variance_fields';
  id?: Maybe<Scalars['Float']>;
  max_conversation_queue?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "team_members" */
export type team_members_variance_order_by = {
  id?: InputMaybe<order_by>;
  max_conversation_queue?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** All teams. */
export type teams = {
  __typename?: 'teams';
  accept_calls: Scalars['Boolean'];
  /** An object relationship */
  account: accounts;
  account_id: Scalars['bigint'];
  allow_auto_assign?: Maybe<Scalars['Boolean']>;
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  created_by?: Maybe<account_agents>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  is_enabled: Scalars['Boolean'];
  name: Scalars['String'];
  /** An array relationship */
  team_inboxes: Array<team_inboxes>;
  /** An aggregate relationship */
  team_inboxes_aggregate: team_inboxes_aggregate;
  /** An array relationship */
  team_members: Array<team_members>;
  /** An aggregate relationship */
  team_members_aggregate: team_members_aggregate;
  /** An array relationship */
  tickets: Array<ticket>;
  /** An aggregate relationship */
  tickets_aggregate: ticket_aggregate;
  /** operation, anti_fraud, product, engineering, compliance, card_payment_issue, back_office */
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  updated_by?: Maybe<account_agents>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};


/** All teams. */
export type teamsteam_inboxesArgs = {
  distinct_on?: InputMaybe<Array<team_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_inboxes_order_by>>;
  where?: InputMaybe<team_inboxes_bool_exp>;
};


/** All teams. */
export type teamsteam_inboxes_aggregateArgs = {
  distinct_on?: InputMaybe<Array<team_inboxes_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_inboxes_order_by>>;
  where?: InputMaybe<team_inboxes_bool_exp>;
};


/** All teams. */
export type teamsteam_membersArgs = {
  distinct_on?: InputMaybe<Array<team_members_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_members_order_by>>;
  where?: InputMaybe<team_members_bool_exp>;
};


/** All teams. */
export type teamsteam_members_aggregateArgs = {
  distinct_on?: InputMaybe<Array<team_members_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_members_order_by>>;
  where?: InputMaybe<team_members_bool_exp>;
};


/** All teams. */
export type teamsticketsArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};


/** All teams. */
export type teamstickets_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};

/** aggregated selection of "teams" */
export type teams_aggregate = {
  __typename?: 'teams_aggregate';
  aggregate?: Maybe<teams_aggregate_fields>;
  nodes: Array<teams>;
};

export type teams_aggregate_bool_exp = {
  bool_and?: InputMaybe<teams_aggregate_bool_exp_bool_and>;
  bool_or?: InputMaybe<teams_aggregate_bool_exp_bool_or>;
  count?: InputMaybe<teams_aggregate_bool_exp_count>;
};

export type teams_aggregate_bool_exp_bool_and = {
  arguments: teams_select_column_teams_aggregate_bool_exp_bool_and_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<teams_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type teams_aggregate_bool_exp_bool_or = {
  arguments: teams_select_column_teams_aggregate_bool_exp_bool_or_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<teams_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type teams_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<teams_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<teams_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "teams" */
export type teams_aggregate_fields = {
  __typename?: 'teams_aggregate_fields';
  avg?: Maybe<teams_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<teams_max_fields>;
  min?: Maybe<teams_min_fields>;
  stddev?: Maybe<teams_stddev_fields>;
  stddev_pop?: Maybe<teams_stddev_pop_fields>;
  stddev_samp?: Maybe<teams_stddev_samp_fields>;
  sum?: Maybe<teams_sum_fields>;
  var_pop?: Maybe<teams_var_pop_fields>;
  var_samp?: Maybe<teams_var_samp_fields>;
  variance?: Maybe<teams_variance_fields>;
};


/** aggregate fields of "teams" */
export type teams_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<teams_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "teams" */
export type teams_aggregate_order_by = {
  avg?: InputMaybe<teams_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<teams_max_order_by>;
  min?: InputMaybe<teams_min_order_by>;
  stddev?: InputMaybe<teams_stddev_order_by>;
  stddev_pop?: InputMaybe<teams_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<teams_stddev_samp_order_by>;
  sum?: InputMaybe<teams_sum_order_by>;
  var_pop?: InputMaybe<teams_var_pop_order_by>;
  var_samp?: InputMaybe<teams_var_samp_order_by>;
  variance?: InputMaybe<teams_variance_order_by>;
};

/** input type for inserting array relation for remote table "teams" */
export type teams_arr_rel_insert_input = {
  data: Array<teams_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<teams_on_conflict>;
};

/** aggregate avg on columns */
export type teams_avg_fields = {
  __typename?: 'teams_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "teams" */
export type teams_avg_order_by = {
  account_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "teams". All fields are combined with a logical 'AND'. */
export type teams_bool_exp = {
  _and?: InputMaybe<Array<teams_bool_exp>>;
  _not?: InputMaybe<teams_bool_exp>;
  _or?: InputMaybe<Array<teams_bool_exp>>;
  accept_calls?: InputMaybe<Boolean_comparison_exp>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  allow_auto_assign?: InputMaybe<Boolean_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  created_by?: InputMaybe<account_agents_bool_exp>;
  created_by_user_id?: InputMaybe<bigint_comparison_exp>;
  description?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  is_enabled?: InputMaybe<Boolean_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  team_inboxes?: InputMaybe<team_inboxes_bool_exp>;
  team_inboxes_aggregate?: InputMaybe<team_inboxes_aggregate_bool_exp>;
  team_members?: InputMaybe<team_members_bool_exp>;
  team_members_aggregate?: InputMaybe<team_members_aggregate_bool_exp>;
  tickets?: InputMaybe<ticket_bool_exp>;
  tickets_aggregate?: InputMaybe<ticket_aggregate_bool_exp>;
  type?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  updated_by?: InputMaybe<account_agents_bool_exp>;
  updated_by_user_id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "teams" */
export enum teams_constraint {
  /** unique or primary key constraint on columns "account_id", "type" */
  teams_account_id_type_key = 'teams_account_id_type_key',
  /** unique or primary key constraint on columns "account_id", "name" */
  teams_name_account_id_idx = 'teams_name_account_id_idx',
  /** unique or primary key constraint on columns "id" */
  teams_pkey = 'teams_pkey'
}

/** input type for incrementing numeric columns in table "teams" */
export type teams_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "teams" */
export type teams_insert_input = {
  accept_calls?: InputMaybe<Scalars['Boolean']>;
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['bigint']>;
  allow_auto_assign?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<account_agents_obj_rel_insert_input>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  team_inboxes?: InputMaybe<team_inboxes_arr_rel_insert_input>;
  team_members?: InputMaybe<team_members_arr_rel_insert_input>;
  tickets?: InputMaybe<ticket_arr_rel_insert_input>;
  /** operation, anti_fraud, product, engineering, compliance, card_payment_issue, back_office */
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  updated_by?: InputMaybe<account_agents_obj_rel_insert_input>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type teams_max_fields = {
  __typename?: 'teams_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  /** operation, anti_fraud, product, engineering, compliance, card_payment_issue, back_office */
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "teams" */
export type teams_max_order_by = {
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  description?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  /** operation, anti_fraud, product, engineering, compliance, card_payment_issue, back_office */
  type?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type teams_min_fields = {
  __typename?: 'teams_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  /** operation, anti_fraud, product, engineering, compliance, card_payment_issue, back_office */
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "teams" */
export type teams_min_order_by = {
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  description?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  /** operation, anti_fraud, product, engineering, compliance, card_payment_issue, back_office */
  type?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** response of any mutation on the table "teams" */
export type teams_mutation_response = {
  __typename?: 'teams_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<teams>;
};

/** input type for inserting object relation for remote table "teams" */
export type teams_obj_rel_insert_input = {
  data: teams_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<teams_on_conflict>;
};

/** on_conflict condition type for table "teams" */
export type teams_on_conflict = {
  constraint: teams_constraint;
  update_columns?: Array<teams_update_column>;
  where?: InputMaybe<teams_bool_exp>;
};

/** Ordering options when selecting data from "teams". */
export type teams_order_by = {
  accept_calls?: InputMaybe<order_by>;
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  allow_auto_assign?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by?: InputMaybe<account_agents_order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  description?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  is_enabled?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  team_inboxes_aggregate?: InputMaybe<team_inboxes_aggregate_order_by>;
  team_members_aggregate?: InputMaybe<team_members_aggregate_order_by>;
  tickets_aggregate?: InputMaybe<ticket_aggregate_order_by>;
  type?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  updated_by?: InputMaybe<account_agents_order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: teams */
export type teams_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "teams" */
export enum teams_select_column {
  /** column name */
  accept_calls = 'accept_calls',
  /** column name */
  account_id = 'account_id',
  /** column name */
  allow_auto_assign = 'allow_auto_assign',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  description = 'description',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  name = 'name',
  /** column name */
  type = 'type',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  updated_by_user_id = 'updated_by_user_id'
}

/** select "teams_aggregate_bool_exp_bool_and_arguments_columns" columns of table "teams" */
export enum teams_select_column_teams_aggregate_bool_exp_bool_and_arguments_columns {
  /** column name */
  accept_calls = 'accept_calls',
  /** column name */
  allow_auto_assign = 'allow_auto_assign',
  /** column name */
  is_enabled = 'is_enabled'
}

/** select "teams_aggregate_bool_exp_bool_or_arguments_columns" columns of table "teams" */
export enum teams_select_column_teams_aggregate_bool_exp_bool_or_arguments_columns {
  /** column name */
  accept_calls = 'accept_calls',
  /** column name */
  allow_auto_assign = 'allow_auto_assign',
  /** column name */
  is_enabled = 'is_enabled'
}

/** input type for updating data in table "teams" */
export type teams_set_input = {
  accept_calls?: InputMaybe<Scalars['Boolean']>;
  account_id?: InputMaybe<Scalars['bigint']>;
  allow_auto_assign?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  /** operation, anti_fraud, product, engineering, compliance, card_payment_issue, back_office */
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type teams_stddev_fields = {
  __typename?: 'teams_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "teams" */
export type teams_stddev_order_by = {
  account_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type teams_stddev_pop_fields = {
  __typename?: 'teams_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "teams" */
export type teams_stddev_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type teams_stddev_samp_fields = {
  __typename?: 'teams_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "teams" */
export type teams_stddev_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "teams" */
export type teams_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: teams_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type teams_stream_cursor_value_input = {
  accept_calls?: InputMaybe<Scalars['Boolean']>;
  account_id?: InputMaybe<Scalars['bigint']>;
  allow_auto_assign?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  /** operation, anti_fraud, product, engineering, compliance, card_payment_issue, back_office */
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type teams_sum_fields = {
  __typename?: 'teams_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "teams" */
export type teams_sum_order_by = {
  account_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** update columns of table "teams" */
export enum teams_update_column {
  /** column name */
  accept_calls = 'accept_calls',
  /** column name */
  account_id = 'account_id',
  /** column name */
  allow_auto_assign = 'allow_auto_assign',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  description = 'description',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  name = 'name',
  /** column name */
  type = 'type',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  updated_by_user_id = 'updated_by_user_id'
}

export type teams_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<teams_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<teams_set_input>;
  /** filter the rows which have to be updated */
  where: teams_bool_exp;
};

/** aggregate var_pop on columns */
export type teams_var_pop_fields = {
  __typename?: 'teams_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "teams" */
export type teams_var_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type teams_var_samp_fields = {
  __typename?: 'teams_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "teams" */
export type teams_var_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type teams_variance_fields = {
  __typename?: 'teams_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "teams" */
export type teams_variance_order_by = {
  account_id?: InputMaybe<order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** SMS templates for ticket */
export type template_sms = {
  __typename?: 'template_sms';
  account_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  is_enabled: Scalars['Boolean'];
  sms: Scalars['jsonb'];
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status: Scalars['Int'];
  type: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** SMS templates for ticket */
export type template_smssmsArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "template_sms" */
export type template_sms_aggregate = {
  __typename?: 'template_sms_aggregate';
  aggregate?: Maybe<template_sms_aggregate_fields>;
  nodes: Array<template_sms>;
};

/** aggregate fields of "template_sms" */
export type template_sms_aggregate_fields = {
  __typename?: 'template_sms_aggregate_fields';
  avg?: Maybe<template_sms_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<template_sms_max_fields>;
  min?: Maybe<template_sms_min_fields>;
  stddev?: Maybe<template_sms_stddev_fields>;
  stddev_pop?: Maybe<template_sms_stddev_pop_fields>;
  stddev_samp?: Maybe<template_sms_stddev_samp_fields>;
  sum?: Maybe<template_sms_sum_fields>;
  var_pop?: Maybe<template_sms_var_pop_fields>;
  var_samp?: Maybe<template_sms_var_samp_fields>;
  variance?: Maybe<template_sms_variance_fields>;
};


/** aggregate fields of "template_sms" */
export type template_sms_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<template_sms_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type template_sms_append_input = {
  sms?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type template_sms_avg_fields = {
  __typename?: 'template_sms_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "template_sms". All fields are combined with a logical 'AND'. */
export type template_sms_bool_exp = {
  _and?: InputMaybe<Array<template_sms_bool_exp>>;
  _not?: InputMaybe<template_sms_bool_exp>;
  _or?: InputMaybe<Array<template_sms_bool_exp>>;
  account_id?: InputMaybe<Int_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  is_enabled?: InputMaybe<Boolean_comparison_exp>;
  sms?: InputMaybe<jsonb_comparison_exp>;
  status?: InputMaybe<Int_comparison_exp>;
  type?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "template_sms" */
export enum template_sms_constraint {
  /** unique or primary key constraint on columns "id" */
  template_sms_pkey = 'template_sms_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type template_sms_delete_at_path_input = {
  sms?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type template_sms_delete_elem_input = {
  sms?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type template_sms_delete_key_input = {
  sms?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "template_sms" */
export type template_sms_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "template_sms" */
export type template_sms_insert_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  sms?: InputMaybe<Scalars['jsonb']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type template_sms_max_fields = {
  __typename?: 'template_sms_max_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type template_sms_min_fields = {
  __typename?: 'template_sms_min_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "template_sms" */
export type template_sms_mutation_response = {
  __typename?: 'template_sms_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<template_sms>;
};

/** on_conflict condition type for table "template_sms" */
export type template_sms_on_conflict = {
  constraint: template_sms_constraint;
  update_columns?: Array<template_sms_update_column>;
  where?: InputMaybe<template_sms_bool_exp>;
};

/** Ordering options when selecting data from "template_sms". */
export type template_sms_order_by = {
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  is_enabled?: InputMaybe<order_by>;
  sms?: InputMaybe<order_by>;
  status?: InputMaybe<order_by>;
  type?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: template_sms */
export type template_sms_pk_columns_input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type template_sms_prepend_input = {
  sms?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "template_sms" */
export enum template_sms_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  sms = 'sms',
  /** column name */
  status = 'status',
  /** column name */
  type = 'type',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "template_sms" */
export type template_sms_set_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  sms?: InputMaybe<Scalars['jsonb']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type template_sms_stddev_fields = {
  __typename?: 'template_sms_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type template_sms_stddev_pop_fields = {
  __typename?: 'template_sms_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type template_sms_stddev_samp_fields = {
  __typename?: 'template_sms_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "template_sms" */
export type template_sms_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: template_sms_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type template_sms_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  is_enabled?: InputMaybe<Scalars['Boolean']>;
  sms?: InputMaybe<Scalars['jsonb']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type template_sms_sum_fields = {
  __typename?: 'template_sms_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Int']>;
};

/** update columns of table "template_sms" */
export enum template_sms_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  is_enabled = 'is_enabled',
  /** column name */
  sms = 'sms',
  /** column name */
  status = 'status',
  /** column name */
  type = 'type',
  /** column name */
  updated_at = 'updated_at'
}

export type template_sms_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<template_sms_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<template_sms_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<template_sms_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<template_sms_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<template_sms_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<template_sms_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<template_sms_set_input>;
  /** filter the rows which have to be updated */
  where: template_sms_bool_exp;
};

/** aggregate var_pop on columns */
export type template_sms_var_pop_fields = {
  __typename?: 'template_sms_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type template_sms_var_samp_fields = {
  __typename?: 'template_sms_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type template_sms_variance_fields = {
  __typename?: 'template_sms_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** Ticket status: 0 = Open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
};

/** table for tickets */
export type ticket = {
  __typename?: 'ticket';
  /** An object relationship */
  account: accounts;
  account_id: Scalars['bigint'];
  /** An object relationship */
  agent?: Maybe<users>;
  assigned_agent?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  assigned_conversation?: Maybe<conversations>;
  assigned_team?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  assigned_team_and_agent?: Maybe<team_members>;
  /** An object relationship */
  contact: contacts;
  contact_id: Scalars['bigint'];
  conversation_id?: Maybe<Scalars['bigint']>;
  /** An array relationship */
  conversations_closing_ticket_id: Array<conversations>;
  /** An aggregate relationship */
  conversations_closing_ticket_id_aggregate: conversations_aggregate;
  created_at: Scalars['timestamptz'];
  created_by?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  created_user?: Maybe<users>;
  /** An object relationship */
  csat_feedback?: Maybe<csat_feedback>;
  /** Creates a 8 character link id from uuid column */
  csat_id?: Maybe<Scalars['String']>;
  csat_language: Scalars['String'];
  csat_sent: Scalars['Boolean'];
  csat_sent_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  form_value: Scalars['jsonb'];
  id: Scalars['bigint'];
  /** An array relationship */
  messages: Array<ticket_messages>;
  /** An aggregate relationship */
  messages_aggregate: ticket_messages_aggregate;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority: Scalars['Int'];
  resolution_time?: Maybe<Scalars['timestamptz']>;
  source?: Maybe<Scalars['String']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status: Scalars['Int'];
  subject: Scalars['String'];
  /** A computed field, executes function "ticket_tab_type" */
  tab_type?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  team?: Maybe<teams>;
  /** An array relationship */
  ticket_activity_logs: Array<ticket_activity_log>;
  /** An aggregate relationship */
  ticket_activity_logs_aggregate: ticket_activity_log_aggregate;
  /** An object relationship */
  ticket_form: ticket_forms;
  ticket_form_id: Scalars['Int'];
  /** An array relationship */
  ticket_shares: Array<ticket_share>;
  /** An aggregate relationship */
  ticket_shares_aggregate: ticket_share_aggregate;
  /** An array relationship */
  ticket_tags: Array<ticket_tags>;
  /** An aggregate relationship */
  ticket_tags_aggregate: ticket_tags_aggregate;
  /** A computed field, executes function "ticket_type" */
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  uuid: Scalars['uuid'];
  /** An array relationship */
  watch_lists: Array<ticket_watch_list>;
  /** An aggregate relationship */
  watch_lists_aggregate: ticket_watch_list_aggregate;
};


/** table for tickets */
export type ticketconversations_closing_ticket_idArgs = {
  distinct_on?: InputMaybe<Array<conversations_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversations_order_by>>;
  where?: InputMaybe<conversations_bool_exp>;
};


/** table for tickets */
export type ticketconversations_closing_ticket_id_aggregateArgs = {
  distinct_on?: InputMaybe<Array<conversations_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<conversations_order_by>>;
  where?: InputMaybe<conversations_bool_exp>;
};


/** table for tickets */
export type ticketform_valueArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** table for tickets */
export type ticketmessagesArgs = {
  distinct_on?: InputMaybe<Array<ticket_messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_messages_order_by>>;
  where?: InputMaybe<ticket_messages_bool_exp>;
};


/** table for tickets */
export type ticketmessages_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_messages_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_messages_order_by>>;
  where?: InputMaybe<ticket_messages_bool_exp>;
};


/** table for tickets */
export type tickettab_typeArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** table for tickets */
export type ticketticket_activity_logsArgs = {
  distinct_on?: InputMaybe<Array<ticket_activity_log_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_activity_log_order_by>>;
  where?: InputMaybe<ticket_activity_log_bool_exp>;
};


/** table for tickets */
export type ticketticket_activity_logs_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_activity_log_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_activity_log_order_by>>;
  where?: InputMaybe<ticket_activity_log_bool_exp>;
};


/** table for tickets */
export type ticketticket_sharesArgs = {
  distinct_on?: InputMaybe<Array<ticket_share_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_share_order_by>>;
  where?: InputMaybe<ticket_share_bool_exp>;
};


/** table for tickets */
export type ticketticket_shares_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_share_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_share_order_by>>;
  where?: InputMaybe<ticket_share_bool_exp>;
};


/** table for tickets */
export type ticketticket_tagsArgs = {
  distinct_on?: InputMaybe<Array<ticket_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_tags_order_by>>;
  where?: InputMaybe<ticket_tags_bool_exp>;
};


/** table for tickets */
export type ticketticket_tags_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_tags_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_tags_order_by>>;
  where?: InputMaybe<ticket_tags_bool_exp>;
};


/** table for tickets */
export type ticketwatch_listsArgs = {
  distinct_on?: InputMaybe<Array<ticket_watch_list_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_watch_list_order_by>>;
  where?: InputMaybe<ticket_watch_list_bool_exp>;
};


/** table for tickets */
export type ticketwatch_lists_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_watch_list_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_watch_list_order_by>>;
  where?: InputMaybe<ticket_watch_list_bool_exp>;
};

/** columns and relationships of "ticket_activity_log" */
export type ticket_activity_log = {
  __typename?: 'ticket_activity_log';
  /** An object relationship */
  activity_by?: Maybe<account_agents>;
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  /** An object relationship */
  message?: Maybe<ticket_messages>;
  message_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  new_assigned_agent?: Maybe<account_agents>;
  new_assigned_agent_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  new_assigned_team?: Maybe<teams>;
  new_assigned_team_id?: Maybe<Scalars['bigint']>;
  new_priority?: Maybe<Scalars['bigint']>;
  new_status?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  old_assigned_agent?: Maybe<account_agents>;
  old_assigned_agent_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  old_assigned_team?: Maybe<teams>;
  old_assigned_team_id?: Maybe<Scalars['bigint']>;
  old_priority?: Maybe<Scalars['bigint']>;
  old_status?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  ticket: ticket;
  ticket_id: Scalars['bigint'];
  /** The user who triggered the action */
  user_id?: Maybe<Scalars['bigint']>;
  /** user, contact, system */
  user_type: Scalars['String'];
};

/** aggregated selection of "ticket_activity_log" */
export type ticket_activity_log_aggregate = {
  __typename?: 'ticket_activity_log_aggregate';
  aggregate?: Maybe<ticket_activity_log_aggregate_fields>;
  nodes: Array<ticket_activity_log>;
};

export type ticket_activity_log_aggregate_bool_exp = {
  count?: InputMaybe<ticket_activity_log_aggregate_bool_exp_count>;
};

export type ticket_activity_log_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<ticket_activity_log_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<ticket_activity_log_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "ticket_activity_log" */
export type ticket_activity_log_aggregate_fields = {
  __typename?: 'ticket_activity_log_aggregate_fields';
  avg?: Maybe<ticket_activity_log_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<ticket_activity_log_max_fields>;
  min?: Maybe<ticket_activity_log_min_fields>;
  stddev?: Maybe<ticket_activity_log_stddev_fields>;
  stddev_pop?: Maybe<ticket_activity_log_stddev_pop_fields>;
  stddev_samp?: Maybe<ticket_activity_log_stddev_samp_fields>;
  sum?: Maybe<ticket_activity_log_sum_fields>;
  var_pop?: Maybe<ticket_activity_log_var_pop_fields>;
  var_samp?: Maybe<ticket_activity_log_var_samp_fields>;
  variance?: Maybe<ticket_activity_log_variance_fields>;
};


/** aggregate fields of "ticket_activity_log" */
export type ticket_activity_log_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<ticket_activity_log_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ticket_activity_log" */
export type ticket_activity_log_aggregate_order_by = {
  avg?: InputMaybe<ticket_activity_log_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<ticket_activity_log_max_order_by>;
  min?: InputMaybe<ticket_activity_log_min_order_by>;
  stddev?: InputMaybe<ticket_activity_log_stddev_order_by>;
  stddev_pop?: InputMaybe<ticket_activity_log_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<ticket_activity_log_stddev_samp_order_by>;
  sum?: InputMaybe<ticket_activity_log_sum_order_by>;
  var_pop?: InputMaybe<ticket_activity_log_var_pop_order_by>;
  var_samp?: InputMaybe<ticket_activity_log_var_samp_order_by>;
  variance?: InputMaybe<ticket_activity_log_variance_order_by>;
};

/** input type for inserting array relation for remote table "ticket_activity_log" */
export type ticket_activity_log_arr_rel_insert_input = {
  data: Array<ticket_activity_log_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ticket_activity_log_on_conflict>;
};

/** aggregate avg on columns */
export type ticket_activity_log_avg_fields = {
  __typename?: 'ticket_activity_log_avg_fields';
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_priority?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_priority?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  /** The user who triggered the action */
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ticket_activity_log" */
export type ticket_activity_log_avg_order_by = {
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_priority?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_priority?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  /** The user who triggered the action */
  user_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "ticket_activity_log". All fields are combined with a logical 'AND'. */
export type ticket_activity_log_bool_exp = {
  _and?: InputMaybe<Array<ticket_activity_log_bool_exp>>;
  _not?: InputMaybe<ticket_activity_log_bool_exp>;
  _or?: InputMaybe<Array<ticket_activity_log_bool_exp>>;
  activity_by?: InputMaybe<account_agents_bool_exp>;
  activity_type?: InputMaybe<Int_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  message?: InputMaybe<ticket_messages_bool_exp>;
  message_id?: InputMaybe<Int_comparison_exp>;
  new_assigned_agent?: InputMaybe<account_agents_bool_exp>;
  new_assigned_agent_id?: InputMaybe<bigint_comparison_exp>;
  new_assigned_team?: InputMaybe<teams_bool_exp>;
  new_assigned_team_id?: InputMaybe<bigint_comparison_exp>;
  new_priority?: InputMaybe<bigint_comparison_exp>;
  new_status?: InputMaybe<bigint_comparison_exp>;
  old_assigned_agent?: InputMaybe<account_agents_bool_exp>;
  old_assigned_agent_id?: InputMaybe<bigint_comparison_exp>;
  old_assigned_team?: InputMaybe<teams_bool_exp>;
  old_assigned_team_id?: InputMaybe<bigint_comparison_exp>;
  old_priority?: InputMaybe<bigint_comparison_exp>;
  old_status?: InputMaybe<bigint_comparison_exp>;
  ticket?: InputMaybe<ticket_bool_exp>;
  ticket_id?: InputMaybe<bigint_comparison_exp>;
  user_id?: InputMaybe<bigint_comparison_exp>;
  user_type?: InputMaybe<String_comparison_exp>;
};

/** unique or primary key constraints on table "ticket_activity_log" */
export enum ticket_activity_log_constraint {
  /** unique or primary key constraint on columns "id" */
  ticket_activity_log_pkey = 'ticket_activity_log_pkey'
}

/** input type for incrementing numeric columns in table "ticket_activity_log" */
export type ticket_activity_log_inc_input = {
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  message_id?: InputMaybe<Scalars['Int']>;
  new_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  new_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  new_priority?: InputMaybe<Scalars['bigint']>;
  new_status?: InputMaybe<Scalars['bigint']>;
  old_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  old_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  old_priority?: InputMaybe<Scalars['bigint']>;
  old_status?: InputMaybe<Scalars['bigint']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  /** The user who triggered the action */
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "ticket_activity_log" */
export type ticket_activity_log_insert_input = {
  activity_by?: InputMaybe<account_agents_obj_rel_insert_input>;
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  message?: InputMaybe<ticket_messages_obj_rel_insert_input>;
  message_id?: InputMaybe<Scalars['Int']>;
  new_assigned_agent?: InputMaybe<account_agents_obj_rel_insert_input>;
  new_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  new_assigned_team?: InputMaybe<teams_obj_rel_insert_input>;
  new_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  new_priority?: InputMaybe<Scalars['bigint']>;
  new_status?: InputMaybe<Scalars['bigint']>;
  old_assigned_agent?: InputMaybe<account_agents_obj_rel_insert_input>;
  old_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  old_assigned_team?: InputMaybe<teams_obj_rel_insert_input>;
  old_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  old_priority?: InputMaybe<Scalars['bigint']>;
  old_status?: InputMaybe<Scalars['bigint']>;
  ticket?: InputMaybe<ticket_obj_rel_insert_input>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  /** The user who triggered the action */
  user_id?: InputMaybe<Scalars['bigint']>;
  /** user, contact, system */
  user_type?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type ticket_activity_log_max_fields = {
  __typename?: 'ticket_activity_log_max_fields';
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  message_id?: Maybe<Scalars['Int']>;
  new_assigned_agent_id?: Maybe<Scalars['bigint']>;
  new_assigned_team_id?: Maybe<Scalars['bigint']>;
  new_priority?: Maybe<Scalars['bigint']>;
  new_status?: Maybe<Scalars['bigint']>;
  old_assigned_agent_id?: Maybe<Scalars['bigint']>;
  old_assigned_team_id?: Maybe<Scalars['bigint']>;
  old_priority?: Maybe<Scalars['bigint']>;
  old_status?: Maybe<Scalars['bigint']>;
  ticket_id?: Maybe<Scalars['bigint']>;
  /** The user who triggered the action */
  user_id?: Maybe<Scalars['bigint']>;
  /** user, contact, system */
  user_type?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "ticket_activity_log" */
export type ticket_activity_log_max_order_by = {
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_priority?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_priority?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  /** The user who triggered the action */
  user_id?: InputMaybe<order_by>;
  /** user, contact, system */
  user_type?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type ticket_activity_log_min_fields = {
  __typename?: 'ticket_activity_log_min_fields';
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  message_id?: Maybe<Scalars['Int']>;
  new_assigned_agent_id?: Maybe<Scalars['bigint']>;
  new_assigned_team_id?: Maybe<Scalars['bigint']>;
  new_priority?: Maybe<Scalars['bigint']>;
  new_status?: Maybe<Scalars['bigint']>;
  old_assigned_agent_id?: Maybe<Scalars['bigint']>;
  old_assigned_team_id?: Maybe<Scalars['bigint']>;
  old_priority?: Maybe<Scalars['bigint']>;
  old_status?: Maybe<Scalars['bigint']>;
  ticket_id?: Maybe<Scalars['bigint']>;
  /** The user who triggered the action */
  user_id?: Maybe<Scalars['bigint']>;
  /** user, contact, system */
  user_type?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "ticket_activity_log" */
export type ticket_activity_log_min_order_by = {
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_priority?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_priority?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  /** The user who triggered the action */
  user_id?: InputMaybe<order_by>;
  /** user, contact, system */
  user_type?: InputMaybe<order_by>;
};

/** response of any mutation on the table "ticket_activity_log" */
export type ticket_activity_log_mutation_response = {
  __typename?: 'ticket_activity_log_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ticket_activity_log>;
};

/** input type for inserting object relation for remote table "ticket_activity_log" */
export type ticket_activity_log_obj_rel_insert_input = {
  data: ticket_activity_log_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<ticket_activity_log_on_conflict>;
};

/** on_conflict condition type for table "ticket_activity_log" */
export type ticket_activity_log_on_conflict = {
  constraint: ticket_activity_log_constraint;
  update_columns?: Array<ticket_activity_log_update_column>;
  where?: InputMaybe<ticket_activity_log_bool_exp>;
};

/** Ordering options when selecting data from "ticket_activity_log". */
export type ticket_activity_log_order_by = {
  activity_by?: InputMaybe<account_agents_order_by>;
  activity_type?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message?: InputMaybe<ticket_messages_order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent?: InputMaybe<account_agents_order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team?: InputMaybe<teams_order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_priority?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent?: InputMaybe<account_agents_order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team?: InputMaybe<teams_order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_priority?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  ticket?: InputMaybe<ticket_order_by>;
  ticket_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
  user_type?: InputMaybe<order_by>;
};

/** primary key columns input for table: ticket_activity_log */
export type ticket_activity_log_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "ticket_activity_log" */
export enum ticket_activity_log_select_column {
  /** column name */
  activity_type = 'activity_type',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  message_id = 'message_id',
  /** column name */
  new_assigned_agent_id = 'new_assigned_agent_id',
  /** column name */
  new_assigned_team_id = 'new_assigned_team_id',
  /** column name */
  new_priority = 'new_priority',
  /** column name */
  new_status = 'new_status',
  /** column name */
  old_assigned_agent_id = 'old_assigned_agent_id',
  /** column name */
  old_assigned_team_id = 'old_assigned_team_id',
  /** column name */
  old_priority = 'old_priority',
  /** column name */
  old_status = 'old_status',
  /** column name */
  ticket_id = 'ticket_id',
  /** column name */
  user_id = 'user_id',
  /** column name */
  user_type = 'user_type'
}

/** input type for updating data in table "ticket_activity_log" */
export type ticket_activity_log_set_input = {
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  message_id?: InputMaybe<Scalars['Int']>;
  new_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  new_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  new_priority?: InputMaybe<Scalars['bigint']>;
  new_status?: InputMaybe<Scalars['bigint']>;
  old_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  old_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  old_priority?: InputMaybe<Scalars['bigint']>;
  old_status?: InputMaybe<Scalars['bigint']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  /** The user who triggered the action */
  user_id?: InputMaybe<Scalars['bigint']>;
  /** user, contact, system */
  user_type?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type ticket_activity_log_stddev_fields = {
  __typename?: 'ticket_activity_log_stddev_fields';
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_priority?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_priority?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  /** The user who triggered the action */
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ticket_activity_log" */
export type ticket_activity_log_stddev_order_by = {
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_priority?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_priority?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  /** The user who triggered the action */
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type ticket_activity_log_stddev_pop_fields = {
  __typename?: 'ticket_activity_log_stddev_pop_fields';
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_priority?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_priority?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  /** The user who triggered the action */
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ticket_activity_log" */
export type ticket_activity_log_stddev_pop_order_by = {
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_priority?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_priority?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  /** The user who triggered the action */
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type ticket_activity_log_stddev_samp_fields = {
  __typename?: 'ticket_activity_log_stddev_samp_fields';
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_priority?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_priority?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  /** The user who triggered the action */
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ticket_activity_log" */
export type ticket_activity_log_stddev_samp_order_by = {
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_priority?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_priority?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  /** The user who triggered the action */
  user_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "ticket_activity_log" */
export type ticket_activity_log_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: ticket_activity_log_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ticket_activity_log_stream_cursor_value_input = {
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  message_id?: InputMaybe<Scalars['Int']>;
  new_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  new_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  new_priority?: InputMaybe<Scalars['bigint']>;
  new_status?: InputMaybe<Scalars['bigint']>;
  old_assigned_agent_id?: InputMaybe<Scalars['bigint']>;
  old_assigned_team_id?: InputMaybe<Scalars['bigint']>;
  old_priority?: InputMaybe<Scalars['bigint']>;
  old_status?: InputMaybe<Scalars['bigint']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  /** The user who triggered the action */
  user_id?: InputMaybe<Scalars['bigint']>;
  /** user, contact, system */
  user_type?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type ticket_activity_log_sum_fields = {
  __typename?: 'ticket_activity_log_sum_fields';
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  message_id?: Maybe<Scalars['Int']>;
  new_assigned_agent_id?: Maybe<Scalars['bigint']>;
  new_assigned_team_id?: Maybe<Scalars['bigint']>;
  new_priority?: Maybe<Scalars['bigint']>;
  new_status?: Maybe<Scalars['bigint']>;
  old_assigned_agent_id?: Maybe<Scalars['bigint']>;
  old_assigned_team_id?: Maybe<Scalars['bigint']>;
  old_priority?: Maybe<Scalars['bigint']>;
  old_status?: Maybe<Scalars['bigint']>;
  ticket_id?: Maybe<Scalars['bigint']>;
  /** The user who triggered the action */
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "ticket_activity_log" */
export type ticket_activity_log_sum_order_by = {
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_priority?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_priority?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  /** The user who triggered the action */
  user_id?: InputMaybe<order_by>;
};

/** update columns of table "ticket_activity_log" */
export enum ticket_activity_log_update_column {
  /** column name */
  activity_type = 'activity_type',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  message_id = 'message_id',
  /** column name */
  new_assigned_agent_id = 'new_assigned_agent_id',
  /** column name */
  new_assigned_team_id = 'new_assigned_team_id',
  /** column name */
  new_priority = 'new_priority',
  /** column name */
  new_status = 'new_status',
  /** column name */
  old_assigned_agent_id = 'old_assigned_agent_id',
  /** column name */
  old_assigned_team_id = 'old_assigned_team_id',
  /** column name */
  old_priority = 'old_priority',
  /** column name */
  old_status = 'old_status',
  /** column name */
  ticket_id = 'ticket_id',
  /** column name */
  user_id = 'user_id',
  /** column name */
  user_type = 'user_type'
}

export type ticket_activity_log_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ticket_activity_log_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ticket_activity_log_set_input>;
  /** filter the rows which have to be updated */
  where: ticket_activity_log_bool_exp;
};

/** aggregate var_pop on columns */
export type ticket_activity_log_var_pop_fields = {
  __typename?: 'ticket_activity_log_var_pop_fields';
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_priority?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_priority?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  /** The user who triggered the action */
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ticket_activity_log" */
export type ticket_activity_log_var_pop_order_by = {
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_priority?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_priority?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  /** The user who triggered the action */
  user_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type ticket_activity_log_var_samp_fields = {
  __typename?: 'ticket_activity_log_var_samp_fields';
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_priority?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_priority?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  /** The user who triggered the action */
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ticket_activity_log" */
export type ticket_activity_log_var_samp_order_by = {
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_priority?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_priority?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  /** The user who triggered the action */
  user_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type ticket_activity_log_variance_fields = {
  __typename?: 'ticket_activity_log_variance_fields';
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  message_id?: Maybe<Scalars['Float']>;
  new_assigned_agent_id?: Maybe<Scalars['Float']>;
  new_assigned_team_id?: Maybe<Scalars['Float']>;
  new_priority?: Maybe<Scalars['Float']>;
  new_status?: Maybe<Scalars['Float']>;
  old_assigned_agent_id?: Maybe<Scalars['Float']>;
  old_assigned_team_id?: Maybe<Scalars['Float']>;
  old_priority?: Maybe<Scalars['Float']>;
  old_status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  /** The user who triggered the action */
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ticket_activity_log" */
export type ticket_activity_log_variance_order_by = {
  /** 0 - unknown, 1 - ticket created | updates: 2 - status, 3 - priority, 4 - team, 5 - agent */
  activity_type?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  new_assigned_agent_id?: InputMaybe<order_by>;
  new_assigned_team_id?: InputMaybe<order_by>;
  new_priority?: InputMaybe<order_by>;
  new_status?: InputMaybe<order_by>;
  old_assigned_agent_id?: InputMaybe<order_by>;
  old_assigned_team_id?: InputMaybe<order_by>;
  old_priority?: InputMaybe<order_by>;
  old_status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  /** The user who triggered the action */
  user_id?: InputMaybe<order_by>;
};

/** aggregated selection of "ticket" */
export type ticket_aggregate = {
  __typename?: 'ticket_aggregate';
  aggregate?: Maybe<ticket_aggregate_fields>;
  nodes: Array<ticket>;
};

export type ticket_aggregate_bool_exp = {
  bool_and?: InputMaybe<ticket_aggregate_bool_exp_bool_and>;
  bool_or?: InputMaybe<ticket_aggregate_bool_exp_bool_or>;
  count?: InputMaybe<ticket_aggregate_bool_exp_count>;
};

export type ticket_aggregate_bool_exp_bool_and = {
  arguments: ticket_select_column_ticket_aggregate_bool_exp_bool_and_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<ticket_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type ticket_aggregate_bool_exp_bool_or = {
  arguments: ticket_select_column_ticket_aggregate_bool_exp_bool_or_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<ticket_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type ticket_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<ticket_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<ticket_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "ticket" */
export type ticket_aggregate_fields = {
  __typename?: 'ticket_aggregate_fields';
  avg?: Maybe<ticket_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<ticket_max_fields>;
  min?: Maybe<ticket_min_fields>;
  stddev?: Maybe<ticket_stddev_fields>;
  stddev_pop?: Maybe<ticket_stddev_pop_fields>;
  stddev_samp?: Maybe<ticket_stddev_samp_fields>;
  sum?: Maybe<ticket_sum_fields>;
  var_pop?: Maybe<ticket_var_pop_fields>;
  var_samp?: Maybe<ticket_var_samp_fields>;
  variance?: Maybe<ticket_variance_fields>;
};


/** aggregate fields of "ticket" */
export type ticket_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<ticket_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ticket" */
export type ticket_aggregate_order_by = {
  avg?: InputMaybe<ticket_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<ticket_max_order_by>;
  min?: InputMaybe<ticket_min_order_by>;
  stddev?: InputMaybe<ticket_stddev_order_by>;
  stddev_pop?: InputMaybe<ticket_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<ticket_stddev_samp_order_by>;
  sum?: InputMaybe<ticket_sum_order_by>;
  var_pop?: InputMaybe<ticket_var_pop_order_by>;
  var_samp?: InputMaybe<ticket_var_samp_order_by>;
  variance?: InputMaybe<ticket_variance_order_by>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ticket_append_input = {
  form_value?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "ticket" */
export type ticket_arr_rel_insert_input = {
  data: Array<ticket_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ticket_on_conflict>;
};

/** aggregate avg on columns */
export type ticket_avg_fields = {
  __typename?: 'ticket_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  assigned_agent?: Maybe<Scalars['Float']>;
  assigned_team?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  created_by?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: Maybe<Scalars['Float']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
  ticket_form_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ticket" */
export type ticket_avg_order_by = {
  account_id?: InputMaybe<order_by>;
  assigned_agent?: InputMaybe<order_by>;
  assigned_team?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_by?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<order_by>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<order_by>;
  ticket_form_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "ticket". All fields are combined with a logical 'AND'. */
export type ticket_bool_exp = {
  _and?: InputMaybe<Array<ticket_bool_exp>>;
  _not?: InputMaybe<ticket_bool_exp>;
  _or?: InputMaybe<Array<ticket_bool_exp>>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  agent?: InputMaybe<users_bool_exp>;
  assigned_agent?: InputMaybe<bigint_comparison_exp>;
  assigned_conversation?: InputMaybe<conversations_bool_exp>;
  assigned_team?: InputMaybe<bigint_comparison_exp>;
  assigned_team_and_agent?: InputMaybe<team_members_bool_exp>;
  contact?: InputMaybe<contacts_bool_exp>;
  contact_id?: InputMaybe<bigint_comparison_exp>;
  conversation_id?: InputMaybe<bigint_comparison_exp>;
  conversations_closing_ticket_id?: InputMaybe<conversations_bool_exp>;
  conversations_closing_ticket_id_aggregate?: InputMaybe<conversations_aggregate_bool_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  created_by?: InputMaybe<bigint_comparison_exp>;
  created_user?: InputMaybe<users_bool_exp>;
  csat_feedback?: InputMaybe<csat_feedback_bool_exp>;
  csat_id?: InputMaybe<String_comparison_exp>;
  csat_language?: InputMaybe<String_comparison_exp>;
  csat_sent?: InputMaybe<Boolean_comparison_exp>;
  csat_sent_at?: InputMaybe<timestamptz_comparison_exp>;
  description?: InputMaybe<String_comparison_exp>;
  form_value?: InputMaybe<jsonb_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  messages?: InputMaybe<ticket_messages_bool_exp>;
  messages_aggregate?: InputMaybe<ticket_messages_aggregate_bool_exp>;
  priority?: InputMaybe<Int_comparison_exp>;
  resolution_time?: InputMaybe<timestamptz_comparison_exp>;
  source?: InputMaybe<String_comparison_exp>;
  status?: InputMaybe<Int_comparison_exp>;
  subject?: InputMaybe<String_comparison_exp>;
  tab_type?: InputMaybe<jsonb_comparison_exp>;
  team?: InputMaybe<teams_bool_exp>;
  ticket_activity_logs?: InputMaybe<ticket_activity_log_bool_exp>;
  ticket_activity_logs_aggregate?: InputMaybe<ticket_activity_log_aggregate_bool_exp>;
  ticket_form?: InputMaybe<ticket_forms_bool_exp>;
  ticket_form_id?: InputMaybe<Int_comparison_exp>;
  ticket_shares?: InputMaybe<ticket_share_bool_exp>;
  ticket_shares_aggregate?: InputMaybe<ticket_share_aggregate_bool_exp>;
  ticket_tags?: InputMaybe<ticket_tags_bool_exp>;
  ticket_tags_aggregate?: InputMaybe<ticket_tags_aggregate_bool_exp>;
  type?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  uuid?: InputMaybe<uuid_comparison_exp>;
  watch_lists?: InputMaybe<ticket_watch_list_bool_exp>;
  watch_lists_aggregate?: InputMaybe<ticket_watch_list_aggregate_bool_exp>;
};

/** unique or primary key constraints on table "ticket" */
export enum ticket_constraint {
  /** unique or primary key constraint on columns "id" */
  ticket_pkey = 'ticket_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ticket_delete_at_path_input = {
  form_value?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ticket_delete_elem_input = {
  form_value?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ticket_delete_key_input = {
  form_value?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "ticket_forms" */
export type ticket_forms = {
  __typename?: 'ticket_forms';
  /** An object relationship */
  account: accounts;
  account_id: Scalars['bigint'];
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  created_by?: Maybe<users>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  description: Scalars['String'];
  enabled: Scalars['Boolean'];
  id: Scalars['bigint'];
  survey_form: Scalars['json'];
  /** An array relationship */
  tickets: Array<ticket>;
  /** An aggregate relationship */
  tickets_aggregate: ticket_aggregate;
  type: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  updated_by?: Maybe<users>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "ticket_forms" */
export type ticket_formssurvey_formArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "ticket_forms" */
export type ticket_formsticketsArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};


/** columns and relationships of "ticket_forms" */
export type ticket_formstickets_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};

/** aggregated selection of "ticket_forms" */
export type ticket_forms_aggregate = {
  __typename?: 'ticket_forms_aggregate';
  aggregate?: Maybe<ticket_forms_aggregate_fields>;
  nodes: Array<ticket_forms>;
};

/** aggregate fields of "ticket_forms" */
export type ticket_forms_aggregate_fields = {
  __typename?: 'ticket_forms_aggregate_fields';
  avg?: Maybe<ticket_forms_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<ticket_forms_max_fields>;
  min?: Maybe<ticket_forms_min_fields>;
  stddev?: Maybe<ticket_forms_stddev_fields>;
  stddev_pop?: Maybe<ticket_forms_stddev_pop_fields>;
  stddev_samp?: Maybe<ticket_forms_stddev_samp_fields>;
  sum?: Maybe<ticket_forms_sum_fields>;
  var_pop?: Maybe<ticket_forms_var_pop_fields>;
  var_samp?: Maybe<ticket_forms_var_samp_fields>;
  variance?: Maybe<ticket_forms_variance_fields>;
};


/** aggregate fields of "ticket_forms" */
export type ticket_forms_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<ticket_forms_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type ticket_forms_avg_fields = {
  __typename?: 'ticket_forms_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "ticket_forms". All fields are combined with a logical 'AND'. */
export type ticket_forms_bool_exp = {
  _and?: InputMaybe<Array<ticket_forms_bool_exp>>;
  _not?: InputMaybe<ticket_forms_bool_exp>;
  _or?: InputMaybe<Array<ticket_forms_bool_exp>>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  created_by?: InputMaybe<users_bool_exp>;
  created_by_user_id?: InputMaybe<bigint_comparison_exp>;
  description?: InputMaybe<String_comparison_exp>;
  enabled?: InputMaybe<Boolean_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  survey_form?: InputMaybe<json_comparison_exp>;
  tickets?: InputMaybe<ticket_bool_exp>;
  tickets_aggregate?: InputMaybe<ticket_aggregate_bool_exp>;
  type?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  updated_by?: InputMaybe<users_bool_exp>;
  updated_by_user_id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "ticket_forms" */
export enum ticket_forms_constraint {
  /** unique or primary key constraint on columns "id" */
  ticket_forms_pkey = 'ticket_forms_pkey'
}

/** input type for incrementing numeric columns in table "ticket_forms" */
export type ticket_forms_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "ticket_forms" */
export type ticket_forms_insert_input = {
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<users_obj_rel_insert_input>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  description?: InputMaybe<Scalars['String']>;
  enabled?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['bigint']>;
  survey_form?: InputMaybe<Scalars['json']>;
  tickets?: InputMaybe<ticket_arr_rel_insert_input>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  updated_by?: InputMaybe<users_obj_rel_insert_input>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type ticket_forms_max_fields = {
  __typename?: 'ticket_forms_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type ticket_forms_min_fields = {
  __typename?: 'ticket_forms_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "ticket_forms" */
export type ticket_forms_mutation_response = {
  __typename?: 'ticket_forms_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ticket_forms>;
};

/** input type for inserting object relation for remote table "ticket_forms" */
export type ticket_forms_obj_rel_insert_input = {
  data: ticket_forms_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<ticket_forms_on_conflict>;
};

/** on_conflict condition type for table "ticket_forms" */
export type ticket_forms_on_conflict = {
  constraint: ticket_forms_constraint;
  update_columns?: Array<ticket_forms_update_column>;
  where?: InputMaybe<ticket_forms_bool_exp>;
};

/** Ordering options when selecting data from "ticket_forms". */
export type ticket_forms_order_by = {
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by?: InputMaybe<users_order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  description?: InputMaybe<order_by>;
  enabled?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  survey_form?: InputMaybe<order_by>;
  tickets_aggregate?: InputMaybe<ticket_aggregate_order_by>;
  type?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  updated_by?: InputMaybe<users_order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: ticket_forms */
export type ticket_forms_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "ticket_forms" */
export enum ticket_forms_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  description = 'description',
  /** column name */
  enabled = 'enabled',
  /** column name */
  id = 'id',
  /** column name */
  survey_form = 'survey_form',
  /** column name */
  type = 'type',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  updated_by_user_id = 'updated_by_user_id'
}

/** input type for updating data in table "ticket_forms" */
export type ticket_forms_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  description?: InputMaybe<Scalars['String']>;
  enabled?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['bigint']>;
  survey_form?: InputMaybe<Scalars['json']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type ticket_forms_stddev_fields = {
  __typename?: 'ticket_forms_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type ticket_forms_stddev_pop_fields = {
  __typename?: 'ticket_forms_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type ticket_forms_stddev_samp_fields = {
  __typename?: 'ticket_forms_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "ticket_forms" */
export type ticket_forms_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: ticket_forms_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ticket_forms_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  description?: InputMaybe<Scalars['String']>;
  enabled?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['bigint']>;
  survey_form?: InputMaybe<Scalars['json']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type ticket_forms_sum_fields = {
  __typename?: 'ticket_forms_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "ticket_forms" */
export enum ticket_forms_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  description = 'description',
  /** column name */
  enabled = 'enabled',
  /** column name */
  id = 'id',
  /** column name */
  survey_form = 'survey_form',
  /** column name */
  type = 'type',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  updated_by_user_id = 'updated_by_user_id'
}

export type ticket_forms_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ticket_forms_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ticket_forms_set_input>;
  /** filter the rows which have to be updated */
  where: ticket_forms_bool_exp;
};

/** aggregate var_pop on columns */
export type ticket_forms_var_pop_fields = {
  __typename?: 'ticket_forms_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type ticket_forms_var_samp_fields = {
  __typename?: 'ticket_forms_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type ticket_forms_variance_fields = {
  __typename?: 'ticket_forms_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** input type for incrementing numeric columns in table "ticket" */
export type ticket_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  assigned_agent?: InputMaybe<Scalars['bigint']>;
  assigned_team?: InputMaybe<Scalars['bigint']>;
  contact_id?: InputMaybe<Scalars['bigint']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_by?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<Scalars['Int']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<Scalars['Int']>;
  ticket_form_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "ticket" */
export type ticket_insert_input = {
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['bigint']>;
  agent?: InputMaybe<users_obj_rel_insert_input>;
  assigned_agent?: InputMaybe<Scalars['bigint']>;
  assigned_conversation?: InputMaybe<conversations_obj_rel_insert_input>;
  assigned_team?: InputMaybe<Scalars['bigint']>;
  assigned_team_and_agent?: InputMaybe<team_members_obj_rel_insert_input>;
  contact?: InputMaybe<contacts_obj_rel_insert_input>;
  contact_id?: InputMaybe<Scalars['bigint']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  conversations_closing_ticket_id?: InputMaybe<conversations_arr_rel_insert_input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<Scalars['bigint']>;
  created_user?: InputMaybe<users_obj_rel_insert_input>;
  csat_feedback?: InputMaybe<csat_feedback_obj_rel_insert_input>;
  csat_language?: InputMaybe<Scalars['String']>;
  csat_sent?: InputMaybe<Scalars['Boolean']>;
  csat_sent_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  form_value?: InputMaybe<Scalars['jsonb']>;
  id?: InputMaybe<Scalars['bigint']>;
  messages?: InputMaybe<ticket_messages_arr_rel_insert_input>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<Scalars['Int']>;
  resolution_time?: InputMaybe<Scalars['timestamptz']>;
  source?: InputMaybe<Scalars['String']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<Scalars['Int']>;
  subject?: InputMaybe<Scalars['String']>;
  team?: InputMaybe<teams_obj_rel_insert_input>;
  ticket_activity_logs?: InputMaybe<ticket_activity_log_arr_rel_insert_input>;
  ticket_form?: InputMaybe<ticket_forms_obj_rel_insert_input>;
  ticket_form_id?: InputMaybe<Scalars['Int']>;
  ticket_shares?: InputMaybe<ticket_share_arr_rel_insert_input>;
  ticket_tags?: InputMaybe<ticket_tags_arr_rel_insert_input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  uuid?: InputMaybe<Scalars['uuid']>;
  watch_lists?: InputMaybe<ticket_watch_list_arr_rel_insert_input>;
};

/** aggregate max on columns */
export type ticket_max_fields = {
  __typename?: 'ticket_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  assigned_agent?: Maybe<Scalars['bigint']>;
  assigned_team?: Maybe<Scalars['bigint']>;
  contact_id?: Maybe<Scalars['bigint']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by?: Maybe<Scalars['bigint']>;
  /** Creates a 8 character link id from uuid column */
  csat_id?: Maybe<Scalars['String']>;
  csat_language?: Maybe<Scalars['String']>;
  csat_sent_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: Maybe<Scalars['Int']>;
  resolution_time?: Maybe<Scalars['timestamptz']>;
  source?: Maybe<Scalars['String']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  ticket_form_id?: Maybe<Scalars['Int']>;
  /** A computed field, executes function "ticket_type" */
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uuid?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "ticket" */
export type ticket_max_order_by = {
  account_id?: InputMaybe<order_by>;
  assigned_agent?: InputMaybe<order_by>;
  assigned_team?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by?: InputMaybe<order_by>;
  csat_language?: InputMaybe<order_by>;
  csat_sent_at?: InputMaybe<order_by>;
  description?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<order_by>;
  resolution_time?: InputMaybe<order_by>;
  source?: InputMaybe<order_by>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<order_by>;
  subject?: InputMaybe<order_by>;
  ticket_form_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  uuid?: InputMaybe<order_by>;
};

/** columns and relationships of "ticket_message_mentions" */
export type ticket_message_mentions = {
  __typename?: 'ticket_message_mentions';
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  message: ticket_messages;
  message_id: Scalars['bigint'];
  /** An object relationship */
  user?: Maybe<account_agents>;
  user_id: Scalars['bigint'];
};

/** aggregated selection of "ticket_message_mentions" */
export type ticket_message_mentions_aggregate = {
  __typename?: 'ticket_message_mentions_aggregate';
  aggregate?: Maybe<ticket_message_mentions_aggregate_fields>;
  nodes: Array<ticket_message_mentions>;
};

export type ticket_message_mentions_aggregate_bool_exp = {
  count?: InputMaybe<ticket_message_mentions_aggregate_bool_exp_count>;
};

export type ticket_message_mentions_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<ticket_message_mentions_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<ticket_message_mentions_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "ticket_message_mentions" */
export type ticket_message_mentions_aggregate_fields = {
  __typename?: 'ticket_message_mentions_aggregate_fields';
  avg?: Maybe<ticket_message_mentions_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<ticket_message_mentions_max_fields>;
  min?: Maybe<ticket_message_mentions_min_fields>;
  stddev?: Maybe<ticket_message_mentions_stddev_fields>;
  stddev_pop?: Maybe<ticket_message_mentions_stddev_pop_fields>;
  stddev_samp?: Maybe<ticket_message_mentions_stddev_samp_fields>;
  sum?: Maybe<ticket_message_mentions_sum_fields>;
  var_pop?: Maybe<ticket_message_mentions_var_pop_fields>;
  var_samp?: Maybe<ticket_message_mentions_var_samp_fields>;
  variance?: Maybe<ticket_message_mentions_variance_fields>;
};


/** aggregate fields of "ticket_message_mentions" */
export type ticket_message_mentions_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<ticket_message_mentions_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ticket_message_mentions" */
export type ticket_message_mentions_aggregate_order_by = {
  avg?: InputMaybe<ticket_message_mentions_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<ticket_message_mentions_max_order_by>;
  min?: InputMaybe<ticket_message_mentions_min_order_by>;
  stddev?: InputMaybe<ticket_message_mentions_stddev_order_by>;
  stddev_pop?: InputMaybe<ticket_message_mentions_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<ticket_message_mentions_stddev_samp_order_by>;
  sum?: InputMaybe<ticket_message_mentions_sum_order_by>;
  var_pop?: InputMaybe<ticket_message_mentions_var_pop_order_by>;
  var_samp?: InputMaybe<ticket_message_mentions_var_samp_order_by>;
  variance?: InputMaybe<ticket_message_mentions_variance_order_by>;
};

/** input type for inserting array relation for remote table "ticket_message_mentions" */
export type ticket_message_mentions_arr_rel_insert_input = {
  data: Array<ticket_message_mentions_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ticket_message_mentions_on_conflict>;
};

/** aggregate avg on columns */
export type ticket_message_mentions_avg_fields = {
  __typename?: 'ticket_message_mentions_avg_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ticket_message_mentions" */
export type ticket_message_mentions_avg_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "ticket_message_mentions". All fields are combined with a logical 'AND'. */
export type ticket_message_mentions_bool_exp = {
  _and?: InputMaybe<Array<ticket_message_mentions_bool_exp>>;
  _not?: InputMaybe<ticket_message_mentions_bool_exp>;
  _or?: InputMaybe<Array<ticket_message_mentions_bool_exp>>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  message?: InputMaybe<ticket_messages_bool_exp>;
  message_id?: InputMaybe<bigint_comparison_exp>;
  user?: InputMaybe<account_agents_bool_exp>;
  user_id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "ticket_message_mentions" */
export enum ticket_message_mentions_constraint {
  /** unique or primary key constraint on columns "user_id", "message_id" */
  ticket_message_mentions_pkey = 'ticket_message_mentions_pkey'
}

/** input type for incrementing numeric columns in table "ticket_message_mentions" */
export type ticket_message_mentions_inc_input = {
  message_id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "ticket_message_mentions" */
export type ticket_message_mentions_insert_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  message?: InputMaybe<ticket_messages_obj_rel_insert_input>;
  message_id?: InputMaybe<Scalars['bigint']>;
  user?: InputMaybe<account_agents_obj_rel_insert_input>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type ticket_message_mentions_max_fields = {
  __typename?: 'ticket_message_mentions_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  message_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "ticket_message_mentions" */
export type ticket_message_mentions_max_order_by = {
  created_at?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type ticket_message_mentions_min_fields = {
  __typename?: 'ticket_message_mentions_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  message_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "ticket_message_mentions" */
export type ticket_message_mentions_min_order_by = {
  created_at?: InputMaybe<order_by>;
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** response of any mutation on the table "ticket_message_mentions" */
export type ticket_message_mentions_mutation_response = {
  __typename?: 'ticket_message_mentions_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ticket_message_mentions>;
};

/** on_conflict condition type for table "ticket_message_mentions" */
export type ticket_message_mentions_on_conflict = {
  constraint: ticket_message_mentions_constraint;
  update_columns?: Array<ticket_message_mentions_update_column>;
  where?: InputMaybe<ticket_message_mentions_bool_exp>;
};

/** Ordering options when selecting data from "ticket_message_mentions". */
export type ticket_message_mentions_order_by = {
  created_at?: InputMaybe<order_by>;
  message?: InputMaybe<ticket_messages_order_by>;
  message_id?: InputMaybe<order_by>;
  user?: InputMaybe<account_agents_order_by>;
  user_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: ticket_message_mentions */
export type ticket_message_mentions_pk_columns_input = {
  message_id: Scalars['bigint'];
  user_id: Scalars['bigint'];
};

/** select columns of table "ticket_message_mentions" */
export enum ticket_message_mentions_select_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  message_id = 'message_id',
  /** column name */
  user_id = 'user_id'
}

/** input type for updating data in table "ticket_message_mentions" */
export type ticket_message_mentions_set_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  message_id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type ticket_message_mentions_stddev_fields = {
  __typename?: 'ticket_message_mentions_stddev_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ticket_message_mentions" */
export type ticket_message_mentions_stddev_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type ticket_message_mentions_stddev_pop_fields = {
  __typename?: 'ticket_message_mentions_stddev_pop_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ticket_message_mentions" */
export type ticket_message_mentions_stddev_pop_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type ticket_message_mentions_stddev_samp_fields = {
  __typename?: 'ticket_message_mentions_stddev_samp_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ticket_message_mentions" */
export type ticket_message_mentions_stddev_samp_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "ticket_message_mentions" */
export type ticket_message_mentions_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: ticket_message_mentions_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ticket_message_mentions_stream_cursor_value_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  message_id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type ticket_message_mentions_sum_fields = {
  __typename?: 'ticket_message_mentions_sum_fields';
  message_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "ticket_message_mentions" */
export type ticket_message_mentions_sum_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** update columns of table "ticket_message_mentions" */
export enum ticket_message_mentions_update_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  message_id = 'message_id',
  /** column name */
  user_id = 'user_id'
}

export type ticket_message_mentions_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ticket_message_mentions_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ticket_message_mentions_set_input>;
  /** filter the rows which have to be updated */
  where: ticket_message_mentions_bool_exp;
};

/** aggregate var_pop on columns */
export type ticket_message_mentions_var_pop_fields = {
  __typename?: 'ticket_message_mentions_var_pop_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ticket_message_mentions" */
export type ticket_message_mentions_var_pop_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type ticket_message_mentions_var_samp_fields = {
  __typename?: 'ticket_message_mentions_var_samp_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ticket_message_mentions" */
export type ticket_message_mentions_var_samp_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type ticket_message_mentions_variance_fields = {
  __typename?: 'ticket_message_mentions_variance_fields';
  message_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ticket_message_mentions" */
export type ticket_message_mentions_variance_order_by = {
  message_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** columns and relationships of "ticket_messages" */
export type ticket_messages = {
  __typename?: 'ticket_messages';
  account_id: Scalars['bigint'];
  /** An array relationship */
  attachments: Array<attachments>;
  /** An aggregate relationship */
  attachments_aggregate: attachments_aggregate;
  content?: Maybe<Scalars['String']>;
  content_attributes?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  internal?: Maybe<Scalars['Boolean']>;
  /** An array relationship */
  mentions: Array<ticket_message_mentions>;
  /** An aggregate relationship */
  mentions_aggregate: ticket_message_mentions_aggregate;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Int']>;
  sender_id?: Maybe<Scalars['Int']>;
  /** A computed field, executes function "view_ticket_sender_information" */
  sender_info?: Maybe<Scalars['jsonb']>;
  /** user, contact, system */
  sender_type: Scalars['String'];
  /** Message ID of the source message */
  source_id?: Maybe<Scalars['String']>;
  /** 0 = read, 1 = unread */
  status: Scalars['Int'];
  /** An object relationship */
  ticket?: Maybe<ticket>;
  /** An object relationship */
  ticket_activity_log?: Maybe<ticket_activity_log>;
  ticket_id?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "ticket_messages" */
export type ticket_messagesattachmentsArgs = {
  distinct_on?: InputMaybe<Array<attachments_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<attachments_order_by>>;
  where?: InputMaybe<attachments_bool_exp>;
};


/** columns and relationships of "ticket_messages" */
export type ticket_messagesattachments_aggregateArgs = {
  distinct_on?: InputMaybe<Array<attachments_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<attachments_order_by>>;
  where?: InputMaybe<attachments_bool_exp>;
};


/** columns and relationships of "ticket_messages" */
export type ticket_messagescontent_attributesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "ticket_messages" */
export type ticket_messagesmentionsArgs = {
  distinct_on?: InputMaybe<Array<ticket_message_mentions_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_message_mentions_order_by>>;
  where?: InputMaybe<ticket_message_mentions_bool_exp>;
};


/** columns and relationships of "ticket_messages" */
export type ticket_messagesmentions_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_message_mentions_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_message_mentions_order_by>>;
  where?: InputMaybe<ticket_message_mentions_bool_exp>;
};


/** columns and relationships of "ticket_messages" */
export type ticket_messagessender_infoArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "ticket_messages" */
export type ticket_messages_aggregate = {
  __typename?: 'ticket_messages_aggregate';
  aggregate?: Maybe<ticket_messages_aggregate_fields>;
  nodes: Array<ticket_messages>;
};

export type ticket_messages_aggregate_bool_exp = {
  bool_and?: InputMaybe<ticket_messages_aggregate_bool_exp_bool_and>;
  bool_or?: InputMaybe<ticket_messages_aggregate_bool_exp_bool_or>;
  count?: InputMaybe<ticket_messages_aggregate_bool_exp_count>;
};

export type ticket_messages_aggregate_bool_exp_bool_and = {
  arguments: ticket_messages_select_column_ticket_messages_aggregate_bool_exp_bool_and_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<ticket_messages_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type ticket_messages_aggregate_bool_exp_bool_or = {
  arguments: ticket_messages_select_column_ticket_messages_aggregate_bool_exp_bool_or_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<ticket_messages_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type ticket_messages_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<ticket_messages_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<ticket_messages_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "ticket_messages" */
export type ticket_messages_aggregate_fields = {
  __typename?: 'ticket_messages_aggregate_fields';
  avg?: Maybe<ticket_messages_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<ticket_messages_max_fields>;
  min?: Maybe<ticket_messages_min_fields>;
  stddev?: Maybe<ticket_messages_stddev_fields>;
  stddev_pop?: Maybe<ticket_messages_stddev_pop_fields>;
  stddev_samp?: Maybe<ticket_messages_stddev_samp_fields>;
  sum?: Maybe<ticket_messages_sum_fields>;
  var_pop?: Maybe<ticket_messages_var_pop_fields>;
  var_samp?: Maybe<ticket_messages_var_samp_fields>;
  variance?: Maybe<ticket_messages_variance_fields>;
};


/** aggregate fields of "ticket_messages" */
export type ticket_messages_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<ticket_messages_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ticket_messages" */
export type ticket_messages_aggregate_order_by = {
  avg?: InputMaybe<ticket_messages_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<ticket_messages_max_order_by>;
  min?: InputMaybe<ticket_messages_min_order_by>;
  stddev?: InputMaybe<ticket_messages_stddev_order_by>;
  stddev_pop?: InputMaybe<ticket_messages_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<ticket_messages_stddev_samp_order_by>;
  sum?: InputMaybe<ticket_messages_sum_order_by>;
  var_pop?: InputMaybe<ticket_messages_var_pop_order_by>;
  var_samp?: InputMaybe<ticket_messages_var_samp_order_by>;
  variance?: InputMaybe<ticket_messages_variance_order_by>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ticket_messages_append_input = {
  content_attributes?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "ticket_messages" */
export type ticket_messages_arr_rel_insert_input = {
  data: Array<ticket_messages_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ticket_messages_on_conflict>;
};

/** aggregate avg on columns */
export type ticket_messages_avg_fields = {
  __typename?: 'ticket_messages_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ticket_messages" */
export type ticket_messages_avg_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "ticket_messages". All fields are combined with a logical 'AND'. */
export type ticket_messages_bool_exp = {
  _and?: InputMaybe<Array<ticket_messages_bool_exp>>;
  _not?: InputMaybe<ticket_messages_bool_exp>;
  _or?: InputMaybe<Array<ticket_messages_bool_exp>>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  attachments?: InputMaybe<attachments_bool_exp>;
  attachments_aggregate?: InputMaybe<attachments_aggregate_bool_exp>;
  content?: InputMaybe<String_comparison_exp>;
  content_attributes?: InputMaybe<jsonb_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  internal?: InputMaybe<Boolean_comparison_exp>;
  mentions?: InputMaybe<ticket_message_mentions_bool_exp>;
  mentions_aggregate?: InputMaybe<ticket_message_mentions_aggregate_bool_exp>;
  message_type?: InputMaybe<Int_comparison_exp>;
  sender_id?: InputMaybe<Int_comparison_exp>;
  sender_info?: InputMaybe<jsonb_comparison_exp>;
  sender_type?: InputMaybe<String_comparison_exp>;
  source_id?: InputMaybe<String_comparison_exp>;
  status?: InputMaybe<Int_comparison_exp>;
  ticket?: InputMaybe<ticket_bool_exp>;
  ticket_activity_log?: InputMaybe<ticket_activity_log_bool_exp>;
  ticket_id?: InputMaybe<Int_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "ticket_messages" */
export enum ticket_messages_constraint {
  /** unique or primary key constraint on columns "id" */
  ticket_messages_pkey = 'ticket_messages_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ticket_messages_delete_at_path_input = {
  content_attributes?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ticket_messages_delete_elem_input = {
  content_attributes?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ticket_messages_delete_key_input = {
  content_attributes?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "ticket_messages" */
export type ticket_messages_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['Int']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<Scalars['Int']>;
  sender_id?: InputMaybe<Scalars['Int']>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<Scalars['Int']>;
  ticket_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "ticket_messages" */
export type ticket_messages_insert_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  attachments?: InputMaybe<attachments_arr_rel_insert_input>;
  content?: InputMaybe<Scalars['String']>;
  content_attributes?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  internal?: InputMaybe<Scalars['Boolean']>;
  mentions?: InputMaybe<ticket_message_mentions_arr_rel_insert_input>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<Scalars['Int']>;
  sender_id?: InputMaybe<Scalars['Int']>;
  /** user, contact, system */
  sender_type?: InputMaybe<Scalars['String']>;
  /** Message ID of the source message */
  source_id?: InputMaybe<Scalars['String']>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<Scalars['Int']>;
  ticket?: InputMaybe<ticket_obj_rel_insert_input>;
  ticket_activity_log?: InputMaybe<ticket_activity_log_obj_rel_insert_input>;
  ticket_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ticket_messages_max_fields = {
  __typename?: 'ticket_messages_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Int']>;
  sender_id?: Maybe<Scalars['Int']>;
  /** user, contact, system */
  sender_type?: Maybe<Scalars['String']>;
  /** Message ID of the source message */
  source_id?: Maybe<Scalars['String']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Int']>;
  ticket_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "ticket_messages" */
export type ticket_messages_max_order_by = {
  account_id?: InputMaybe<order_by>;
  content?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** user, contact, system */
  sender_type?: InputMaybe<order_by>;
  /** Message ID of the source message */
  source_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type ticket_messages_min_fields = {
  __typename?: 'ticket_messages_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Int']>;
  sender_id?: Maybe<Scalars['Int']>;
  /** user, contact, system */
  sender_type?: Maybe<Scalars['String']>;
  /** Message ID of the source message */
  source_id?: Maybe<Scalars['String']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Int']>;
  ticket_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "ticket_messages" */
export type ticket_messages_min_order_by = {
  account_id?: InputMaybe<order_by>;
  content?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** user, contact, system */
  sender_type?: InputMaybe<order_by>;
  /** Message ID of the source message */
  source_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** response of any mutation on the table "ticket_messages" */
export type ticket_messages_mutation_response = {
  __typename?: 'ticket_messages_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ticket_messages>;
};

/** input type for inserting object relation for remote table "ticket_messages" */
export type ticket_messages_obj_rel_insert_input = {
  data: ticket_messages_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<ticket_messages_on_conflict>;
};

/** on_conflict condition type for table "ticket_messages" */
export type ticket_messages_on_conflict = {
  constraint: ticket_messages_constraint;
  update_columns?: Array<ticket_messages_update_column>;
  where?: InputMaybe<ticket_messages_bool_exp>;
};

/** Ordering options when selecting data from "ticket_messages". */
export type ticket_messages_order_by = {
  account_id?: InputMaybe<order_by>;
  attachments_aggregate?: InputMaybe<attachments_aggregate_order_by>;
  content?: InputMaybe<order_by>;
  content_attributes?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  internal?: InputMaybe<order_by>;
  mentions_aggregate?: InputMaybe<ticket_message_mentions_aggregate_order_by>;
  message_type?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  sender_info?: InputMaybe<order_by>;
  sender_type?: InputMaybe<order_by>;
  source_id?: InputMaybe<order_by>;
  status?: InputMaybe<order_by>;
  ticket?: InputMaybe<ticket_order_by>;
  ticket_activity_log?: InputMaybe<ticket_activity_log_order_by>;
  ticket_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: ticket_messages */
export type ticket_messages_pk_columns_input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ticket_messages_prepend_input = {
  content_attributes?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "ticket_messages" */
export enum ticket_messages_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  content = 'content',
  /** column name */
  content_attributes = 'content_attributes',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  internal = 'internal',
  /** column name */
  message_type = 'message_type',
  /** column name */
  sender_id = 'sender_id',
  /** column name */
  sender_type = 'sender_type',
  /** column name */
  source_id = 'source_id',
  /** column name */
  status = 'status',
  /** column name */
  ticket_id = 'ticket_id',
  /** column name */
  updated_at = 'updated_at'
}

/** select "ticket_messages_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ticket_messages" */
export enum ticket_messages_select_column_ticket_messages_aggregate_bool_exp_bool_and_arguments_columns {
  /** column name */
  internal = 'internal'
}

/** select "ticket_messages_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ticket_messages" */
export enum ticket_messages_select_column_ticket_messages_aggregate_bool_exp_bool_or_arguments_columns {
  /** column name */
  internal = 'internal'
}

/** input type for updating data in table "ticket_messages" */
export type ticket_messages_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  content?: InputMaybe<Scalars['String']>;
  content_attributes?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  internal?: InputMaybe<Scalars['Boolean']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<Scalars['Int']>;
  sender_id?: InputMaybe<Scalars['Int']>;
  /** user, contact, system */
  sender_type?: InputMaybe<Scalars['String']>;
  /** Message ID of the source message */
  source_id?: InputMaybe<Scalars['String']>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<Scalars['Int']>;
  ticket_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type ticket_messages_stddev_fields = {
  __typename?: 'ticket_messages_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ticket_messages" */
export type ticket_messages_stddev_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type ticket_messages_stddev_pop_fields = {
  __typename?: 'ticket_messages_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ticket_messages" */
export type ticket_messages_stddev_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type ticket_messages_stddev_samp_fields = {
  __typename?: 'ticket_messages_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ticket_messages" */
export type ticket_messages_stddev_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "ticket_messages" */
export type ticket_messages_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: ticket_messages_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ticket_messages_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  content?: InputMaybe<Scalars['String']>;
  content_attributes?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  internal?: InputMaybe<Scalars['Boolean']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<Scalars['Int']>;
  sender_id?: InputMaybe<Scalars['Int']>;
  /** user, contact, system */
  sender_type?: InputMaybe<Scalars['String']>;
  /** Message ID of the source message */
  source_id?: InputMaybe<Scalars['String']>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<Scalars['Int']>;
  ticket_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type ticket_messages_sum_fields = {
  __typename?: 'ticket_messages_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['Int']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Int']>;
  sender_id?: Maybe<Scalars['Int']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Int']>;
  ticket_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "ticket_messages" */
export type ticket_messages_sum_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** update columns of table "ticket_messages" */
export enum ticket_messages_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  content = 'content',
  /** column name */
  content_attributes = 'content_attributes',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  internal = 'internal',
  /** column name */
  message_type = 'message_type',
  /** column name */
  sender_id = 'sender_id',
  /** column name */
  sender_type = 'sender_type',
  /** column name */
  source_id = 'source_id',
  /** column name */
  status = 'status',
  /** column name */
  ticket_id = 'ticket_id',
  /** column name */
  updated_at = 'updated_at'
}

export type ticket_messages_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<ticket_messages_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<ticket_messages_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<ticket_messages_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<ticket_messages_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ticket_messages_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<ticket_messages_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ticket_messages_set_input>;
  /** filter the rows which have to be updated */
  where: ticket_messages_bool_exp;
};

/** aggregate var_pop on columns */
export type ticket_messages_var_pop_fields = {
  __typename?: 'ticket_messages_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ticket_messages" */
export type ticket_messages_var_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type ticket_messages_var_samp_fields = {
  __typename?: 'ticket_messages_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ticket_messages" */
export type ticket_messages_var_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type ticket_messages_variance_fields = {
  __typename?: 'ticket_messages_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: Maybe<Scalars['Float']>;
  sender_id?: Maybe<Scalars['Float']>;
  /** 0 = read, 1 = unread */
  status?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ticket_messages" */
export type ticket_messages_variance_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 - incoming, 1 - outgoing, 2 - activity, 4 - internal, 5 - template */
  message_type?: InputMaybe<order_by>;
  sender_id?: InputMaybe<order_by>;
  /** 0 = read, 1 = unread */
  status?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type ticket_min_fields = {
  __typename?: 'ticket_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  assigned_agent?: Maybe<Scalars['bigint']>;
  assigned_team?: Maybe<Scalars['bigint']>;
  contact_id?: Maybe<Scalars['bigint']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by?: Maybe<Scalars['bigint']>;
  /** Creates a 8 character link id from uuid column */
  csat_id?: Maybe<Scalars['String']>;
  csat_language?: Maybe<Scalars['String']>;
  csat_sent_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: Maybe<Scalars['Int']>;
  resolution_time?: Maybe<Scalars['timestamptz']>;
  source?: Maybe<Scalars['String']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  ticket_form_id?: Maybe<Scalars['Int']>;
  /** A computed field, executes function "ticket_type" */
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uuid?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "ticket" */
export type ticket_min_order_by = {
  account_id?: InputMaybe<order_by>;
  assigned_agent?: InputMaybe<order_by>;
  assigned_team?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by?: InputMaybe<order_by>;
  csat_language?: InputMaybe<order_by>;
  csat_sent_at?: InputMaybe<order_by>;
  description?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<order_by>;
  resolution_time?: InputMaybe<order_by>;
  source?: InputMaybe<order_by>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<order_by>;
  subject?: InputMaybe<order_by>;
  ticket_form_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  uuid?: InputMaybe<order_by>;
};

/** response of any mutation on the table "ticket" */
export type ticket_mutation_response = {
  __typename?: 'ticket_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ticket>;
};

/** input type for inserting object relation for remote table "ticket" */
export type ticket_obj_rel_insert_input = {
  data: ticket_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<ticket_on_conflict>;
};

/** on_conflict condition type for table "ticket" */
export type ticket_on_conflict = {
  constraint: ticket_constraint;
  update_columns?: Array<ticket_update_column>;
  where?: InputMaybe<ticket_bool_exp>;
};

/** Ordering options when selecting data from "ticket". */
export type ticket_order_by = {
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  agent?: InputMaybe<users_order_by>;
  assigned_agent?: InputMaybe<order_by>;
  assigned_conversation?: InputMaybe<conversations_order_by>;
  assigned_team?: InputMaybe<order_by>;
  assigned_team_and_agent?: InputMaybe<team_members_order_by>;
  contact?: InputMaybe<contacts_order_by>;
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  conversations_closing_ticket_id_aggregate?: InputMaybe<conversations_aggregate_order_by>;
  created_at?: InputMaybe<order_by>;
  created_by?: InputMaybe<order_by>;
  created_user?: InputMaybe<users_order_by>;
  csat_feedback?: InputMaybe<csat_feedback_order_by>;
  csat_id?: InputMaybe<order_by>;
  csat_language?: InputMaybe<order_by>;
  csat_sent?: InputMaybe<order_by>;
  csat_sent_at?: InputMaybe<order_by>;
  description?: InputMaybe<order_by>;
  form_value?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  messages_aggregate?: InputMaybe<ticket_messages_aggregate_order_by>;
  priority?: InputMaybe<order_by>;
  resolution_time?: InputMaybe<order_by>;
  source?: InputMaybe<order_by>;
  status?: InputMaybe<order_by>;
  subject?: InputMaybe<order_by>;
  tab_type?: InputMaybe<order_by>;
  team?: InputMaybe<teams_order_by>;
  ticket_activity_logs_aggregate?: InputMaybe<ticket_activity_log_aggregate_order_by>;
  ticket_form?: InputMaybe<ticket_forms_order_by>;
  ticket_form_id?: InputMaybe<order_by>;
  ticket_shares_aggregate?: InputMaybe<ticket_share_aggregate_order_by>;
  ticket_tags_aggregate?: InputMaybe<ticket_tags_aggregate_order_by>;
  type?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  uuid?: InputMaybe<order_by>;
  watch_lists_aggregate?: InputMaybe<ticket_watch_list_aggregate_order_by>;
};

/** primary key columns input for table: ticket */
export type ticket_pk_columns_input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ticket_prepend_input = {
  form_value?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "ticket" */
export enum ticket_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  assigned_agent = 'assigned_agent',
  /** column name */
  assigned_team = 'assigned_team',
  /** column name */
  contact_id = 'contact_id',
  /** column name */
  conversation_id = 'conversation_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by = 'created_by',
  /** column name */
  csat_language = 'csat_language',
  /** column name */
  csat_sent = 'csat_sent',
  /** column name */
  csat_sent_at = 'csat_sent_at',
  /** column name */
  description = 'description',
  /** column name */
  form_value = 'form_value',
  /** column name */
  id = 'id',
  /** column name */
  priority = 'priority',
  /** column name */
  resolution_time = 'resolution_time',
  /** column name */
  source = 'source',
  /** column name */
  status = 'status',
  /** column name */
  subject = 'subject',
  /** column name */
  ticket_form_id = 'ticket_form_id',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  uuid = 'uuid'
}

/** select "ticket_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ticket" */
export enum ticket_select_column_ticket_aggregate_bool_exp_bool_and_arguments_columns {
  /** column name */
  csat_sent = 'csat_sent'
}

/** select "ticket_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ticket" */
export enum ticket_select_column_ticket_aggregate_bool_exp_bool_or_arguments_columns {
  /** column name */
  csat_sent = 'csat_sent'
}

/** input type for updating data in table "ticket" */
export type ticket_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  assigned_agent?: InputMaybe<Scalars['bigint']>;
  assigned_team?: InputMaybe<Scalars['bigint']>;
  contact_id?: InputMaybe<Scalars['bigint']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<Scalars['bigint']>;
  csat_language?: InputMaybe<Scalars['String']>;
  csat_sent?: InputMaybe<Scalars['Boolean']>;
  csat_sent_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  form_value?: InputMaybe<Scalars['jsonb']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<Scalars['Int']>;
  resolution_time?: InputMaybe<Scalars['timestamptz']>;
  source?: InputMaybe<Scalars['String']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<Scalars['Int']>;
  subject?: InputMaybe<Scalars['String']>;
  ticket_form_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  uuid?: InputMaybe<Scalars['uuid']>;
};

/** columns and relationships of "ticket_share" */
export type ticket_share = {
  __typename?: 'ticket_share';
  account_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  /** An object relationship */
  team: teams;
  team_id: Scalars['Int'];
  /** An object relationship */
  ticket: ticket;
  ticket_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "ticket_share" */
export type ticket_share_aggregate = {
  __typename?: 'ticket_share_aggregate';
  aggregate?: Maybe<ticket_share_aggregate_fields>;
  nodes: Array<ticket_share>;
};

export type ticket_share_aggregate_bool_exp = {
  count?: InputMaybe<ticket_share_aggregate_bool_exp_count>;
};

export type ticket_share_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<ticket_share_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<ticket_share_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "ticket_share" */
export type ticket_share_aggregate_fields = {
  __typename?: 'ticket_share_aggregate_fields';
  avg?: Maybe<ticket_share_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<ticket_share_max_fields>;
  min?: Maybe<ticket_share_min_fields>;
  stddev?: Maybe<ticket_share_stddev_fields>;
  stddev_pop?: Maybe<ticket_share_stddev_pop_fields>;
  stddev_samp?: Maybe<ticket_share_stddev_samp_fields>;
  sum?: Maybe<ticket_share_sum_fields>;
  var_pop?: Maybe<ticket_share_var_pop_fields>;
  var_samp?: Maybe<ticket_share_var_samp_fields>;
  variance?: Maybe<ticket_share_variance_fields>;
};


/** aggregate fields of "ticket_share" */
export type ticket_share_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<ticket_share_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ticket_share" */
export type ticket_share_aggregate_order_by = {
  avg?: InputMaybe<ticket_share_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<ticket_share_max_order_by>;
  min?: InputMaybe<ticket_share_min_order_by>;
  stddev?: InputMaybe<ticket_share_stddev_order_by>;
  stddev_pop?: InputMaybe<ticket_share_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<ticket_share_stddev_samp_order_by>;
  sum?: InputMaybe<ticket_share_sum_order_by>;
  var_pop?: InputMaybe<ticket_share_var_pop_order_by>;
  var_samp?: InputMaybe<ticket_share_var_samp_order_by>;
  variance?: InputMaybe<ticket_share_variance_order_by>;
};

/** input type for inserting array relation for remote table "ticket_share" */
export type ticket_share_arr_rel_insert_input = {
  data: Array<ticket_share_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ticket_share_on_conflict>;
};

/** aggregate avg on columns */
export type ticket_share_avg_fields = {
  __typename?: 'ticket_share_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ticket_share" */
export type ticket_share_avg_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "ticket_share". All fields are combined with a logical 'AND'. */
export type ticket_share_bool_exp = {
  _and?: InputMaybe<Array<ticket_share_bool_exp>>;
  _not?: InputMaybe<ticket_share_bool_exp>;
  _or?: InputMaybe<Array<ticket_share_bool_exp>>;
  account_id?: InputMaybe<Int_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  team?: InputMaybe<teams_bool_exp>;
  team_id?: InputMaybe<Int_comparison_exp>;
  ticket?: InputMaybe<ticket_bool_exp>;
  ticket_id?: InputMaybe<Int_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "ticket_share" */
export enum ticket_share_constraint {
  /** unique or primary key constraint on columns "id" */
  ticket_share_pkey = 'ticket_share_pkey',
  /** unique or primary key constraint on columns "ticket_id", "team_id" */
  ticket_share_ticket_id_team_id_key = 'ticket_share_ticket_id_team_id_key'
}

/** input type for incrementing numeric columns in table "ticket_share" */
export type ticket_share_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  team_id?: InputMaybe<Scalars['Int']>;
  ticket_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "ticket_share" */
export type ticket_share_insert_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  team?: InputMaybe<teams_obj_rel_insert_input>;
  team_id?: InputMaybe<Scalars['Int']>;
  ticket?: InputMaybe<ticket_obj_rel_insert_input>;
  ticket_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ticket_share_max_fields = {
  __typename?: 'ticket_share_max_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  team_id?: Maybe<Scalars['Int']>;
  ticket_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "ticket_share" */
export type ticket_share_max_order_by = {
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type ticket_share_min_fields = {
  __typename?: 'ticket_share_min_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  team_id?: Maybe<Scalars['Int']>;
  ticket_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "ticket_share" */
export type ticket_share_min_order_by = {
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** response of any mutation on the table "ticket_share" */
export type ticket_share_mutation_response = {
  __typename?: 'ticket_share_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ticket_share>;
};

/** on_conflict condition type for table "ticket_share" */
export type ticket_share_on_conflict = {
  constraint: ticket_share_constraint;
  update_columns?: Array<ticket_share_update_column>;
  where?: InputMaybe<ticket_share_bool_exp>;
};

/** Ordering options when selecting data from "ticket_share". */
export type ticket_share_order_by = {
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  team?: InputMaybe<teams_order_by>;
  team_id?: InputMaybe<order_by>;
  ticket?: InputMaybe<ticket_order_by>;
  ticket_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: ticket_share */
export type ticket_share_pk_columns_input = {
  id: Scalars['Int'];
};

/** select columns of table "ticket_share" */
export enum ticket_share_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  team_id = 'team_id',
  /** column name */
  ticket_id = 'ticket_id',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "ticket_share" */
export type ticket_share_set_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  team_id?: InputMaybe<Scalars['Int']>;
  ticket_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type ticket_share_stddev_fields = {
  __typename?: 'ticket_share_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ticket_share" */
export type ticket_share_stddev_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type ticket_share_stddev_pop_fields = {
  __typename?: 'ticket_share_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ticket_share" */
export type ticket_share_stddev_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type ticket_share_stddev_samp_fields = {
  __typename?: 'ticket_share_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ticket_share" */
export type ticket_share_stddev_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "ticket_share" */
export type ticket_share_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: ticket_share_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ticket_share_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  team_id?: InputMaybe<Scalars['Int']>;
  ticket_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type ticket_share_sum_fields = {
  __typename?: 'ticket_share_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  team_id?: Maybe<Scalars['Int']>;
  ticket_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "ticket_share" */
export type ticket_share_sum_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** update columns of table "ticket_share" */
export enum ticket_share_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  team_id = 'team_id',
  /** column name */
  ticket_id = 'ticket_id',
  /** column name */
  updated_at = 'updated_at'
}

export type ticket_share_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ticket_share_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ticket_share_set_input>;
  /** filter the rows which have to be updated */
  where: ticket_share_bool_exp;
};

/** aggregate var_pop on columns */
export type ticket_share_var_pop_fields = {
  __typename?: 'ticket_share_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ticket_share" */
export type ticket_share_var_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type ticket_share_var_samp_fields = {
  __typename?: 'ticket_share_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ticket_share" */
export type ticket_share_var_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type ticket_share_variance_fields = {
  __typename?: 'ticket_share_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  team_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ticket_share" */
export type ticket_share_variance_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  team_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate stddev on columns */
export type ticket_stddev_fields = {
  __typename?: 'ticket_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  assigned_agent?: Maybe<Scalars['Float']>;
  assigned_team?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  created_by?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: Maybe<Scalars['Float']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
  ticket_form_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ticket" */
export type ticket_stddev_order_by = {
  account_id?: InputMaybe<order_by>;
  assigned_agent?: InputMaybe<order_by>;
  assigned_team?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_by?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<order_by>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<order_by>;
  ticket_form_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type ticket_stddev_pop_fields = {
  __typename?: 'ticket_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  assigned_agent?: Maybe<Scalars['Float']>;
  assigned_team?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  created_by?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: Maybe<Scalars['Float']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
  ticket_form_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ticket" */
export type ticket_stddev_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  assigned_agent?: InputMaybe<order_by>;
  assigned_team?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_by?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<order_by>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<order_by>;
  ticket_form_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type ticket_stddev_samp_fields = {
  __typename?: 'ticket_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  assigned_agent?: Maybe<Scalars['Float']>;
  assigned_team?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  created_by?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: Maybe<Scalars['Float']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
  ticket_form_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ticket" */
export type ticket_stddev_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  assigned_agent?: InputMaybe<order_by>;
  assigned_team?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_by?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<order_by>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<order_by>;
  ticket_form_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "ticket" */
export type ticket_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: ticket_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ticket_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  assigned_agent?: InputMaybe<Scalars['bigint']>;
  assigned_team?: InputMaybe<Scalars['bigint']>;
  contact_id?: InputMaybe<Scalars['bigint']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<Scalars['bigint']>;
  csat_language?: InputMaybe<Scalars['String']>;
  csat_sent?: InputMaybe<Scalars['Boolean']>;
  csat_sent_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  form_value?: InputMaybe<Scalars['jsonb']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<Scalars['Int']>;
  resolution_time?: InputMaybe<Scalars['timestamptz']>;
  source?: InputMaybe<Scalars['String']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<Scalars['Int']>;
  subject?: InputMaybe<Scalars['String']>;
  ticket_form_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  uuid?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type ticket_sum_fields = {
  __typename?: 'ticket_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  assigned_agent?: Maybe<Scalars['bigint']>;
  assigned_team?: Maybe<Scalars['bigint']>;
  contact_id?: Maybe<Scalars['bigint']>;
  conversation_id?: Maybe<Scalars['bigint']>;
  created_by?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: Maybe<Scalars['Int']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Int']>;
  ticket_form_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "ticket" */
export type ticket_sum_order_by = {
  account_id?: InputMaybe<order_by>;
  assigned_agent?: InputMaybe<order_by>;
  assigned_team?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_by?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<order_by>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<order_by>;
  ticket_form_id?: InputMaybe<order_by>;
};

/** columns and relationships of "ticket_tags" */
export type ticket_tags = {
  __typename?: 'ticket_tags';
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  /** An object relationship */
  tag: tags;
  tag_id: Scalars['bigint'];
  /** An object relationship */
  ticket: ticket;
  ticket_id: Scalars['bigint'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "ticket_tags" */
export type ticket_tags_aggregate = {
  __typename?: 'ticket_tags_aggregate';
  aggregate?: Maybe<ticket_tags_aggregate_fields>;
  nodes: Array<ticket_tags>;
};

export type ticket_tags_aggregate_bool_exp = {
  count?: InputMaybe<ticket_tags_aggregate_bool_exp_count>;
};

export type ticket_tags_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<ticket_tags_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<ticket_tags_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "ticket_tags" */
export type ticket_tags_aggregate_fields = {
  __typename?: 'ticket_tags_aggregate_fields';
  avg?: Maybe<ticket_tags_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<ticket_tags_max_fields>;
  min?: Maybe<ticket_tags_min_fields>;
  stddev?: Maybe<ticket_tags_stddev_fields>;
  stddev_pop?: Maybe<ticket_tags_stddev_pop_fields>;
  stddev_samp?: Maybe<ticket_tags_stddev_samp_fields>;
  sum?: Maybe<ticket_tags_sum_fields>;
  var_pop?: Maybe<ticket_tags_var_pop_fields>;
  var_samp?: Maybe<ticket_tags_var_samp_fields>;
  variance?: Maybe<ticket_tags_variance_fields>;
};


/** aggregate fields of "ticket_tags" */
export type ticket_tags_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<ticket_tags_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ticket_tags" */
export type ticket_tags_aggregate_order_by = {
  avg?: InputMaybe<ticket_tags_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<ticket_tags_max_order_by>;
  min?: InputMaybe<ticket_tags_min_order_by>;
  stddev?: InputMaybe<ticket_tags_stddev_order_by>;
  stddev_pop?: InputMaybe<ticket_tags_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<ticket_tags_stddev_samp_order_by>;
  sum?: InputMaybe<ticket_tags_sum_order_by>;
  var_pop?: InputMaybe<ticket_tags_var_pop_order_by>;
  var_samp?: InputMaybe<ticket_tags_var_samp_order_by>;
  variance?: InputMaybe<ticket_tags_variance_order_by>;
};

/** input type for inserting array relation for remote table "ticket_tags" */
export type ticket_tags_arr_rel_insert_input = {
  data: Array<ticket_tags_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ticket_tags_on_conflict>;
};

/** aggregate avg on columns */
export type ticket_tags_avg_fields = {
  __typename?: 'ticket_tags_avg_fields';
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ticket_tags" */
export type ticket_tags_avg_order_by = {
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "ticket_tags". All fields are combined with a logical 'AND'. */
export type ticket_tags_bool_exp = {
  _and?: InputMaybe<Array<ticket_tags_bool_exp>>;
  _not?: InputMaybe<ticket_tags_bool_exp>;
  _or?: InputMaybe<Array<ticket_tags_bool_exp>>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  tag?: InputMaybe<tags_bool_exp>;
  tag_id?: InputMaybe<bigint_comparison_exp>;
  ticket?: InputMaybe<ticket_bool_exp>;
  ticket_id?: InputMaybe<bigint_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "ticket_tags" */
export enum ticket_tags_constraint {
  /** unique or primary key constraint on columns "id" */
  tickets_tags_pkey = 'tickets_tags_pkey',
  /** unique or primary key constraint on columns "ticket_id", "tag_id" */
  tickets_tags_ticket_id_tag_id_key = 'tickets_tags_ticket_id_tag_id_key'
}

/** input type for incrementing numeric columns in table "ticket_tags" */
export type ticket_tags_inc_input = {
  id?: InputMaybe<Scalars['bigint']>;
  tag_id?: InputMaybe<Scalars['bigint']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "ticket_tags" */
export type ticket_tags_insert_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag?: InputMaybe<tags_obj_rel_insert_input>;
  tag_id?: InputMaybe<Scalars['bigint']>;
  ticket?: InputMaybe<ticket_obj_rel_insert_input>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ticket_tags_max_fields = {
  __typename?: 'ticket_tags_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  tag_id?: Maybe<Scalars['bigint']>;
  ticket_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "ticket_tags" */
export type ticket_tags_max_order_by = {
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type ticket_tags_min_fields = {
  __typename?: 'ticket_tags_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  tag_id?: Maybe<Scalars['bigint']>;
  ticket_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "ticket_tags" */
export type ticket_tags_min_order_by = {
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** response of any mutation on the table "ticket_tags" */
export type ticket_tags_mutation_response = {
  __typename?: 'ticket_tags_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ticket_tags>;
};

/** on_conflict condition type for table "ticket_tags" */
export type ticket_tags_on_conflict = {
  constraint: ticket_tags_constraint;
  update_columns?: Array<ticket_tags_update_column>;
  where?: InputMaybe<ticket_tags_bool_exp>;
};

/** Ordering options when selecting data from "ticket_tags". */
export type ticket_tags_order_by = {
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  tag?: InputMaybe<tags_order_by>;
  tag_id?: InputMaybe<order_by>;
  ticket?: InputMaybe<ticket_order_by>;
  ticket_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: ticket_tags */
export type ticket_tags_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "ticket_tags" */
export enum ticket_tags_select_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  tag_id = 'tag_id',
  /** column name */
  ticket_id = 'ticket_id',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "ticket_tags" */
export type ticket_tags_set_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag_id?: InputMaybe<Scalars['bigint']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type ticket_tags_stddev_fields = {
  __typename?: 'ticket_tags_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ticket_tags" */
export type ticket_tags_stddev_order_by = {
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type ticket_tags_stddev_pop_fields = {
  __typename?: 'ticket_tags_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ticket_tags" */
export type ticket_tags_stddev_pop_order_by = {
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type ticket_tags_stddev_samp_fields = {
  __typename?: 'ticket_tags_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ticket_tags" */
export type ticket_tags_stddev_samp_order_by = {
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "ticket_tags" */
export type ticket_tags_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: ticket_tags_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ticket_tags_stream_cursor_value_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  tag_id?: InputMaybe<Scalars['bigint']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type ticket_tags_sum_fields = {
  __typename?: 'ticket_tags_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  tag_id?: Maybe<Scalars['bigint']>;
  ticket_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "ticket_tags" */
export type ticket_tags_sum_order_by = {
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** update columns of table "ticket_tags" */
export enum ticket_tags_update_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  tag_id = 'tag_id',
  /** column name */
  ticket_id = 'ticket_id',
  /** column name */
  updated_at = 'updated_at'
}

export type ticket_tags_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ticket_tags_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ticket_tags_set_input>;
  /** filter the rows which have to be updated */
  where: ticket_tags_bool_exp;
};

/** aggregate var_pop on columns */
export type ticket_tags_var_pop_fields = {
  __typename?: 'ticket_tags_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ticket_tags" */
export type ticket_tags_var_pop_order_by = {
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type ticket_tags_var_samp_fields = {
  __typename?: 'ticket_tags_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ticket_tags" */
export type ticket_tags_var_samp_order_by = {
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type ticket_tags_variance_fields = {
  __typename?: 'ticket_tags_variance_fields';
  id?: Maybe<Scalars['Float']>;
  tag_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ticket_tags" */
export type ticket_tags_variance_order_by = {
  id?: InputMaybe<order_by>;
  tag_id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
};

/** update columns of table "ticket" */
export enum ticket_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  assigned_agent = 'assigned_agent',
  /** column name */
  assigned_team = 'assigned_team',
  /** column name */
  contact_id = 'contact_id',
  /** column name */
  conversation_id = 'conversation_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by = 'created_by',
  /** column name */
  csat_language = 'csat_language',
  /** column name */
  csat_sent = 'csat_sent',
  /** column name */
  csat_sent_at = 'csat_sent_at',
  /** column name */
  description = 'description',
  /** column name */
  form_value = 'form_value',
  /** column name */
  id = 'id',
  /** column name */
  priority = 'priority',
  /** column name */
  resolution_time = 'resolution_time',
  /** column name */
  source = 'source',
  /** column name */
  status = 'status',
  /** column name */
  subject = 'subject',
  /** column name */
  ticket_form_id = 'ticket_form_id',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  uuid = 'uuid'
}

export type ticket_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<ticket_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<ticket_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<ticket_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<ticket_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ticket_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<ticket_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ticket_set_input>;
  /** filter the rows which have to be updated */
  where: ticket_bool_exp;
};

/** aggregate var_pop on columns */
export type ticket_var_pop_fields = {
  __typename?: 'ticket_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  assigned_agent?: Maybe<Scalars['Float']>;
  assigned_team?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  created_by?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: Maybe<Scalars['Float']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
  ticket_form_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ticket" */
export type ticket_var_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  assigned_agent?: InputMaybe<order_by>;
  assigned_team?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_by?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<order_by>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<order_by>;
  ticket_form_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type ticket_var_samp_fields = {
  __typename?: 'ticket_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  assigned_agent?: Maybe<Scalars['Float']>;
  assigned_team?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  created_by?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: Maybe<Scalars['Float']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
  ticket_form_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ticket" */
export type ticket_var_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  assigned_agent?: InputMaybe<order_by>;
  assigned_team?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_by?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<order_by>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<order_by>;
  ticket_form_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type ticket_variance_fields = {
  __typename?: 'ticket_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  assigned_agent?: Maybe<Scalars['Float']>;
  assigned_team?: Maybe<Scalars['Float']>;
  contact_id?: Maybe<Scalars['Float']>;
  conversation_id?: Maybe<Scalars['Float']>;
  created_by?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: Maybe<Scalars['Float']>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: Maybe<Scalars['Float']>;
  ticket_form_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ticket" */
export type ticket_variance_order_by = {
  account_id?: InputMaybe<order_by>;
  assigned_agent?: InputMaybe<order_by>;
  assigned_team?: InputMaybe<order_by>;
  contact_id?: InputMaybe<order_by>;
  conversation_id?: InputMaybe<order_by>;
  created_by?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 0 = low, 1 = medium, 2 = high, 3 = urgent */
  priority?: InputMaybe<order_by>;
  /** 0 = open, 1 = On Progress, 2 = Waiting for Customer Reply , 3 = Resolved , 4 = Closed */
  status?: InputMaybe<order_by>;
  ticket_form_id?: InputMaybe<order_by>;
};

/** columns and relationships of "ticket_watch_list" */
export type ticket_watch_list = {
  __typename?: 'ticket_watch_list';
  account_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  /** An object relationship */
  ticket: ticket;
  ticket_id: Scalars['bigint'];
  updated_at: Scalars['timestamptz'];
  user_id: Scalars['bigint'];
};

/** aggregated selection of "ticket_watch_list" */
export type ticket_watch_list_aggregate = {
  __typename?: 'ticket_watch_list_aggregate';
  aggregate?: Maybe<ticket_watch_list_aggregate_fields>;
  nodes: Array<ticket_watch_list>;
};

export type ticket_watch_list_aggregate_bool_exp = {
  count?: InputMaybe<ticket_watch_list_aggregate_bool_exp_count>;
};

export type ticket_watch_list_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<ticket_watch_list_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<ticket_watch_list_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "ticket_watch_list" */
export type ticket_watch_list_aggregate_fields = {
  __typename?: 'ticket_watch_list_aggregate_fields';
  avg?: Maybe<ticket_watch_list_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<ticket_watch_list_max_fields>;
  min?: Maybe<ticket_watch_list_min_fields>;
  stddev?: Maybe<ticket_watch_list_stddev_fields>;
  stddev_pop?: Maybe<ticket_watch_list_stddev_pop_fields>;
  stddev_samp?: Maybe<ticket_watch_list_stddev_samp_fields>;
  sum?: Maybe<ticket_watch_list_sum_fields>;
  var_pop?: Maybe<ticket_watch_list_var_pop_fields>;
  var_samp?: Maybe<ticket_watch_list_var_samp_fields>;
  variance?: Maybe<ticket_watch_list_variance_fields>;
};


/** aggregate fields of "ticket_watch_list" */
export type ticket_watch_list_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<ticket_watch_list_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ticket_watch_list" */
export type ticket_watch_list_aggregate_order_by = {
  avg?: InputMaybe<ticket_watch_list_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<ticket_watch_list_max_order_by>;
  min?: InputMaybe<ticket_watch_list_min_order_by>;
  stddev?: InputMaybe<ticket_watch_list_stddev_order_by>;
  stddev_pop?: InputMaybe<ticket_watch_list_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<ticket_watch_list_stddev_samp_order_by>;
  sum?: InputMaybe<ticket_watch_list_sum_order_by>;
  var_pop?: InputMaybe<ticket_watch_list_var_pop_order_by>;
  var_samp?: InputMaybe<ticket_watch_list_var_samp_order_by>;
  variance?: InputMaybe<ticket_watch_list_variance_order_by>;
};

/** input type for inserting array relation for remote table "ticket_watch_list" */
export type ticket_watch_list_arr_rel_insert_input = {
  data: Array<ticket_watch_list_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ticket_watch_list_on_conflict>;
};

/** aggregate avg on columns */
export type ticket_watch_list_avg_fields = {
  __typename?: 'ticket_watch_list_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ticket_watch_list" */
export type ticket_watch_list_avg_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "ticket_watch_list". All fields are combined with a logical 'AND'. */
export type ticket_watch_list_bool_exp = {
  _and?: InputMaybe<Array<ticket_watch_list_bool_exp>>;
  _not?: InputMaybe<ticket_watch_list_bool_exp>;
  _or?: InputMaybe<Array<ticket_watch_list_bool_exp>>;
  account_id?: InputMaybe<Int_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  ticket?: InputMaybe<ticket_bool_exp>;
  ticket_id?: InputMaybe<bigint_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  user_id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "ticket_watch_list" */
export enum ticket_watch_list_constraint {
  /** unique or primary key constraint on columns "id" */
  ticket_watch_list_pkey = 'ticket_watch_list_pkey',
  /** unique or primary key constraint on columns "ticket_id", "user_id" */
  ticket_watch_list_ticket_id_user_id_key = 'ticket_watch_list_ticket_id_user_id_key'
}

/** input type for incrementing numeric columns in table "ticket_watch_list" */
export type ticket_watch_list_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "ticket_watch_list" */
export type ticket_watch_list_insert_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  ticket?: InputMaybe<ticket_obj_rel_insert_input>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type ticket_watch_list_max_fields = {
  __typename?: 'ticket_watch_list_max_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  ticket_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "ticket_watch_list" */
export type ticket_watch_list_max_order_by = {
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type ticket_watch_list_min_fields = {
  __typename?: 'ticket_watch_list_min_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  ticket_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "ticket_watch_list" */
export type ticket_watch_list_min_order_by = {
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** response of any mutation on the table "ticket_watch_list" */
export type ticket_watch_list_mutation_response = {
  __typename?: 'ticket_watch_list_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ticket_watch_list>;
};

/** on_conflict condition type for table "ticket_watch_list" */
export type ticket_watch_list_on_conflict = {
  constraint: ticket_watch_list_constraint;
  update_columns?: Array<ticket_watch_list_update_column>;
  where?: InputMaybe<ticket_watch_list_bool_exp>;
};

/** Ordering options when selecting data from "ticket_watch_list". */
export type ticket_watch_list_order_by = {
  account_id?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  ticket?: InputMaybe<ticket_order_by>;
  ticket_id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: ticket_watch_list */
export type ticket_watch_list_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "ticket_watch_list" */
export enum ticket_watch_list_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  ticket_id = 'ticket_id',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

/** input type for updating data in table "ticket_watch_list" */
export type ticket_watch_list_set_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type ticket_watch_list_stddev_fields = {
  __typename?: 'ticket_watch_list_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ticket_watch_list" */
export type ticket_watch_list_stddev_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type ticket_watch_list_stddev_pop_fields = {
  __typename?: 'ticket_watch_list_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ticket_watch_list" */
export type ticket_watch_list_stddev_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type ticket_watch_list_stddev_samp_fields = {
  __typename?: 'ticket_watch_list_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ticket_watch_list" */
export type ticket_watch_list_stddev_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "ticket_watch_list" */
export type ticket_watch_list_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: ticket_watch_list_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ticket_watch_list_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  ticket_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type ticket_watch_list_sum_fields = {
  __typename?: 'ticket_watch_list_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  ticket_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "ticket_watch_list" */
export type ticket_watch_list_sum_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** update columns of table "ticket_watch_list" */
export enum ticket_watch_list_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  ticket_id = 'ticket_id',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  user_id = 'user_id'
}

export type ticket_watch_list_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ticket_watch_list_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ticket_watch_list_set_input>;
  /** filter the rows which have to be updated */
  where: ticket_watch_list_bool_exp;
};

/** aggregate var_pop on columns */
export type ticket_watch_list_var_pop_fields = {
  __typename?: 'ticket_watch_list_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ticket_watch_list" */
export type ticket_watch_list_var_pop_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type ticket_watch_list_var_samp_fields = {
  __typename?: 'ticket_watch_list_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ticket_watch_list" */
export type ticket_watch_list_var_samp_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type ticket_watch_list_variance_fields = {
  __typename?: 'ticket_watch_list_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ticket_watch_list" */
export type ticket_watch_list_variance_order_by = {
  account_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  ticket_id?: InputMaybe<order_by>;
  user_id?: InputMaybe<order_by>;
};

/** Boolean expression to compare columns of type "time". All fields are combined with logical 'AND'. */
export type time_comparison_exp = {
  _eq?: InputMaybe<Scalars['time']>;
  _gt?: InputMaybe<Scalars['time']>;
  _gte?: InputMaybe<Scalars['time']>;
  _in?: InputMaybe<Array<Scalars['time']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['time']>;
  _lte?: InputMaybe<Scalars['time']>;
  _neq?: InputMaybe<Scalars['time']>;
  _nin?: InputMaybe<Array<Scalars['time']>>;
};

/** Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'. */
export type timestamp_comparison_exp = {
  _eq?: InputMaybe<Scalars['timestamp']>;
  _gt?: InputMaybe<Scalars['timestamp']>;
  _gte?: InputMaybe<Scalars['timestamp']>;
  _in?: InputMaybe<Array<Scalars['timestamp']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['timestamp']>;
  _lte?: InputMaybe<Scalars['timestamp']>;
  _neq?: InputMaybe<Scalars['timestamp']>;
  _nin?: InputMaybe<Array<Scalars['timestamp']>>;
};

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type timestamptz_comparison_exp = {
  _eq?: InputMaybe<Scalars['timestamptz']>;
  _gt?: InputMaybe<Scalars['timestamptz']>;
  _gte?: InputMaybe<Scalars['timestamptz']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['timestamptz']>;
  _lte?: InputMaybe<Scalars['timestamptz']>;
  _neq?: InputMaybe<Scalars['timestamptz']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']>>;
};

/** Boolean expression to compare columns of type "timetz". All fields are combined with logical 'AND'. */
export type timetz_comparison_exp = {
  _eq?: InputMaybe<Scalars['timetz']>;
  _gt?: InputMaybe<Scalars['timetz']>;
  _gte?: InputMaybe<Scalars['timetz']>;
  _in?: InputMaybe<Array<Scalars['timetz']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['timetz']>;
  _lte?: InputMaybe<Scalars['timetz']>;
  _neq?: InputMaybe<Scalars['timetz']>;
  _nin?: InputMaybe<Array<Scalars['timetz']>>;
};

/** columns and relationships of "update_version" */
export type update_version = {
  __typename?: 'update_version';
  version: Scalars['String'];
};

/** aggregated selection of "update_version" */
export type update_version_aggregate = {
  __typename?: 'update_version_aggregate';
  aggregate?: Maybe<update_version_aggregate_fields>;
  nodes: Array<update_version>;
};

/** aggregate fields of "update_version" */
export type update_version_aggregate_fields = {
  __typename?: 'update_version_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<update_version_max_fields>;
  min?: Maybe<update_version_min_fields>;
};


/** aggregate fields of "update_version" */
export type update_version_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<update_version_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "update_version". All fields are combined with a logical 'AND'. */
export type update_version_bool_exp = {
  _and?: InputMaybe<Array<update_version_bool_exp>>;
  _not?: InputMaybe<update_version_bool_exp>;
  _or?: InputMaybe<Array<update_version_bool_exp>>;
  version?: InputMaybe<String_comparison_exp>;
};

/** unique or primary key constraints on table "update_version" */
export enum update_version_constraint {
  /** unique or primary key constraint on columns "version" */
  update_version_pkey = 'update_version_pkey'
}

/** input type for inserting data into table "update_version" */
export type update_version_insert_input = {
  version?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type update_version_max_fields = {
  __typename?: 'update_version_max_fields';
  version?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type update_version_min_fields = {
  __typename?: 'update_version_min_fields';
  version?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "update_version" */
export type update_version_mutation_response = {
  __typename?: 'update_version_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<update_version>;
};

/** on_conflict condition type for table "update_version" */
export type update_version_on_conflict = {
  constraint: update_version_constraint;
  update_columns?: Array<update_version_update_column>;
  where?: InputMaybe<update_version_bool_exp>;
};

/** Ordering options when selecting data from "update_version". */
export type update_version_order_by = {
  version?: InputMaybe<order_by>;
};

/** primary key columns input for table: update_version */
export type update_version_pk_columns_input = {
  version: Scalars['String'];
};

/** select columns of table "update_version" */
export enum update_version_select_column {
  /** column name */
  version = 'version'
}

/** input type for updating data in table "update_version" */
export type update_version_set_input = {
  version?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "update_version" */
export type update_version_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: update_version_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type update_version_stream_cursor_value_input = {
  version?: InputMaybe<Scalars['String']>;
};

/** update columns of table "update_version" */
export enum update_version_update_column {
  /** column name */
  version = 'version'
}

export type update_version_updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<update_version_set_input>;
  /** filter the rows which have to be updated */
  where: update_version_bool_exp;
};

/** All user role available. */
export type user_roles = {
  __typename?: 'user_roles';
  /** An array relationship */
  account_users: Array<account_users>;
  /** An aggregate relationship */
  account_users_aggregate: account_users_aggregate;
  created_at: Scalars['timestamptz'];
  description: Scalars['String'];
  id: Scalars['Int'];
  name: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** All user role available. */
export type user_rolesaccount_usersArgs = {
  distinct_on?: InputMaybe<Array<account_users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_users_order_by>>;
  where?: InputMaybe<account_users_bool_exp>;
};


/** All user role available. */
export type user_rolesaccount_users_aggregateArgs = {
  distinct_on?: InputMaybe<Array<account_users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_users_order_by>>;
  where?: InputMaybe<account_users_bool_exp>;
};

/** aggregated selection of "user_roles" */
export type user_roles_aggregate = {
  __typename?: 'user_roles_aggregate';
  aggregate?: Maybe<user_roles_aggregate_fields>;
  nodes: Array<user_roles>;
};

/** aggregate fields of "user_roles" */
export type user_roles_aggregate_fields = {
  __typename?: 'user_roles_aggregate_fields';
  avg?: Maybe<user_roles_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<user_roles_max_fields>;
  min?: Maybe<user_roles_min_fields>;
  stddev?: Maybe<user_roles_stddev_fields>;
  stddev_pop?: Maybe<user_roles_stddev_pop_fields>;
  stddev_samp?: Maybe<user_roles_stddev_samp_fields>;
  sum?: Maybe<user_roles_sum_fields>;
  var_pop?: Maybe<user_roles_var_pop_fields>;
  var_samp?: Maybe<user_roles_var_samp_fields>;
  variance?: Maybe<user_roles_variance_fields>;
};


/** aggregate fields of "user_roles" */
export type user_roles_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<user_roles_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type user_roles_avg_fields = {
  __typename?: 'user_roles_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "user_roles". All fields are combined with a logical 'AND'. */
export type user_roles_bool_exp = {
  _and?: InputMaybe<Array<user_roles_bool_exp>>;
  _not?: InputMaybe<user_roles_bool_exp>;
  _or?: InputMaybe<Array<user_roles_bool_exp>>;
  account_users?: InputMaybe<account_users_bool_exp>;
  account_users_aggregate?: InputMaybe<account_users_aggregate_bool_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  description?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<Int_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
};

/** unique or primary key constraints on table "user_roles" */
export enum user_roles_constraint {
  /** unique or primary key constraint on columns "name" */
  user_roles_name_key = 'user_roles_name_key',
  /** unique or primary key constraint on columns "id" */
  user_roles_pkey = 'user_roles_pkey'
}

/** input type for incrementing numeric columns in table "user_roles" */
export type user_roles_inc_input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "user_roles" */
export type user_roles_insert_input = {
  account_users?: InputMaybe<account_users_arr_rel_insert_input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type user_roles_max_fields = {
  __typename?: 'user_roles_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type user_roles_min_fields = {
  __typename?: 'user_roles_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "user_roles" */
export type user_roles_mutation_response = {
  __typename?: 'user_roles_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<user_roles>;
};

/** input type for inserting object relation for remote table "user_roles" */
export type user_roles_obj_rel_insert_input = {
  data: user_roles_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<user_roles_on_conflict>;
};

/** on_conflict condition type for table "user_roles" */
export type user_roles_on_conflict = {
  constraint: user_roles_constraint;
  update_columns?: Array<user_roles_update_column>;
  where?: InputMaybe<user_roles_bool_exp>;
};

/** Ordering options when selecting data from "user_roles". */
export type user_roles_order_by = {
  account_users_aggregate?: InputMaybe<account_users_aggregate_order_by>;
  created_at?: InputMaybe<order_by>;
  description?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
};

/** primary key columns input for table: user_roles */
export type user_roles_pk_columns_input = {
  id: Scalars['Int'];
};

/** select columns of table "user_roles" */
export enum user_roles_select_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  description = 'description',
  /** column name */
  id = 'id',
  /** column name */
  name = 'name',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "user_roles" */
export type user_roles_set_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type user_roles_stddev_fields = {
  __typename?: 'user_roles_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type user_roles_stddev_pop_fields = {
  __typename?: 'user_roles_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type user_roles_stddev_samp_fields = {
  __typename?: 'user_roles_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "user_roles" */
export type user_roles_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: user_roles_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type user_roles_stream_cursor_value_input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type user_roles_sum_fields = {
  __typename?: 'user_roles_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "user_roles" */
export enum user_roles_update_column {
  /** column name */
  created_at = 'created_at',
  /** column name */
  description = 'description',
  /** column name */
  id = 'id',
  /** column name */
  name = 'name',
  /** column name */
  updated_at = 'updated_at'
}

export type user_roles_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<user_roles_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<user_roles_set_input>;
  /** filter the rows which have to be updated */
  where: user_roles_bool_exp;
};

/** aggregate var_pop on columns */
export type user_roles_var_pop_fields = {
  __typename?: 'user_roles_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type user_roles_var_samp_fields = {
  __typename?: 'user_roles_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type user_roles_variance_fields = {
  __typename?: 'user_roles_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "users" */
export type users = {
  __typename?: 'users';
  /** An array relationship */
  account_users: Array<account_users>;
  /** An aggregate relationship */
  account_users_aggregate: account_users_aggregate;
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: Maybe<Scalars['Int']>;
  confirmation_sent_at?: Maybe<Scalars['timestamptz']>;
  confirmation_token?: Maybe<Scalars['String']>;
  confirmed_at?: Maybe<Scalars['timestamptz']>;
  created_at: Scalars['timestamptz'];
  current_sign_in_at?: Maybe<Scalars['timestamp']>;
  current_sign_in_ip?: Maybe<Scalars['String']>;
  /** ❌ */
  custom_attributes?: Maybe<Scalars['jsonb']>;
  display_name?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['citext']>;
  encrypted_password: Scalars['String'];
  hr_id: Scalars['String'];
  id: Scalars['bigint'];
  /** An array relationship */
  invite_account_users: Array<account_users>;
  /** An aggregate relationship */
  invite_account_users_aggregate: account_users_aggregate;
  last_invited_at?: Maybe<Scalars['timestamptz']>;
  last_sign_in_at?: Maybe<Scalars['timestamp']>;
  last_sign_in_ip?: Maybe<Scalars['String']>;
  message_signature?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  phone_number?: Maybe<Scalars['String']>;
  provider: Scalars['String'];
  /** ❌ */
  pubsub_token?: Maybe<Scalars['String']>;
  /** ❌ */
  refresh_tokens: Scalars['jsonb'];
  remember_created_at?: Maybe<Scalars['timestamp']>;
  reset_password_sent_at?: Maybe<Scalars['timestamptz']>;
  reset_password_token?: Maybe<Scalars['String']>;
  sign_in_count: Scalars['Int'];
  /** A computed field, executes function "view_team_details" */
  team?: Maybe<Scalars['jsonb']>;
  /** An array relationship */
  team_members: Array<team_members>;
  /** An aggregate relationship */
  team_members_aggregate: team_members_aggregate;
  /** An array relationship */
  tickets: Array<ticket>;
  /** An aggregate relationship */
  tickets_aggregate: ticket_aggregate;
  tokens: Scalars['jsonb'];
  /** ❌ */
  type?: Maybe<Scalars['String']>;
  ui_settings?: Maybe<Scalars['jsonb']>;
  unconfirmed_email?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** A computed field, executes function "verification_status" */
  verified?: Maybe<Scalars['Boolean']>;
  ziwo_enabled: Scalars['Boolean'];
  ziwo_password?: Maybe<Scalars['String']>;
  ziwo_username?: Maybe<Scalars['String']>;
};


/** columns and relationships of "users" */
export type usersaccount_usersArgs = {
  distinct_on?: InputMaybe<Array<account_users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_users_order_by>>;
  where?: InputMaybe<account_users_bool_exp>;
};


/** columns and relationships of "users" */
export type usersaccount_users_aggregateArgs = {
  distinct_on?: InputMaybe<Array<account_users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_users_order_by>>;
  where?: InputMaybe<account_users_bool_exp>;
};


/** columns and relationships of "users" */
export type userscustom_attributesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "users" */
export type usersinvite_account_usersArgs = {
  distinct_on?: InputMaybe<Array<account_users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_users_order_by>>;
  where?: InputMaybe<account_users_bool_exp>;
};


/** columns and relationships of "users" */
export type usersinvite_account_users_aggregateArgs = {
  distinct_on?: InputMaybe<Array<account_users_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<account_users_order_by>>;
  where?: InputMaybe<account_users_bool_exp>;
};


/** columns and relationships of "users" */
export type usersrefresh_tokensArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "users" */
export type usersteamArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "users" */
export type usersteam_membersArgs = {
  distinct_on?: InputMaybe<Array<team_members_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_members_order_by>>;
  where?: InputMaybe<team_members_bool_exp>;
};


/** columns and relationships of "users" */
export type usersteam_members_aggregateArgs = {
  distinct_on?: InputMaybe<Array<team_members_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<team_members_order_by>>;
  where?: InputMaybe<team_members_bool_exp>;
};


/** columns and relationships of "users" */
export type usersticketsArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};


/** columns and relationships of "users" */
export type userstickets_aggregateArgs = {
  distinct_on?: InputMaybe<Array<ticket_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ticket_order_by>>;
  where?: InputMaybe<ticket_bool_exp>;
};


/** columns and relationships of "users" */
export type userstokensArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "users" */
export type usersui_settingsArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "users" */
export type users_aggregate = {
  __typename?: 'users_aggregate';
  aggregate?: Maybe<users_aggregate_fields>;
  nodes: Array<users>;
};

/** aggregate fields of "users" */
export type users_aggregate_fields = {
  __typename?: 'users_aggregate_fields';
  avg?: Maybe<users_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<users_max_fields>;
  min?: Maybe<users_min_fields>;
  stddev?: Maybe<users_stddev_fields>;
  stddev_pop?: Maybe<users_stddev_pop_fields>;
  stddev_samp?: Maybe<users_stddev_samp_fields>;
  sum?: Maybe<users_sum_fields>;
  var_pop?: Maybe<users_var_pop_fields>;
  var_samp?: Maybe<users_var_samp_fields>;
  variance?: Maybe<users_variance_fields>;
};


/** aggregate fields of "users" */
export type users_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<users_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type users_append_input = {
  /** ❌ */
  custom_attributes?: InputMaybe<Scalars['jsonb']>;
  /** ❌ */
  refresh_tokens?: InputMaybe<Scalars['jsonb']>;
  tokens?: InputMaybe<Scalars['jsonb']>;
  ui_settings?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type users_avg_fields = {
  __typename?: 'users_avg_fields';
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  sign_in_count?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'. */
export type users_bool_exp = {
  _and?: InputMaybe<Array<users_bool_exp>>;
  _not?: InputMaybe<users_bool_exp>;
  _or?: InputMaybe<Array<users_bool_exp>>;
  account_users?: InputMaybe<account_users_bool_exp>;
  account_users_aggregate?: InputMaybe<account_users_aggregate_bool_exp>;
  availability?: InputMaybe<Int_comparison_exp>;
  confirmation_sent_at?: InputMaybe<timestamptz_comparison_exp>;
  confirmation_token?: InputMaybe<String_comparison_exp>;
  confirmed_at?: InputMaybe<timestamptz_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  current_sign_in_at?: InputMaybe<timestamp_comparison_exp>;
  current_sign_in_ip?: InputMaybe<String_comparison_exp>;
  custom_attributes?: InputMaybe<jsonb_comparison_exp>;
  display_name?: InputMaybe<String_comparison_exp>;
  email?: InputMaybe<citext_comparison_exp>;
  encrypted_password?: InputMaybe<String_comparison_exp>;
  hr_id?: InputMaybe<String_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  invite_account_users?: InputMaybe<account_users_bool_exp>;
  invite_account_users_aggregate?: InputMaybe<account_users_aggregate_bool_exp>;
  last_invited_at?: InputMaybe<timestamptz_comparison_exp>;
  last_sign_in_at?: InputMaybe<timestamp_comparison_exp>;
  last_sign_in_ip?: InputMaybe<String_comparison_exp>;
  message_signature?: InputMaybe<String_comparison_exp>;
  name?: InputMaybe<String_comparison_exp>;
  phone_number?: InputMaybe<String_comparison_exp>;
  provider?: InputMaybe<String_comparison_exp>;
  pubsub_token?: InputMaybe<String_comparison_exp>;
  refresh_tokens?: InputMaybe<jsonb_comparison_exp>;
  remember_created_at?: InputMaybe<timestamp_comparison_exp>;
  reset_password_sent_at?: InputMaybe<timestamptz_comparison_exp>;
  reset_password_token?: InputMaybe<String_comparison_exp>;
  sign_in_count?: InputMaybe<Int_comparison_exp>;
  team?: InputMaybe<jsonb_comparison_exp>;
  team_members?: InputMaybe<team_members_bool_exp>;
  team_members_aggregate?: InputMaybe<team_members_aggregate_bool_exp>;
  tickets?: InputMaybe<ticket_bool_exp>;
  tickets_aggregate?: InputMaybe<ticket_aggregate_bool_exp>;
  tokens?: InputMaybe<jsonb_comparison_exp>;
  type?: InputMaybe<String_comparison_exp>;
  ui_settings?: InputMaybe<jsonb_comparison_exp>;
  unconfirmed_email?: InputMaybe<String_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  verified?: InputMaybe<Boolean_comparison_exp>;
  ziwo_enabled?: InputMaybe<Boolean_comparison_exp>;
  ziwo_password?: InputMaybe<String_comparison_exp>;
  ziwo_username?: InputMaybe<String_comparison_exp>;
};

/** unique or primary key constraints on table "users" */
export enum users_constraint {
  /** unique or primary key constraint on columns "email" */
  users_email_key = 'users_email_key',
  /** unique or primary key constraint on columns "id" */
  users_pkey = 'users_pkey',
  /** unique or primary key constraint on columns "pubsub_token" */
  users_pubsub_token_idx = 'users_pubsub_token_idx',
  /** unique or primary key constraint on columns "reset_password_token" */
  users_reset_password_token_idx = 'users_reset_password_token_idx'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type users_delete_at_path_input = {
  /** ❌ */
  custom_attributes?: InputMaybe<Array<Scalars['String']>>;
  /** ❌ */
  refresh_tokens?: InputMaybe<Array<Scalars['String']>>;
  tokens?: InputMaybe<Array<Scalars['String']>>;
  ui_settings?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type users_delete_elem_input = {
  /** ❌ */
  custom_attributes?: InputMaybe<Scalars['Int']>;
  /** ❌ */
  refresh_tokens?: InputMaybe<Scalars['Int']>;
  tokens?: InputMaybe<Scalars['Int']>;
  ui_settings?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type users_delete_key_input = {
  /** ❌ */
  custom_attributes?: InputMaybe<Scalars['String']>;
  /** ❌ */
  refresh_tokens?: InputMaybe<Scalars['String']>;
  tokens?: InputMaybe<Scalars['String']>;
  ui_settings?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "users" */
export type users_inc_input = {
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  sign_in_count?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "users" */
export type users_insert_input = {
  account_users?: InputMaybe<account_users_arr_rel_insert_input>;
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: InputMaybe<Scalars['Int']>;
  confirmation_sent_at?: InputMaybe<Scalars['timestamptz']>;
  confirmation_token?: InputMaybe<Scalars['String']>;
  confirmed_at?: InputMaybe<Scalars['timestamptz']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  current_sign_in_at?: InputMaybe<Scalars['timestamp']>;
  current_sign_in_ip?: InputMaybe<Scalars['String']>;
  /** ❌ */
  custom_attributes?: InputMaybe<Scalars['jsonb']>;
  display_name?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['citext']>;
  encrypted_password?: InputMaybe<Scalars['String']>;
  hr_id?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  invite_account_users?: InputMaybe<account_users_arr_rel_insert_input>;
  last_invited_at?: InputMaybe<Scalars['timestamptz']>;
  last_sign_in_at?: InputMaybe<Scalars['timestamp']>;
  last_sign_in_ip?: InputMaybe<Scalars['String']>;
  message_signature?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  phone_number?: InputMaybe<Scalars['String']>;
  provider?: InputMaybe<Scalars['String']>;
  /** ❌ */
  pubsub_token?: InputMaybe<Scalars['String']>;
  /** ❌ */
  refresh_tokens?: InputMaybe<Scalars['jsonb']>;
  remember_created_at?: InputMaybe<Scalars['timestamp']>;
  reset_password_sent_at?: InputMaybe<Scalars['timestamptz']>;
  reset_password_token?: InputMaybe<Scalars['String']>;
  sign_in_count?: InputMaybe<Scalars['Int']>;
  team_members?: InputMaybe<team_members_arr_rel_insert_input>;
  tickets?: InputMaybe<ticket_arr_rel_insert_input>;
  tokens?: InputMaybe<Scalars['jsonb']>;
  /** ❌ */
  type?: InputMaybe<Scalars['String']>;
  ui_settings?: InputMaybe<Scalars['jsonb']>;
  unconfirmed_email?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  ziwo_enabled?: InputMaybe<Scalars['Boolean']>;
  ziwo_password?: InputMaybe<Scalars['String']>;
  ziwo_username?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type users_max_fields = {
  __typename?: 'users_max_fields';
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: Maybe<Scalars['Int']>;
  confirmation_sent_at?: Maybe<Scalars['timestamptz']>;
  confirmation_token?: Maybe<Scalars['String']>;
  confirmed_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_sign_in_at?: Maybe<Scalars['timestamp']>;
  current_sign_in_ip?: Maybe<Scalars['String']>;
  display_name?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['citext']>;
  encrypted_password?: Maybe<Scalars['String']>;
  hr_id?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  last_invited_at?: Maybe<Scalars['timestamptz']>;
  last_sign_in_at?: Maybe<Scalars['timestamp']>;
  last_sign_in_ip?: Maybe<Scalars['String']>;
  message_signature?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  provider?: Maybe<Scalars['String']>;
  /** ❌ */
  pubsub_token?: Maybe<Scalars['String']>;
  remember_created_at?: Maybe<Scalars['timestamp']>;
  reset_password_sent_at?: Maybe<Scalars['timestamptz']>;
  reset_password_token?: Maybe<Scalars['String']>;
  sign_in_count?: Maybe<Scalars['Int']>;
  /** ❌ */
  type?: Maybe<Scalars['String']>;
  unconfirmed_email?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  ziwo_password?: Maybe<Scalars['String']>;
  ziwo_username?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type users_min_fields = {
  __typename?: 'users_min_fields';
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: Maybe<Scalars['Int']>;
  confirmation_sent_at?: Maybe<Scalars['timestamptz']>;
  confirmation_token?: Maybe<Scalars['String']>;
  confirmed_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_sign_in_at?: Maybe<Scalars['timestamp']>;
  current_sign_in_ip?: Maybe<Scalars['String']>;
  display_name?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['citext']>;
  encrypted_password?: Maybe<Scalars['String']>;
  hr_id?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  last_invited_at?: Maybe<Scalars['timestamptz']>;
  last_sign_in_at?: Maybe<Scalars['timestamp']>;
  last_sign_in_ip?: Maybe<Scalars['String']>;
  message_signature?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  provider?: Maybe<Scalars['String']>;
  /** ❌ */
  pubsub_token?: Maybe<Scalars['String']>;
  remember_created_at?: Maybe<Scalars['timestamp']>;
  reset_password_sent_at?: Maybe<Scalars['timestamptz']>;
  reset_password_token?: Maybe<Scalars['String']>;
  sign_in_count?: Maybe<Scalars['Int']>;
  /** ❌ */
  type?: Maybe<Scalars['String']>;
  unconfirmed_email?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  ziwo_password?: Maybe<Scalars['String']>;
  ziwo_username?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "users" */
export type users_mutation_response = {
  __typename?: 'users_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<users>;
};

/** input type for inserting object relation for remote table "users" */
export type users_obj_rel_insert_input = {
  data: users_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<users_on_conflict>;
};

/** on_conflict condition type for table "users" */
export type users_on_conflict = {
  constraint: users_constraint;
  update_columns?: Array<users_update_column>;
  where?: InputMaybe<users_bool_exp>;
};

/** Ordering options when selecting data from "users". */
export type users_order_by = {
  account_users_aggregate?: InputMaybe<account_users_aggregate_order_by>;
  availability?: InputMaybe<order_by>;
  confirmation_sent_at?: InputMaybe<order_by>;
  confirmation_token?: InputMaybe<order_by>;
  confirmed_at?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  current_sign_in_at?: InputMaybe<order_by>;
  current_sign_in_ip?: InputMaybe<order_by>;
  custom_attributes?: InputMaybe<order_by>;
  display_name?: InputMaybe<order_by>;
  email?: InputMaybe<order_by>;
  encrypted_password?: InputMaybe<order_by>;
  hr_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  invite_account_users_aggregate?: InputMaybe<account_users_aggregate_order_by>;
  last_invited_at?: InputMaybe<order_by>;
  last_sign_in_at?: InputMaybe<order_by>;
  last_sign_in_ip?: InputMaybe<order_by>;
  message_signature?: InputMaybe<order_by>;
  name?: InputMaybe<order_by>;
  phone_number?: InputMaybe<order_by>;
  provider?: InputMaybe<order_by>;
  pubsub_token?: InputMaybe<order_by>;
  refresh_tokens?: InputMaybe<order_by>;
  remember_created_at?: InputMaybe<order_by>;
  reset_password_sent_at?: InputMaybe<order_by>;
  reset_password_token?: InputMaybe<order_by>;
  sign_in_count?: InputMaybe<order_by>;
  team?: InputMaybe<order_by>;
  team_members_aggregate?: InputMaybe<team_members_aggregate_order_by>;
  tickets_aggregate?: InputMaybe<ticket_aggregate_order_by>;
  tokens?: InputMaybe<order_by>;
  type?: InputMaybe<order_by>;
  ui_settings?: InputMaybe<order_by>;
  unconfirmed_email?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  verified?: InputMaybe<order_by>;
  ziwo_enabled?: InputMaybe<order_by>;
  ziwo_password?: InputMaybe<order_by>;
  ziwo_username?: InputMaybe<order_by>;
};

/** primary key columns input for table: users */
export type users_pk_columns_input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type users_prepend_input = {
  /** ❌ */
  custom_attributes?: InputMaybe<Scalars['jsonb']>;
  /** ❌ */
  refresh_tokens?: InputMaybe<Scalars['jsonb']>;
  tokens?: InputMaybe<Scalars['jsonb']>;
  ui_settings?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "users" */
export enum users_select_column {
  /** column name */
  availability = 'availability',
  /** column name */
  confirmation_sent_at = 'confirmation_sent_at',
  /** column name */
  confirmation_token = 'confirmation_token',
  /** column name */
  confirmed_at = 'confirmed_at',
  /** column name */
  created_at = 'created_at',
  /** column name */
  current_sign_in_at = 'current_sign_in_at',
  /** column name */
  current_sign_in_ip = 'current_sign_in_ip',
  /** column name */
  custom_attributes = 'custom_attributes',
  /** column name */
  display_name = 'display_name',
  /** column name */
  email = 'email',
  /** column name */
  encrypted_password = 'encrypted_password',
  /** column name */
  hr_id = 'hr_id',
  /** column name */
  id = 'id',
  /** column name */
  last_invited_at = 'last_invited_at',
  /** column name */
  last_sign_in_at = 'last_sign_in_at',
  /** column name */
  last_sign_in_ip = 'last_sign_in_ip',
  /** column name */
  message_signature = 'message_signature',
  /** column name */
  name = 'name',
  /** column name */
  phone_number = 'phone_number',
  /** column name */
  provider = 'provider',
  /** column name */
  pubsub_token = 'pubsub_token',
  /** column name */
  refresh_tokens = 'refresh_tokens',
  /** column name */
  remember_created_at = 'remember_created_at',
  /** column name */
  reset_password_sent_at = 'reset_password_sent_at',
  /** column name */
  reset_password_token = 'reset_password_token',
  /** column name */
  sign_in_count = 'sign_in_count',
  /** column name */
  tokens = 'tokens',
  /** column name */
  type = 'type',
  /** column name */
  ui_settings = 'ui_settings',
  /** column name */
  unconfirmed_email = 'unconfirmed_email',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  ziwo_enabled = 'ziwo_enabled',
  /** column name */
  ziwo_password = 'ziwo_password',
  /** column name */
  ziwo_username = 'ziwo_username'
}

/** input type for updating data in table "users" */
export type users_set_input = {
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: InputMaybe<Scalars['Int']>;
  confirmation_sent_at?: InputMaybe<Scalars['timestamptz']>;
  confirmation_token?: InputMaybe<Scalars['String']>;
  confirmed_at?: InputMaybe<Scalars['timestamptz']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  current_sign_in_at?: InputMaybe<Scalars['timestamp']>;
  current_sign_in_ip?: InputMaybe<Scalars['String']>;
  /** ❌ */
  custom_attributes?: InputMaybe<Scalars['jsonb']>;
  display_name?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['citext']>;
  encrypted_password?: InputMaybe<Scalars['String']>;
  hr_id?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  last_invited_at?: InputMaybe<Scalars['timestamptz']>;
  last_sign_in_at?: InputMaybe<Scalars['timestamp']>;
  last_sign_in_ip?: InputMaybe<Scalars['String']>;
  message_signature?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  phone_number?: InputMaybe<Scalars['String']>;
  provider?: InputMaybe<Scalars['String']>;
  /** ❌ */
  pubsub_token?: InputMaybe<Scalars['String']>;
  /** ❌ */
  refresh_tokens?: InputMaybe<Scalars['jsonb']>;
  remember_created_at?: InputMaybe<Scalars['timestamp']>;
  reset_password_sent_at?: InputMaybe<Scalars['timestamptz']>;
  reset_password_token?: InputMaybe<Scalars['String']>;
  sign_in_count?: InputMaybe<Scalars['Int']>;
  tokens?: InputMaybe<Scalars['jsonb']>;
  /** ❌ */
  type?: InputMaybe<Scalars['String']>;
  ui_settings?: InputMaybe<Scalars['jsonb']>;
  unconfirmed_email?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  ziwo_enabled?: InputMaybe<Scalars['Boolean']>;
  ziwo_password?: InputMaybe<Scalars['String']>;
  ziwo_username?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type users_stddev_fields = {
  __typename?: 'users_stddev_fields';
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  sign_in_count?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type users_stddev_pop_fields = {
  __typename?: 'users_stddev_pop_fields';
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  sign_in_count?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type users_stddev_samp_fields = {
  __typename?: 'users_stddev_samp_fields';
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  sign_in_count?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "users" */
export type users_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: users_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type users_stream_cursor_value_input = {
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: InputMaybe<Scalars['Int']>;
  confirmation_sent_at?: InputMaybe<Scalars['timestamptz']>;
  confirmation_token?: InputMaybe<Scalars['String']>;
  confirmed_at?: InputMaybe<Scalars['timestamptz']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  current_sign_in_at?: InputMaybe<Scalars['timestamp']>;
  current_sign_in_ip?: InputMaybe<Scalars['String']>;
  /** ❌ */
  custom_attributes?: InputMaybe<Scalars['jsonb']>;
  display_name?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['citext']>;
  encrypted_password?: InputMaybe<Scalars['String']>;
  hr_id?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  last_invited_at?: InputMaybe<Scalars['timestamptz']>;
  last_sign_in_at?: InputMaybe<Scalars['timestamp']>;
  last_sign_in_ip?: InputMaybe<Scalars['String']>;
  message_signature?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  phone_number?: InputMaybe<Scalars['String']>;
  provider?: InputMaybe<Scalars['String']>;
  /** ❌ */
  pubsub_token?: InputMaybe<Scalars['String']>;
  /** ❌ */
  refresh_tokens?: InputMaybe<Scalars['jsonb']>;
  remember_created_at?: InputMaybe<Scalars['timestamp']>;
  reset_password_sent_at?: InputMaybe<Scalars['timestamptz']>;
  reset_password_token?: InputMaybe<Scalars['String']>;
  sign_in_count?: InputMaybe<Scalars['Int']>;
  tokens?: InputMaybe<Scalars['jsonb']>;
  /** ❌ */
  type?: InputMaybe<Scalars['String']>;
  ui_settings?: InputMaybe<Scalars['jsonb']>;
  unconfirmed_email?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  ziwo_enabled?: InputMaybe<Scalars['Boolean']>;
  ziwo_password?: InputMaybe<Scalars['String']>;
  ziwo_username?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type users_sum_fields = {
  __typename?: 'users_sum_fields';
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  sign_in_count?: Maybe<Scalars['Int']>;
};

/** update columns of table "users" */
export enum users_update_column {
  /** column name */
  availability = 'availability',
  /** column name */
  confirmation_sent_at = 'confirmation_sent_at',
  /** column name */
  confirmation_token = 'confirmation_token',
  /** column name */
  confirmed_at = 'confirmed_at',
  /** column name */
  created_at = 'created_at',
  /** column name */
  current_sign_in_at = 'current_sign_in_at',
  /** column name */
  current_sign_in_ip = 'current_sign_in_ip',
  /** column name */
  custom_attributes = 'custom_attributes',
  /** column name */
  display_name = 'display_name',
  /** column name */
  email = 'email',
  /** column name */
  encrypted_password = 'encrypted_password',
  /** column name */
  hr_id = 'hr_id',
  /** column name */
  id = 'id',
  /** column name */
  last_invited_at = 'last_invited_at',
  /** column name */
  last_sign_in_at = 'last_sign_in_at',
  /** column name */
  last_sign_in_ip = 'last_sign_in_ip',
  /** column name */
  message_signature = 'message_signature',
  /** column name */
  name = 'name',
  /** column name */
  phone_number = 'phone_number',
  /** column name */
  provider = 'provider',
  /** column name */
  pubsub_token = 'pubsub_token',
  /** column name */
  refresh_tokens = 'refresh_tokens',
  /** column name */
  remember_created_at = 'remember_created_at',
  /** column name */
  reset_password_sent_at = 'reset_password_sent_at',
  /** column name */
  reset_password_token = 'reset_password_token',
  /** column name */
  sign_in_count = 'sign_in_count',
  /** column name */
  tokens = 'tokens',
  /** column name */
  type = 'type',
  /** column name */
  ui_settings = 'ui_settings',
  /** column name */
  unconfirmed_email = 'unconfirmed_email',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  ziwo_enabled = 'ziwo_enabled',
  /** column name */
  ziwo_password = 'ziwo_password',
  /** column name */
  ziwo_username = 'ziwo_username'
}

export type users_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<users_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<users_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<users_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<users_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<users_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<users_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<users_set_input>;
  /** filter the rows which have to be updated */
  where: users_bool_exp;
};

/** aggregate var_pop on columns */
export type users_var_pop_fields = {
  __typename?: 'users_var_pop_fields';
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  sign_in_count?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type users_var_samp_fields = {
  __typename?: 'users_var_samp_fields';
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  sign_in_count?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type users_variance_fields = {
  __typename?: 'users_variance_fields';
  /** ❌ User status: 0 - offline, 1 - online, 2 - busy */
  availability?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  sign_in_count?: Maybe<Scalars['Float']>;
};

/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
export type uuid_comparison_exp = {
  _eq?: InputMaybe<Scalars['uuid']>;
  _gt?: InputMaybe<Scalars['uuid']>;
  _gte?: InputMaybe<Scalars['uuid']>;
  _in?: InputMaybe<Array<Scalars['uuid']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['uuid']>;
  _lte?: InputMaybe<Scalars['uuid']>;
  _neq?: InputMaybe<Scalars['uuid']>;
  _nin?: InputMaybe<Array<Scalars['uuid']>>;
};

/** columns and relationships of "workflows_contact_reason" */
export type workflows_contact_reason = {
  __typename?: 'workflows_contact_reason';
  /** An object relationship */
  account?: Maybe<accounts>;
  account_id?: Maybe<Scalars['Int']>;
  categories: Scalars['jsonb'];
  contact_reason: Scalars['String'];
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  created_by?: Maybe<account_agents>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  id: Scalars['bigint'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  updated_by?: Maybe<account_agents>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "workflows_contact_reason" */
export type workflows_contact_reasoncategoriesArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "workflows_contact_reason" */
export type workflows_contact_reason_aggregate = {
  __typename?: 'workflows_contact_reason_aggregate';
  aggregate?: Maybe<workflows_contact_reason_aggregate_fields>;
  nodes: Array<workflows_contact_reason>;
};

/** aggregate fields of "workflows_contact_reason" */
export type workflows_contact_reason_aggregate_fields = {
  __typename?: 'workflows_contact_reason_aggregate_fields';
  avg?: Maybe<workflows_contact_reason_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<workflows_contact_reason_max_fields>;
  min?: Maybe<workflows_contact_reason_min_fields>;
  stddev?: Maybe<workflows_contact_reason_stddev_fields>;
  stddev_pop?: Maybe<workflows_contact_reason_stddev_pop_fields>;
  stddev_samp?: Maybe<workflows_contact_reason_stddev_samp_fields>;
  sum?: Maybe<workflows_contact_reason_sum_fields>;
  var_pop?: Maybe<workflows_contact_reason_var_pop_fields>;
  var_samp?: Maybe<workflows_contact_reason_var_samp_fields>;
  variance?: Maybe<workflows_contact_reason_variance_fields>;
};


/** aggregate fields of "workflows_contact_reason" */
export type workflows_contact_reason_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<workflows_contact_reason_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type workflows_contact_reason_append_input = {
  categories?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type workflows_contact_reason_avg_fields = {
  __typename?: 'workflows_contact_reason_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "workflows_contact_reason". All fields are combined with a logical 'AND'. */
export type workflows_contact_reason_bool_exp = {
  _and?: InputMaybe<Array<workflows_contact_reason_bool_exp>>;
  _not?: InputMaybe<workflows_contact_reason_bool_exp>;
  _or?: InputMaybe<Array<workflows_contact_reason_bool_exp>>;
  account?: InputMaybe<accounts_bool_exp>;
  account_id?: InputMaybe<Int_comparison_exp>;
  categories?: InputMaybe<jsonb_comparison_exp>;
  contact_reason?: InputMaybe<String_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  created_by?: InputMaybe<account_agents_bool_exp>;
  created_by_user_id?: InputMaybe<bigint_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  updated_by?: InputMaybe<account_agents_bool_exp>;
  updated_by_user_id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "workflows_contact_reason" */
export enum workflows_contact_reason_constraint {
  /** unique or primary key constraint on columns "id" */
  workflows_contact_reason_pkey = 'workflows_contact_reason_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type workflows_contact_reason_delete_at_path_input = {
  categories?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type workflows_contact_reason_delete_elem_input = {
  categories?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type workflows_contact_reason_delete_key_input = {
  categories?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "workflows_contact_reason" */
export type workflows_contact_reason_inc_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "workflows_contact_reason" */
export type workflows_contact_reason_insert_input = {
  account?: InputMaybe<accounts_obj_rel_insert_input>;
  account_id?: InputMaybe<Scalars['Int']>;
  categories?: InputMaybe<Scalars['jsonb']>;
  contact_reason?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<account_agents_obj_rel_insert_input>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  updated_by?: InputMaybe<account_agents_obj_rel_insert_input>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type workflows_contact_reason_max_fields = {
  __typename?: 'workflows_contact_reason_max_fields';
  account_id?: Maybe<Scalars['Int']>;
  contact_reason?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type workflows_contact_reason_min_fields = {
  __typename?: 'workflows_contact_reason_min_fields';
  account_id?: Maybe<Scalars['Int']>;
  contact_reason?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "workflows_contact_reason" */
export type workflows_contact_reason_mutation_response = {
  __typename?: 'workflows_contact_reason_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<workflows_contact_reason>;
};

/** on_conflict condition type for table "workflows_contact_reason" */
export type workflows_contact_reason_on_conflict = {
  constraint: workflows_contact_reason_constraint;
  update_columns?: Array<workflows_contact_reason_update_column>;
  where?: InputMaybe<workflows_contact_reason_bool_exp>;
};

/** Ordering options when selecting data from "workflows_contact_reason". */
export type workflows_contact_reason_order_by = {
  account?: InputMaybe<accounts_order_by>;
  account_id?: InputMaybe<order_by>;
  categories?: InputMaybe<order_by>;
  contact_reason?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  created_by?: InputMaybe<account_agents_order_by>;
  created_by_user_id?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  updated_by?: InputMaybe<account_agents_order_by>;
  updated_by_user_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: workflows_contact_reason */
export type workflows_contact_reason_pk_columns_input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type workflows_contact_reason_prepend_input = {
  categories?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "workflows_contact_reason" */
export enum workflows_contact_reason_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  categories = 'categories',
  /** column name */
  contact_reason = 'contact_reason',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  id = 'id',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  updated_by_user_id = 'updated_by_user_id'
}

/** input type for updating data in table "workflows_contact_reason" */
export type workflows_contact_reason_set_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  categories?: InputMaybe<Scalars['jsonb']>;
  contact_reason?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type workflows_contact_reason_stddev_fields = {
  __typename?: 'workflows_contact_reason_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type workflows_contact_reason_stddev_pop_fields = {
  __typename?: 'workflows_contact_reason_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type workflows_contact_reason_stddev_samp_fields = {
  __typename?: 'workflows_contact_reason_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "workflows_contact_reason" */
export type workflows_contact_reason_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: workflows_contact_reason_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type workflows_contact_reason_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['Int']>;
  categories?: InputMaybe<Scalars['jsonb']>;
  contact_reason?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by_user_id?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  updated_by_user_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type workflows_contact_reason_sum_fields = {
  __typename?: 'workflows_contact_reason_sum_fields';
  account_id?: Maybe<Scalars['Int']>;
  created_by_user_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  updated_by_user_id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "workflows_contact_reason" */
export enum workflows_contact_reason_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  categories = 'categories',
  /** column name */
  contact_reason = 'contact_reason',
  /** column name */
  created_at = 'created_at',
  /** column name */
  created_by_user_id = 'created_by_user_id',
  /** column name */
  id = 'id',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  updated_by_user_id = 'updated_by_user_id'
}

export type workflows_contact_reason_updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<workflows_contact_reason_append_input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<workflows_contact_reason_delete_at_path_input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<workflows_contact_reason_delete_elem_input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<workflows_contact_reason_delete_key_input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<workflows_contact_reason_inc_input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<workflows_contact_reason_prepend_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<workflows_contact_reason_set_input>;
  /** filter the rows which have to be updated */
  where: workflows_contact_reason_bool_exp;
};

/** aggregate var_pop on columns */
export type workflows_contact_reason_var_pop_fields = {
  __typename?: 'workflows_contact_reason_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type workflows_contact_reason_var_samp_fields = {
  __typename?: 'workflows_contact_reason_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type workflows_contact_reason_variance_fields = {
  __typename?: 'workflows_contact_reason_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  created_by_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  updated_by_user_id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "working_hours" */
export type working_hours = {
  __typename?: 'working_hours';
  account_id?: Maybe<Scalars['bigint']>;
  closed_all_day: Scalars['Boolean'];
  created_at: Scalars['timestamptz'];
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week: Scalars['Int'];
  id: Scalars['bigint'];
  inbox_id?: Maybe<Scalars['bigint']>;
  open_all_day: Scalars['Boolean'];
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  working_hours_shifts: Array<working_hours_shift>;
  /** An aggregate relationship */
  working_hours_shifts_aggregate: working_hours_shift_aggregate;
};


/** columns and relationships of "working_hours" */
export type working_hoursworking_hours_shiftsArgs = {
  distinct_on?: InputMaybe<Array<working_hours_shift_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<working_hours_shift_order_by>>;
  where?: InputMaybe<working_hours_shift_bool_exp>;
};


/** columns and relationships of "working_hours" */
export type working_hoursworking_hours_shifts_aggregateArgs = {
  distinct_on?: InputMaybe<Array<working_hours_shift_select_column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<working_hours_shift_order_by>>;
  where?: InputMaybe<working_hours_shift_bool_exp>;
};

/** aggregated selection of "working_hours" */
export type working_hours_aggregate = {
  __typename?: 'working_hours_aggregate';
  aggregate?: Maybe<working_hours_aggregate_fields>;
  nodes: Array<working_hours>;
};

/** aggregate fields of "working_hours" */
export type working_hours_aggregate_fields = {
  __typename?: 'working_hours_aggregate_fields';
  avg?: Maybe<working_hours_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<working_hours_max_fields>;
  min?: Maybe<working_hours_min_fields>;
  stddev?: Maybe<working_hours_stddev_fields>;
  stddev_pop?: Maybe<working_hours_stddev_pop_fields>;
  stddev_samp?: Maybe<working_hours_stddev_samp_fields>;
  sum?: Maybe<working_hours_sum_fields>;
  var_pop?: Maybe<working_hours_var_pop_fields>;
  var_samp?: Maybe<working_hours_var_samp_fields>;
  variance?: Maybe<working_hours_variance_fields>;
};


/** aggregate fields of "working_hours" */
export type working_hours_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<working_hours_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type working_hours_avg_fields = {
  __typename?: 'working_hours_avg_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "working_hours". All fields are combined with a logical 'AND'. */
export type working_hours_bool_exp = {
  _and?: InputMaybe<Array<working_hours_bool_exp>>;
  _not?: InputMaybe<working_hours_bool_exp>;
  _or?: InputMaybe<Array<working_hours_bool_exp>>;
  account_id?: InputMaybe<bigint_comparison_exp>;
  closed_all_day?: InputMaybe<Boolean_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  day_of_week?: InputMaybe<Int_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  inbox_id?: InputMaybe<bigint_comparison_exp>;
  open_all_day?: InputMaybe<Boolean_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  working_hours_shifts?: InputMaybe<working_hours_shift_bool_exp>;
  working_hours_shifts_aggregate?: InputMaybe<working_hours_shift_aggregate_bool_exp>;
};

/** unique or primary key constraints on table "working_hours" */
export enum working_hours_constraint {
  /** unique or primary key constraint on columns "id" */
  working_hours_pkey = 'working_hours_pkey'
}

/** input type for incrementing numeric columns in table "working_hours" */
export type working_hours_inc_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "working_hours" */
export type working_hours_insert_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  closed_all_day?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox_id?: InputMaybe<Scalars['bigint']>;
  open_all_day?: InputMaybe<Scalars['Boolean']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  working_hours_shifts?: InputMaybe<working_hours_shift_arr_rel_insert_input>;
};

/** aggregate max on columns */
export type working_hours_max_fields = {
  __typename?: 'working_hours_max_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  inbox_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type working_hours_min_fields = {
  __typename?: 'working_hours_min_fields';
  account_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  inbox_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "working_hours" */
export type working_hours_mutation_response = {
  __typename?: 'working_hours_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<working_hours>;
};

/** input type for inserting object relation for remote table "working_hours" */
export type working_hours_obj_rel_insert_input = {
  data: working_hours_insert_input;
  /** upsert condition */
  on_conflict?: InputMaybe<working_hours_on_conflict>;
};

/** on_conflict condition type for table "working_hours" */
export type working_hours_on_conflict = {
  constraint: working_hours_constraint;
  update_columns?: Array<working_hours_update_column>;
  where?: InputMaybe<working_hours_bool_exp>;
};

/** Ordering options when selecting data from "working_hours". */
export type working_hours_order_by = {
  account_id?: InputMaybe<order_by>;
  closed_all_day?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  day_of_week?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  inbox_id?: InputMaybe<order_by>;
  open_all_day?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  working_hours_shifts_aggregate?: InputMaybe<working_hours_shift_aggregate_order_by>;
};

/** primary key columns input for table: working_hours */
export type working_hours_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "working_hours" */
export enum working_hours_select_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  closed_all_day = 'closed_all_day',
  /** column name */
  created_at = 'created_at',
  /** column name */
  day_of_week = 'day_of_week',
  /** column name */
  id = 'id',
  /** column name */
  inbox_id = 'inbox_id',
  /** column name */
  open_all_day = 'open_all_day',
  /** column name */
  updated_at = 'updated_at'
}

/** input type for updating data in table "working_hours" */
export type working_hours_set_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  closed_all_day?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox_id?: InputMaybe<Scalars['bigint']>;
  open_all_day?: InputMaybe<Scalars['Boolean']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** columns and relationships of "working_hours_shift" */
export type working_hours_shift = {
  __typename?: 'working_hours_shift';
  buffer: Scalars['Boolean'];
  closing_hours: Scalars['time'];
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  open_hour: Scalars['time'];
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  working_hour: working_hours;
  working_hours_id: Scalars['bigint'];
};

/** aggregated selection of "working_hours_shift" */
export type working_hours_shift_aggregate = {
  __typename?: 'working_hours_shift_aggregate';
  aggregate?: Maybe<working_hours_shift_aggregate_fields>;
  nodes: Array<working_hours_shift>;
};

export type working_hours_shift_aggregate_bool_exp = {
  bool_and?: InputMaybe<working_hours_shift_aggregate_bool_exp_bool_and>;
  bool_or?: InputMaybe<working_hours_shift_aggregate_bool_exp_bool_or>;
  count?: InputMaybe<working_hours_shift_aggregate_bool_exp_count>;
};

export type working_hours_shift_aggregate_bool_exp_bool_and = {
  arguments: working_hours_shift_select_column_working_hours_shift_aggregate_bool_exp_bool_and_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<working_hours_shift_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type working_hours_shift_aggregate_bool_exp_bool_or = {
  arguments: working_hours_shift_select_column_working_hours_shift_aggregate_bool_exp_bool_or_arguments_columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<working_hours_shift_bool_exp>;
  predicate: Boolean_comparison_exp;
};

export type working_hours_shift_aggregate_bool_exp_count = {
  arguments?: InputMaybe<Array<working_hours_shift_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<working_hours_shift_bool_exp>;
  predicate: Int_comparison_exp;
};

/** aggregate fields of "working_hours_shift" */
export type working_hours_shift_aggregate_fields = {
  __typename?: 'working_hours_shift_aggregate_fields';
  avg?: Maybe<working_hours_shift_avg_fields>;
  count: Scalars['Int'];
  max?: Maybe<working_hours_shift_max_fields>;
  min?: Maybe<working_hours_shift_min_fields>;
  stddev?: Maybe<working_hours_shift_stddev_fields>;
  stddev_pop?: Maybe<working_hours_shift_stddev_pop_fields>;
  stddev_samp?: Maybe<working_hours_shift_stddev_samp_fields>;
  sum?: Maybe<working_hours_shift_sum_fields>;
  var_pop?: Maybe<working_hours_shift_var_pop_fields>;
  var_samp?: Maybe<working_hours_shift_var_samp_fields>;
  variance?: Maybe<working_hours_shift_variance_fields>;
};


/** aggregate fields of "working_hours_shift" */
export type working_hours_shift_aggregate_fieldscountArgs = {
  columns?: InputMaybe<Array<working_hours_shift_select_column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "working_hours_shift" */
export type working_hours_shift_aggregate_order_by = {
  avg?: InputMaybe<working_hours_shift_avg_order_by>;
  count?: InputMaybe<order_by>;
  max?: InputMaybe<working_hours_shift_max_order_by>;
  min?: InputMaybe<working_hours_shift_min_order_by>;
  stddev?: InputMaybe<working_hours_shift_stddev_order_by>;
  stddev_pop?: InputMaybe<working_hours_shift_stddev_pop_order_by>;
  stddev_samp?: InputMaybe<working_hours_shift_stddev_samp_order_by>;
  sum?: InputMaybe<working_hours_shift_sum_order_by>;
  var_pop?: InputMaybe<working_hours_shift_var_pop_order_by>;
  var_samp?: InputMaybe<working_hours_shift_var_samp_order_by>;
  variance?: InputMaybe<working_hours_shift_variance_order_by>;
};

/** input type for inserting array relation for remote table "working_hours_shift" */
export type working_hours_shift_arr_rel_insert_input = {
  data: Array<working_hours_shift_insert_input>;
  /** upsert condition */
  on_conflict?: InputMaybe<working_hours_shift_on_conflict>;
};

/** aggregate avg on columns */
export type working_hours_shift_avg_fields = {
  __typename?: 'working_hours_shift_avg_fields';
  id?: Maybe<Scalars['Float']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: Maybe<Scalars['Float']>;
  working_hours_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "working_hours_shift" */
export type working_hours_shift_avg_order_by = {
  id?: InputMaybe<order_by>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<order_by>;
  working_hours_id?: InputMaybe<order_by>;
};

/** Boolean expression to filter rows from the table "working_hours_shift". All fields are combined with a logical 'AND'. */
export type working_hours_shift_bool_exp = {
  _and?: InputMaybe<Array<working_hours_shift_bool_exp>>;
  _not?: InputMaybe<working_hours_shift_bool_exp>;
  _or?: InputMaybe<Array<working_hours_shift_bool_exp>>;
  buffer?: InputMaybe<Boolean_comparison_exp>;
  closing_hours?: InputMaybe<time_comparison_exp>;
  created_at?: InputMaybe<timestamptz_comparison_exp>;
  id?: InputMaybe<bigint_comparison_exp>;
  open_hour?: InputMaybe<time_comparison_exp>;
  shift_number?: InputMaybe<Int_comparison_exp>;
  updated_at?: InputMaybe<timestamptz_comparison_exp>;
  working_hour?: InputMaybe<working_hours_bool_exp>;
  working_hours_id?: InputMaybe<bigint_comparison_exp>;
};

/** unique or primary key constraints on table "working_hours_shift" */
export enum working_hours_shift_constraint {
  /** unique or primary key constraint on columns "id" */
  working_hours_shift_pkey = 'working_hours_shift_pkey'
}

/** input type for incrementing numeric columns in table "working_hours_shift" */
export type working_hours_shift_inc_input = {
  id?: InputMaybe<Scalars['bigint']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<Scalars['Int']>;
  working_hours_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "working_hours_shift" */
export type working_hours_shift_insert_input = {
  buffer?: InputMaybe<Scalars['Boolean']>;
  closing_hours?: InputMaybe<Scalars['time']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  open_hour?: InputMaybe<Scalars['time']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  working_hour?: InputMaybe<working_hours_obj_rel_insert_input>;
  working_hours_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type working_hours_shift_max_fields = {
  __typename?: 'working_hours_shift_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  working_hours_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "working_hours_shift" */
export type working_hours_shift_max_order_by = {
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  working_hours_id?: InputMaybe<order_by>;
};

/** aggregate min on columns */
export type working_hours_shift_min_fields = {
  __typename?: 'working_hours_shift_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  working_hours_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "working_hours_shift" */
export type working_hours_shift_min_order_by = {
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  working_hours_id?: InputMaybe<order_by>;
};

/** response of any mutation on the table "working_hours_shift" */
export type working_hours_shift_mutation_response = {
  __typename?: 'working_hours_shift_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<working_hours_shift>;
};

/** on_conflict condition type for table "working_hours_shift" */
export type working_hours_shift_on_conflict = {
  constraint: working_hours_shift_constraint;
  update_columns?: Array<working_hours_shift_update_column>;
  where?: InputMaybe<working_hours_shift_bool_exp>;
};

/** Ordering options when selecting data from "working_hours_shift". */
export type working_hours_shift_order_by = {
  buffer?: InputMaybe<order_by>;
  closing_hours?: InputMaybe<order_by>;
  created_at?: InputMaybe<order_by>;
  id?: InputMaybe<order_by>;
  open_hour?: InputMaybe<order_by>;
  shift_number?: InputMaybe<order_by>;
  updated_at?: InputMaybe<order_by>;
  working_hour?: InputMaybe<working_hours_order_by>;
  working_hours_id?: InputMaybe<order_by>;
};

/** primary key columns input for table: working_hours_shift */
export type working_hours_shift_pk_columns_input = {
  id: Scalars['bigint'];
};

/** select columns of table "working_hours_shift" */
export enum working_hours_shift_select_column {
  /** column name */
  buffer = 'buffer',
  /** column name */
  closing_hours = 'closing_hours',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  open_hour = 'open_hour',
  /** column name */
  shift_number = 'shift_number',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  working_hours_id = 'working_hours_id'
}

/** select "working_hours_shift_aggregate_bool_exp_bool_and_arguments_columns" columns of table "working_hours_shift" */
export enum working_hours_shift_select_column_working_hours_shift_aggregate_bool_exp_bool_and_arguments_columns {
  /** column name */
  buffer = 'buffer'
}

/** select "working_hours_shift_aggregate_bool_exp_bool_or_arguments_columns" columns of table "working_hours_shift" */
export enum working_hours_shift_select_column_working_hours_shift_aggregate_bool_exp_bool_or_arguments_columns {
  /** column name */
  buffer = 'buffer'
}

/** input type for updating data in table "working_hours_shift" */
export type working_hours_shift_set_input = {
  buffer?: InputMaybe<Scalars['Boolean']>;
  closing_hours?: InputMaybe<Scalars['time']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  open_hour?: InputMaybe<Scalars['time']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  working_hours_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type working_hours_shift_stddev_fields = {
  __typename?: 'working_hours_shift_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: Maybe<Scalars['Float']>;
  working_hours_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "working_hours_shift" */
export type working_hours_shift_stddev_order_by = {
  id?: InputMaybe<order_by>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<order_by>;
  working_hours_id?: InputMaybe<order_by>;
};

/** aggregate stddev_pop on columns */
export type working_hours_shift_stddev_pop_fields = {
  __typename?: 'working_hours_shift_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: Maybe<Scalars['Float']>;
  working_hours_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "working_hours_shift" */
export type working_hours_shift_stddev_pop_order_by = {
  id?: InputMaybe<order_by>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<order_by>;
  working_hours_id?: InputMaybe<order_by>;
};

/** aggregate stddev_samp on columns */
export type working_hours_shift_stddev_samp_fields = {
  __typename?: 'working_hours_shift_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: Maybe<Scalars['Float']>;
  working_hours_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "working_hours_shift" */
export type working_hours_shift_stddev_samp_order_by = {
  id?: InputMaybe<order_by>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<order_by>;
  working_hours_id?: InputMaybe<order_by>;
};

/** Streaming cursor of the table "working_hours_shift" */
export type working_hours_shift_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: working_hours_shift_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type working_hours_shift_stream_cursor_value_input = {
  buffer?: InputMaybe<Scalars['Boolean']>;
  closing_hours?: InputMaybe<Scalars['time']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  open_hour?: InputMaybe<Scalars['time']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  working_hours_id?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type working_hours_shift_sum_fields = {
  __typename?: 'working_hours_shift_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: Maybe<Scalars['Int']>;
  working_hours_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "working_hours_shift" */
export type working_hours_shift_sum_order_by = {
  id?: InputMaybe<order_by>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<order_by>;
  working_hours_id?: InputMaybe<order_by>;
};

/** update columns of table "working_hours_shift" */
export enum working_hours_shift_update_column {
  /** column name */
  buffer = 'buffer',
  /** column name */
  closing_hours = 'closing_hours',
  /** column name */
  created_at = 'created_at',
  /** column name */
  id = 'id',
  /** column name */
  open_hour = 'open_hour',
  /** column name */
  shift_number = 'shift_number',
  /** column name */
  updated_at = 'updated_at',
  /** column name */
  working_hours_id = 'working_hours_id'
}

export type working_hours_shift_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<working_hours_shift_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<working_hours_shift_set_input>;
  /** filter the rows which have to be updated */
  where: working_hours_shift_bool_exp;
};

/** aggregate var_pop on columns */
export type working_hours_shift_var_pop_fields = {
  __typename?: 'working_hours_shift_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: Maybe<Scalars['Float']>;
  working_hours_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "working_hours_shift" */
export type working_hours_shift_var_pop_order_by = {
  id?: InputMaybe<order_by>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<order_by>;
  working_hours_id?: InputMaybe<order_by>;
};

/** aggregate var_samp on columns */
export type working_hours_shift_var_samp_fields = {
  __typename?: 'working_hours_shift_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: Maybe<Scalars['Float']>;
  working_hours_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "working_hours_shift" */
export type working_hours_shift_var_samp_order_by = {
  id?: InputMaybe<order_by>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<order_by>;
  working_hours_id?: InputMaybe<order_by>;
};

/** aggregate variance on columns */
export type working_hours_shift_variance_fields = {
  __typename?: 'working_hours_shift_variance_fields';
  id?: Maybe<Scalars['Float']>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: Maybe<Scalars['Float']>;
  working_hours_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "working_hours_shift" */
export type working_hours_shift_variance_order_by = {
  id?: InputMaybe<order_by>;
  /** 1 = First shift, 2 = Second shift, 3 = Third shift */
  shift_number?: InputMaybe<order_by>;
  working_hours_id?: InputMaybe<order_by>;
};

/** aggregate stddev on columns */
export type working_hours_stddev_fields = {
  __typename?: 'working_hours_stddev_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type working_hours_stddev_pop_fields = {
  __typename?: 'working_hours_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type working_hours_stddev_samp_fields = {
  __typename?: 'working_hours_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "working_hours" */
export type working_hours_stream_cursor_input = {
  /** Stream column input with initial value */
  initial_value: working_hours_stream_cursor_value_input;
  /** cursor ordering */
  ordering?: InputMaybe<cursor_ordering>;
};

/** Initial value of the column from where the streaming should start */
export type working_hours_stream_cursor_value_input = {
  account_id?: InputMaybe<Scalars['bigint']>;
  closed_all_day?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  inbox_id?: InputMaybe<Scalars['bigint']>;
  open_all_day?: InputMaybe<Scalars['Boolean']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type working_hours_sum_fields = {
  __typename?: 'working_hours_sum_fields';
  account_id?: Maybe<Scalars['bigint']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  inbox_id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "working_hours" */
export enum working_hours_update_column {
  /** column name */
  account_id = 'account_id',
  /** column name */
  closed_all_day = 'closed_all_day',
  /** column name */
  created_at = 'created_at',
  /** column name */
  day_of_week = 'day_of_week',
  /** column name */
  id = 'id',
  /** column name */
  inbox_id = 'inbox_id',
  /** column name */
  open_all_day = 'open_all_day',
  /** column name */
  updated_at = 'updated_at'
}

export type working_hours_updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<working_hours_inc_input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<working_hours_set_input>;
  /** filter the rows which have to be updated */
  where: working_hours_bool_exp;
};

/** aggregate var_pop on columns */
export type working_hours_var_pop_fields = {
  __typename?: 'working_hours_var_pop_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type working_hours_var_samp_fields = {
  __typename?: 'working_hours_var_samp_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type working_hours_variance_fields = {
  __typename?: 'working_hours_variance_fields';
  account_id?: Maybe<Scalars['Float']>;
  /** 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday */
  day_of_week?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  inbox_id?: Maybe<Scalars['Float']>;
};

export type GET_INBOXESQueryVariables = Exact<{
  filter?: InputMaybe<inboxes_bool_exp>;
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
}>;


export type GET_INBOXESQuery = { __typename?: 'query_root', total: { __typename?: 'inboxes_aggregate', aggregate?: { __typename?: 'inboxes_aggregate_fields', count: number } | null }, payload: Array<{ __typename?: 'inboxes', id: number, name: string, channel_type: string, channel_id: number, channel?: any | null, description?: string | null, is_enabled: boolean, created_at: string, updated_at: string, reply_channel_id?: number | null, total_conversations: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null } }> };

export type GET_INBOXES_BY_IDQueryVariables = Exact<{
  id: Scalars['Int'];
}>;


export type GET_INBOXES_BY_IDQuery = { __typename?: 'query_root', payload?: { __typename?: 'inboxes', id: number, name: string, reply_channel_id?: number | null, channel_type: string, channel?: any | null } | null };

export type UPDATE_INBOXES_BY_IDMutationVariables = Exact<{
  id: Scalars['Int'];
  updated_values?: InputMaybe<inboxes_set_input>;
}>;


export type UPDATE_INBOXES_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'inboxes', name: string, is_enabled: boolean } | null };

export type UPDATE_EMAIL_INBOX_BY_IDMutationVariables = Exact<{
  inbox_id: Scalars['Int'];
  channel_id: Scalars['Int'];
  inbox_update_values?: InputMaybe<inboxes_set_input>;
  channel_update_values?: InputMaybe<channel_email_set_input>;
}>;


export type UPDATE_EMAIL_INBOX_BY_IDMutation = { __typename?: 'mutation_root', updated_inbox?: { __typename?: 'inboxes', id: number, name: string, description?: string | null, is_enabled: boolean } | null, updated_channel?: { __typename?: 'channel_email', id: number, imap_enabled: boolean, imap_username?: string | null, imap_host_address?: string | null, imap_port?: number | null, smtp_enabled: boolean, smtp_username?: string | null, smtp_host_address?: string | null, smtp_port?: number | null, smtp_requires_ssl: boolean, updated_at?: string | null, smtp_email?: string | null, imap_password?: string | null, smtp_password?: string | null } | null };

export type UPDATE_WHATSAPP_INBOX_BY_IDMutationVariables = Exact<{
  inbox_id: Scalars['Int'];
  channel_id: Scalars['bigint'];
  inbox_update_values?: InputMaybe<inboxes_set_input>;
  channel_update_values?: InputMaybe<channel_whatsapp_set_input>;
}>;


export type UPDATE_WHATSAPP_INBOX_BY_IDMutation = { __typename?: 'mutation_root', updated_inbox?: { __typename?: 'inboxes', id: number, name: string, description?: string | null, is_enabled: boolean } | null, updated_channel?: { __typename?: 'channel_whatsapp', id: number, phone_number: string, phone_number_id: string, business_account_id: string, access_token: string } | null };

export type DELETE_INBOX_BY_IDMutationVariables = Exact<{
  inboxId: Scalars['Int'];
}>;


export type DELETE_INBOX_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'inboxes', id: number, name: string, channel_type: string, channel_id: number } | null };

export type GET_CONVERSATION_LISTQueryVariables = Exact<{
  where?: InputMaybe<conversations_bool_exp>;
  offset?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<order_by>;
}>;


export type GET_CONVERSATION_LISTQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'conversations', id: number, inbox_id?: number | null, contact_id?: number | null, status: number, snoozed_until?: string | null, created_at: string, conversation_type: string, contact?: { __typename?: 'contacts', id: number, name?: string | null, email?: string | null, phone_number?: string | null, source?: any | null, created_at: string, updated_at: string, profile_image?: any | null } | null, inbox?: { __typename?: 'inboxes', name: string, channel_type: string, channel?: any | null } | null, unread_messages: { __typename?: 'messages_aggregate', aggregate?: { __typename?: 'messages_aggregate_fields', count: number } | null }, incoming: { __typename?: 'messages_aggregate', aggregate?: { __typename?: 'messages_aggregate_fields', count: number } | null }, outgoing: { __typename?: 'messages_aggregate', aggregate?: { __typename?: 'messages_aggregate_fields', count: number } | null }, messages: Array<{ __typename?: 'messages', id: number, message?: string | null, message_type: number, conversation_id: number, created_at: string, internal: boolean, content_attributes?: any | null, approved_at?: string | null, source_id?: string | null, sender_id?: number | null, sender_info?: any | null, conversation: { __typename?: 'conversations', inbox?: { __typename?: 'inboxes', channel?: any | null } | null }, attachments: Array<{ __typename?: 'attachments', id: number, key?: string | null, file_name?: string | null, file_type?: string | null, extension?: string | null, url?: string | null }> }> }> };

export type GET_CONVERSATION_COUNTSQueryVariables = Exact<{
  _and?: InputMaybe<Array<conversations_bool_exp> | conversations_bool_exp>;
}>;


export type GET_CONVERSATION_COUNTSQuery = { __typename?: 'query_root', mine: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null }, pending: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null }, watching: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null }, history: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null }, unassigned: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null } };

export type GET_SUBSCRIPTION_CONVERSATION_COUNTSubscriptionVariables = Exact<{
  where?: InputMaybe<conversations_bool_exp>;
}>;


export type GET_SUBSCRIPTION_CONVERSATION_COUNTSubscription = { __typename?: 'subscription_root', payload: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null } };

export type GET_CONVERSATIONS_SUBSCRIPTIONSubscriptionVariables = Exact<{
  where?: InputMaybe<conversations_bool_exp>;
  offset?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<order_by>;
}>;


export type GET_CONVERSATIONS_SUBSCRIPTIONSubscription = { __typename?: 'subscription_root', payload: Array<{ __typename?: 'conversations', id: number }> };

export type GET_CONVERSATION_BY_IDQueryVariables = Exact<{
  conversationId: Scalars['bigint'];
}>;


export type GET_CONVERSATION_BY_IDQuery = { __typename?: 'query_root', payload?: { __typename?: 'conversations', id: number, inbox_id?: number | null, contact_id?: number | null, status: number, snoozed_until?: string | null, created_at: string, closing_contact_reason_value?: any | null, additional_attributes?: any | null, conversation_type: string, contact?: { __typename?: 'contacts', id: number, name?: string | null, email?: string | null, phone_number?: string | null, preferred_language: string, source?: any | null, created_at: string, updated_at: string, profile_image?: any | null } | null, agent?: { __typename?: 'users', id: number, name: string, display_name?: string | null, email?: any | null } | null, inbox?: { __typename?: 'inboxes', name: string, channel?: any | null, reply_channel?: { __typename?: 'channel_twitter_profiles', id: number, screen_name: string } | null, team_inboxes: Array<{ __typename?: 'team_inboxes', team: { __typename?: 'teams', id: number, name: string } }> } | null, conversation_tags: Array<{ __typename?: 'conversation_tags', tag: { __typename?: 'tags', id: number, name: string, color?: string | null } }>, assigned_team_member?: { __typename?: 'team_members', team: { __typename?: 'teams', id: number, name: string }, user: { __typename?: 'users', id: number, name: string } } | null } | null };

export type GET_FILTERED_CONVERSATIONQueryVariables = Exact<{
  search_content?: InputMaybe<Scalars['String']>;
  where?: InputMaybe<conversations_bool_exp>;
}>;


export type GET_FILTERED_CONVERSATIONQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'conversations', id: number, inbox_id?: number | null, contact_id?: number | null, status: number, snoozed_until?: string | null, created_at: string, conversation_type: string, contact?: { __typename?: 'contacts', id: number, name?: string | null, email?: string | null, phone_number?: string | null, source?: any | null, created_at: string, updated_at: string, profile_image?: any | null } | null, inbox?: { __typename?: 'inboxes', name: string, channel_type: string } | null, unread_messages: { __typename?: 'messages_aggregate', aggregate?: { __typename?: 'messages_aggregate_fields', count: number } | null }, incoming: { __typename?: 'messages_aggregate', aggregate?: { __typename?: 'messages_aggregate_fields', count: number } | null }, outgoing: { __typename?: 'messages_aggregate', aggregate?: { __typename?: 'messages_aggregate_fields', count: number } | null }, messages: Array<{ __typename?: 'messages', id: number, message?: string | null, message_type: number, conversation_id: number, created_at: string, internal: boolean, content_attributes?: any | null, approved_at?: string | null, source_id?: string | null, sender_id?: number | null, sender_info?: any | null, conversation: { __typename?: 'conversations', inbox?: { __typename?: 'inboxes', channel?: any | null } | null }, attachments: Array<{ __typename?: 'attachments', id: number, key?: string | null, file_name?: string | null, file_type?: string | null, extension?: string | null, url?: string | null }> }> }> };

export type GET_CONVERSATION_BY_CONTACT_IDQueryVariables = Exact<{
  contact_id: Scalars['Int'];
}>;


export type GET_CONVERSATION_BY_CONTACT_IDQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'conversations', id: number, inbox_id?: number | null, contact_id?: number | null, status: number, snoozed_until?: string | null, created_at: string, conversation_type: string, contact?: { __typename?: 'contacts', id: number, name?: string | null, email?: string | null, phone_number?: string | null, source?: any | null, created_at: string, updated_at: string, profile_image?: any | null } | null, inbox?: { __typename?: 'inboxes', name: string, channel_type: string, channel?: any | null } | null, unread_messages: { __typename?: 'messages_aggregate', aggregate?: { __typename?: 'messages_aggregate_fields', count: number } | null }, incoming: { __typename?: 'messages_aggregate', aggregate?: { __typename?: 'messages_aggregate_fields', count: number } | null }, outgoing: { __typename?: 'messages_aggregate', aggregate?: { __typename?: 'messages_aggregate_fields', count: number } | null }, messages: Array<{ __typename?: 'messages', id: number, message?: string | null, message_type: number, conversation_id: number, created_at: string, internal: boolean, content_attributes?: any | null, approved_at?: string | null, source_id?: string | null, sender_id?: number | null, sender_info?: any | null, attachments: Array<{ __typename?: 'attachments', id: number, key?: string | null, file_name?: string | null, file_type?: string | null, extension?: string | null, url?: string | null }> }>, account: { __typename?: 'accounts', name: string }, conversation_tags: Array<{ __typename?: 'conversation_tags', tag: { __typename?: 'tags', id: number, name: string, color?: string | null } }>, agent?: { __typename?: 'users', name: string } | null, assigned_team_member?: { __typename?: 'team_members', user: { __typename?: 'users', name: string, id: number } } | null }> };

export type GET_CUSTOM_FILTERSQueryVariables = Exact<{
  type: Scalars['Int'];
}>;


export type GET_CUSTOM_FILTERSQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'custom_filters', id: number, name: string, query: any, filter_type: number }> };

export type GET_CUSTOM_FILTER_BY_IDQueryVariables = Exact<{
  id: Scalars['bigint'];
}>;


export type GET_CUSTOM_FILTER_BY_IDQuery = { __typename?: 'query_root', payload?: { __typename?: 'custom_filters', id: number, name: string, query: any, filter_type: number } | null };

export type CREATE_CUSTOM_FILTERMutationVariables = Exact<{
  object?: InputMaybe<custom_filters_insert_input>;
}>;


export type CREATE_CUSTOM_FILTERMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'custom_filters', id: number, name: string, query: any, filter_type: number } | null };

export type UPDATE_CUSTOM_FILTER_BY_IDMutationVariables = Exact<{
  id: Scalars['bigint'];
  set?: InputMaybe<custom_filters_set_input>;
}>;


export type UPDATE_CUSTOM_FILTER_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'custom_filters', id: number, name: string, query: any, filter_type: number } | null };

export type DELETE_CUSTOM_FILTER_BY_IDMutationVariables = Exact<{
  id?: InputMaybe<Scalars['bigint']>;
}>;


export type DELETE_CUSTOM_FILTER_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'custom_filters', id: number, name: string } | null };

export type GET_MESSAGESQueryVariables = Exact<{
  conversationId: Scalars['bigint'];
  offset?: InputMaybe<Scalars['Int']>;
}>;


export type GET_MESSAGESQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'messages', id: number, message?: string | null, message_type: number, conversation_id: number, created_at: string, internal: boolean, content_attributes?: any | null, approved_at?: string | null, source_id?: string | null, sender_id?: number | null, sender_info?: any | null, attachments: Array<{ __typename?: 'attachments', id: number, key?: string | null, file_name?: string | null, file_type?: string | null, extension?: string | null, url?: string | null }>, reply_of_message?: { __typename?: 'messages', id: number, message?: string | null } | null, conversation: { __typename?: 'conversations', type: string, inbox?: { __typename?: 'inboxes', name: string, channel_type: string, channel?: any | null } | null, contact?: { __typename?: 'contacts', id: number, name?: string | null, email?: string | null, phone_number?: string | null, source?: any | null, created_at: string, updated_at: string, profile_image?: any | null } | null } }> };

export type GET_MESSAGES_SUBSCRIPTIONSubscriptionVariables = Exact<{
  conversationId: Scalars['bigint'];
}>;


export type GET_MESSAGES_SUBSCRIPTIONSubscription = { __typename?: 'subscription_root', payload: Array<{ __typename?: 'messages', id: number }> };

export type GET_MESSAGES_COUNT_BY_CONVERSATION_IDSubscriptionVariables = Exact<{
  conversationId?: InputMaybe<Scalars['bigint']>;
}>;


export type GET_MESSAGES_COUNT_BY_CONVERSATION_IDSubscription = { __typename?: 'subscription_root', payload: { __typename?: 'messages_aggregate', aggregate?: { __typename?: 'messages_aggregate_fields', count: number } | null } };

export type READ_MESSAGESMutationVariables = Exact<{
  conversation_id: Scalars['bigint'];
}>;


export type READ_MESSAGESMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'messages_mutation_response', returning: Array<{ __typename?: 'messages', id: number, message?: string | null, message_type: number, conversation_id: number, created_at: string, internal: boolean, content_attributes?: any | null, approved_at?: string | null, source_id?: string | null, sender_id?: number | null, sender_info?: any | null, attachments: Array<{ __typename?: 'attachments', id: number, key?: string | null, file_name?: string | null, file_type?: string | null, extension?: string | null, url?: string | null }> }> } | null };

export type GET_AGENT_LISTQueryVariables = Exact<{
  where?: InputMaybe<account_agents_bool_exp>;
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
}>;


export type GET_AGENT_LISTQuery = { __typename?: 'query_root', total: { __typename?: 'account_agents_aggregate', aggregate?: { __typename?: 'account_agents_aggregate_fields', count: number } | null }, payload: Array<{ __typename?: 'account_agents', id?: number | null, name?: string | null, phone_number?: string | null, email?: any | null, avatar_url?: string | null, role?: string | null, is_enabled?: boolean | null, verified?: boolean | null, team_list: Array<{ __typename?: 'team_members', user_id: number, team: { __typename?: 'teams', id: number, name: string } }> }> };

export type GET_AGENT_BY_IDQueryVariables = Exact<{
  user_id: Scalars['bigint'];
}>;


export type GET_AGENT_BY_IDQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'account_agents', id?: number | null, name?: string | null, role?: string | null, email?: any | null, phone_number?: string | null, verified?: boolean | null, invited_by?: { __typename?: 'account_agents', id?: number | null, name?: string | null } | null, team_members: Array<{ __typename?: 'team_members', team: { __typename?: 'teams', id: number, name: string, is_enabled: boolean } }> }> };

export type UPDATE_AGENTMutationVariables = Exact<{
  agent_id: Scalars['bigint'];
  set_account_users?: InputMaybe<account_users_set_input>;
  set_user?: InputMaybe<users_set_input>;
}>;


export type UPDATE_AGENTMutation = { __typename?: 'mutation_root', account_users?: { __typename?: 'account_users_mutation_response', returning: Array<{ __typename?: 'account_users', id: number }> } | null, user?: { __typename?: 'users', id: number } | null };

export type UPDATE_AGENT_STATUSMutationVariables = Exact<{
  agent_id: Scalars['bigint'];
  is_enabled: Scalars['Boolean'];
}>;


export type UPDATE_AGENT_STATUSMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'account_users_mutation_response', returning: Array<{ __typename?: 'account_users', user_id: number, is_enabled: boolean }> } | null };

export type DELETE_AGENT_BY_IDMutationVariables = Exact<{
  agent_id: Scalars['bigint'];
}>;


export type DELETE_AGENT_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'account_users_mutation_response', returning: Array<{ __typename?: 'account_users', id: number }> } | null };

export type GET_TEAMSQueryVariables = Exact<{
  filter?: InputMaybe<teams_bool_exp>;
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
}>;


export type GET_TEAMSQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'teams', id: number, name: string, type?: string | null, description?: string | null, is_enabled: boolean, team_members: Array<{ __typename?: 'team_members', id: number, auto_assign_enabled: boolean, approval_enabled: boolean, max_conversation_queue: number, user: { __typename?: 'users', id: number, name: string } }>, team_inboxes: Array<{ __typename?: 'team_inboxes', id: number, inbox: { __typename?: 'inboxes', id: number, name: string } }> }>, total: { __typename?: 'teams_aggregate', aggregate?: { __typename?: 'teams_aggregate_fields', count: number } | null } };

export type GET_TEAM_BY_MEMBER_IDQueryVariables = Exact<{
  agent_id: Scalars['bigint'];
  conversation_id: Scalars['bigint'];
}>;


export type GET_TEAM_BY_MEMBER_IDQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'teams', id: number, name: string, is_enabled: boolean, allow_auto_assign?: boolean | null }> };

export type GET_TEAM_BY_USER_IDQueryVariables = Exact<{
  user_id: Scalars['bigint'];
}>;


export type GET_TEAM_BY_USER_IDQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'teams', id: number, name: string }> };

export type CREATE_TEAMMutationVariables = Exact<{
  object: teams_insert_input;
}>;


export type CREATE_TEAMMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'teams', id: number, name: string, description?: string | null, is_enabled: boolean, type?: string | null, team_members: Array<{ __typename?: 'team_members', id: number, auto_assign_enabled: boolean, approval_enabled: boolean, max_conversation_queue: number, user: { __typename?: 'users', id: number, name: string } }>, team_inboxes: Array<{ __typename?: 'team_inboxes', id: number, inbox: { __typename?: 'inboxes', id: number, name: string } }> } | null };

export type DELETE_TEAMMutationVariables = Exact<{
  team_id: Scalars['bigint'];
}>;


export type DELETE_TEAMMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'teams', id: number, name: string, type?: string | null, description?: string | null, is_enabled: boolean, team_members: Array<{ __typename?: 'team_members', id: number, user: { __typename?: 'users', id: number, name: string } }>, team_inboxes: Array<{ __typename?: 'team_inboxes', id: number, inbox: { __typename?: 'inboxes', id: number, name: string } }> } | null };

export type UPDATE_TEAM_BY_IDMutationVariables = Exact<{
  team_id: Scalars['bigint'];
  set: teams_set_input;
  member_ids?: InputMaybe<Array<Scalars['bigint']> | Scalars['bigint']>;
  inserted_team_members: Array<team_members_insert_input> | team_members_insert_input;
  inbox_ids?: InputMaybe<Array<Scalars['bigint']> | Scalars['bigint']>;
  inserted_team_inboxes: Array<team_inboxes_insert_input> | team_inboxes_insert_input;
}>;


export type UPDATE_TEAM_BY_IDMutation = { __typename?: 'mutation_root', deleted_team_members?: { __typename?: 'team_members_mutation_response', returning: Array<{ __typename?: 'team_members', team_id: number, user_id: number }> } | null, inserted_team_members?: { __typename?: 'team_members_mutation_response', returning: Array<{ __typename?: 'team_members', team_id: number, user_id: number }> } | null, deleted_team_inboxes?: { __typename?: 'team_inboxes_mutation_response', returning: Array<{ __typename?: 'team_inboxes', team_id: number, inbox_id: number }> } | null, inserted_team_inboxes?: { __typename?: 'team_inboxes_mutation_response', returning: Array<{ __typename?: 'team_inboxes', team_id: number, inbox_id: number }> } | null, updated_team?: { __typename?: 'teams', id: number, name: string, type?: string | null, is_enabled: boolean, team_members: Array<{ __typename?: 'team_members', team_id: number, user_id: number, approval_enabled: boolean, auto_assign_enabled: boolean, max_conversation_queue: number }> } | null };

export type GET_TEAM_BY_IDQueryVariables = Exact<{
  team_id: Scalars['bigint'];
}>;


export type GET_TEAM_BY_IDQuery = { __typename?: 'query_root', payload?: { __typename?: 'teams', id: number, name: string, type?: string | null, description?: string | null, is_enabled: boolean, allow_auto_assign?: boolean | null, team_members: Array<{ __typename?: 'team_members', auto_assign_enabled: boolean, approval_enabled: boolean, max_conversation_queue: number, user: { __typename?: 'users', id: number, name: string } }>, team_inboxes: Array<{ __typename?: 'team_inboxes', inbox: { __typename?: 'inboxes', id: number, name: string } }> } | null };

export type ADD_TEAM_MEMBERSMutationVariables = Exact<{
  objects?: InputMaybe<Array<team_members_insert_input> | team_members_insert_input>;
}>;


export type ADD_TEAM_MEMBERSMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'team_members_mutation_response', returning: Array<{ __typename?: 'team_members', id: number, team_id: number, user_id: number }> } | null };

export type DELETE_TEAM_MEMBERMutationVariables = Exact<{
  members?: InputMaybe<Array<Scalars['bigint']> | Scalars['bigint']>;
}>;


export type DELETE_TEAM_MEMBERMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'team_members_mutation_response', affected_rows: number, returning: Array<{ __typename?: 'team_members', id: number }> } | null };

export type GET_TEAM_MEMBERS_BY_TEAM_IDQueryVariables = Exact<{
  team_id: Scalars['bigint'];
  is_enabled?: InputMaybe<account_users_bool_exp>;
  mine_id?: InputMaybe<bigint_comparison_exp>;
}>;


export type GET_TEAM_MEMBERS_BY_TEAM_IDQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'team_members', agent: { __typename?: 'users', id: number, name: string, display_name?: string | null, email?: any | null } }> };

export type GET_TEAM_MEMBERS_BY_INBOX_IDQueryVariables = Exact<{
  inbox_id: Scalars['bigint'];
}>;


export type GET_TEAM_MEMBERS_BY_INBOX_IDQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'teams', id: number, name: string, team_members: Array<{ __typename?: 'team_members', team_id: number, user_id: number, max_conversation_queue: number, user: { __typename?: 'users', name: string, account_users: Array<{ __typename?: 'account_users', availability: number }> }, total_conversations: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null } }> }> };

export type ASSIGN_TEAM_TO_INBOXMutationVariables = Exact<{
  objects?: InputMaybe<Array<team_inboxes_insert_input> | team_inboxes_insert_input>;
}>;


export type ASSIGN_TEAM_TO_INBOXMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'team_inboxes_mutation_response', returning: Array<{ __typename?: 'team_inboxes', id: number, team_id: number, inbox_id: number }> } | null };

export type ASSIGN_AGENT_TO_CONVERSATIONMutationVariables = Exact<{
  conversation_id: Scalars['bigint'];
  agent_id: Scalars['bigint'];
  team_id: Scalars['bigint'];
}>;


export type ASSIGN_AGENT_TO_CONVERSATIONMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'conversations', id: number, assigned_team_member?: { __typename?: 'team_members', team: { __typename?: 'teams', id: number, name: string }, user: { __typename?: 'users', id: number, name: string } } | null } | null };

export type GET_ALL_CANNED_RESPONSESQueryVariables = Exact<{
  search_content?: InputMaybe<Scalars['String']>;
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
}>;


export type GET_ALL_CANNED_RESPONSESQuery = { __typename?: 'query_root', total: { __typename?: 'canned_responses_aggregate', aggregate?: { __typename?: 'canned_responses_aggregate_fields', count: number } | null }, payload: Array<{ __typename?: 'canned_responses', id: number, short_code: string, content?: string | null, content_html?: string | null, use_count: number, is_enabled: boolean, created_at: string, updated_at: string, category?: { __typename?: 'canned_responses_category', id: number, name: string } | null, created_by?: { __typename?: 'account_agents', name?: string | null, id?: number | null } | null }> };

export type DELETE_CANNED_RESPONSES_BY_IDMutationVariables = Exact<{
  id: Scalars['Int'];
}>;


export type DELETE_CANNED_RESPONSES_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'canned_responses', id: number } | null };

export type CREATE_CANNED_RESPONSESMutationVariables = Exact<{
  object?: InputMaybe<canned_responses_insert_input>;
}>;


export type CREATE_CANNED_RESPONSESMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'canned_responses', id: number, short_code: string, content?: string | null, use_count: number, is_enabled: boolean, created_at: string, updated_at: string, category?: { __typename?: 'canned_responses_category', id: number, name: string } | null } | null };

export type UPDATED_CANNED_RESPONSES_BY_IDMutationVariables = Exact<{
  id: Scalars['Int'];
  updated_values?: InputMaybe<canned_responses_set_input>;
}>;


export type UPDATED_CANNED_RESPONSES_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'canned_responses', id: number, short_code: string, content?: string | null, content_html?: string | null, is_enabled: boolean, updated_at: string } | null };

export type GET_All_CANNED_RESPONSE_CATEGORIESQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<canned_responses_category_order_by> | canned_responses_category_order_by>;
  where?: InputMaybe<canned_responses_category_bool_exp>;
}>;


export type GET_All_CANNED_RESPONSE_CATEGORIESQuery = { __typename?: 'query_root', total: { __typename?: 'canned_responses_category_aggregate', aggregate?: { __typename?: 'canned_responses_category_aggregate_fields', count: number } | null }, payload: Array<{ __typename?: 'canned_responses_category', id: number, name: string, language: string, is_enabled: boolean, created_at: string, updated_at: string, created_by?: { __typename?: 'account_agents', name?: string | null, id?: number | null } | null }> };

export type CREATE_CANNED_CATEGORYMutationVariables = Exact<{
  name: Scalars['String'];
  lang: Scalars['String'];
}>;


export type CREATE_CANNED_CATEGORYMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'canned_responses_category', id: number, language: string, name: string, is_enabled: boolean, created_at: string, updated_at: string } | null };

export type UPDATE_CANNED_CATEGORY_by_IDMutationVariables = Exact<{
  id: Scalars['bigint'];
  updated_values?: InputMaybe<canned_responses_category_set_input>;
}>;


export type UPDATE_CANNED_CATEGORY_by_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'canned_responses_category', id: number, name: string, is_enabled: boolean, updated_at: string } | null };

export type DELETE_CANNED_CATEGORY_BY_IDMutationVariables = Exact<{
  id: Scalars['bigint'];
}>;


export type DELETE_CANNED_CATEGORY_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'canned_responses_category', id: number } | null };

export type DELETE_CONTACTSMutationVariables = Exact<{
  contact_id: Scalars['Int'];
}>;


export type DELETE_CONTACTSMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'contacts', id: number, name?: string | null, email?: string | null, phone_number?: string | null, source?: any | null, created_at: string, updated_at: string, profile_image?: any | null } | null };

export type UPDATE_CONTACTMutationVariables = Exact<{
  id: Scalars['Int'];
  set?: InputMaybe<contacts_set_input>;
}>;


export type UPDATE_CONTACTMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'contacts', id: number, name?: string | null, email?: string | null, phone_number?: string | null, source?: any | null, created_at: string, updated_at: string, city?: string | null, gender?: string | null, preferred_language: string, social_profiles?: any | null, profile_image?: any | null } | null };

export type UPDATE_CONVERSATION_STATUSMutationVariables = Exact<{
  conversation_id: Scalars['bigint'];
  updated_status?: InputMaybe<conversations_set_input>;
}>;


export type UPDATE_CONVERSATION_STATUSMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'conversations', id: number, status: number, closing_contact_reason_value?: any | null } | null };

export type DELETE_CONVERSATION_TAG_BY_IDMutationVariables = Exact<{
  tag_id: Scalars['bigint'];
  conversation_id: Scalars['bigint'];
}>;


export type DELETE_CONVERSATION_TAG_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'conversation_tags_mutation_response', affected_rows: number } | null };

export type SEND_NOTE_WITH_CONVERSATION_CLOSEMutationVariables = Exact<{
  message?: InputMaybe<Scalars['String']>;
  message_type?: InputMaybe<Scalars['Int']>;
  conversation_id?: InputMaybe<Scalars['bigint']>;
}>;


export type SEND_NOTE_WITH_CONVERSATION_CLOSEMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'messages', message?: string | null, message_type: number, conversation: { __typename?: 'conversations', id: number } } | null };

export type ADD_TAG_TO_CONVERSATIONMutationVariables = Exact<{
  tag_id: Scalars['bigint'];
  conversation_id: Scalars['bigint'];
}>;


export type ADD_TAG_TO_CONVERSATIONMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'conversation_tags', tag: { __typename?: 'tags', name: string } } | null };

export type FILTER_CONTACT_LISTQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<contacts_bool_exp>;
}>;


export type FILTER_CONTACT_LISTQuery = { __typename?: 'query_root', counts: { __typename?: 'contacts_aggregate', aggregate?: { __typename?: 'contacts_aggregate_fields', count: number } | null }, payload: Array<{ __typename?: 'contacts', id: number, name?: string | null, email?: string | null, phone_number?: string | null, source?: any | null, created_at: string, updated_at: string, account_id?: number | null, last_activity_at?: string | null, social_profiles?: any | null, profile_image?: any | null, total_conversations: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null }, total_tickets: { __typename?: 'ticket_aggregate', aggregate?: { __typename?: 'ticket_aggregate_fields', count: number } | null }, total_csats: { __typename?: 'csat_feedback_aggregate', aggregate?: { __typename?: 'csat_feedback_aggregate_fields', count: number } | null } }> };

export type GET_CONTACT_COUNTQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<contacts_bool_exp>;
}>;


export type GET_CONTACT_COUNTQuery = { __typename?: 'query_root', payload: { __typename?: 'contacts_aggregate', aggregate?: { __typename?: 'contacts_aggregate_fields', count: number } | null } };

export type REPORT_CONVERSATION_COUNTSQueryVariables = Exact<{
  date_range?: InputMaybe<timestamptz_comparison_exp>;
}>;


export type REPORT_CONVERSATION_COUNTSQuery = { __typename?: 'query_root', total: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null }, open: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null }, assigned: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null }, unassigned: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null }, closed: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null } };

export type GET_AUTOMATION_RULESQueryVariables = Exact<{ [key: string]: never; }>;


export type GET_AUTOMATION_RULESQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'automation_rules', id: number, name: string, description?: string | null, event_name: string, conditions: any, actions: any, active: boolean, created_at: string }> };

export type CREATE_AUTOMATION_RULESMutationVariables = Exact<{
  object?: InputMaybe<automation_rules_insert_input>;
}>;


export type CREATE_AUTOMATION_RULESMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'automation_rules', id: number, name: string, description?: string | null, event_name: string, conditions: any, actions: any, active: boolean, created_at: string } | null };

export type UPDATED_AUTOMATION_RULESMutationVariables = Exact<{
  id: Scalars['bigint'];
  _set?: InputMaybe<automation_rules_set_input>;
}>;


export type UPDATED_AUTOMATION_RULESMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'automation_rules', id: number, name: string, description?: string | null, event_name: string, conditions: any, actions: any, active: boolean, created_at: string } | null };

export type DELETE_AUTOMATION_RULESMutationVariables = Exact<{
  id: Scalars['bigint'];
}>;


export type DELETE_AUTOMATION_RULESMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'automation_rules', id: number, name: string, description?: string | null, event_name: string, conditions: any, actions: any, active: boolean, created_at: string } | null };

export type UPDATE_USER_STATUSMutationVariables = Exact<{
  user_id: Scalars['bigint'];
  availability: Scalars['Int'];
}>;


export type UPDATE_USER_STATUSMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'account_users_mutation_response', affected_rows: number, returning: Array<{ __typename?: 'account_users', user_id: number, availability: number }> } | null };

export type GET_USER_STATUSQueryVariables = Exact<{
  user_id: Scalars['bigint'];
}>;


export type GET_USER_STATUSQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'account_agents', id?: number | null, availability?: number | null }> };

export type GET_CONTACT_BY_IDQueryVariables = Exact<{
  id: Scalars['Int'];
}>;


export type GET_CONTACT_BY_IDQuery = { __typename?: 'query_root', payload?: { __typename?: 'contacts', id: number, name?: string | null, email?: string | null, gender?: string | null, city?: string | null, profile_twitter?: any | null, profile_instagram: any, preferred_language: string, phone_number?: string | null, source?: any | null, created_at: string, updated_at: string, last_activity_at?: string | null, profile_image?: any | null, conversations: Array<{ __typename?: 'conversations', id: number, status: number, created_at: string, account: { __typename?: 'accounts', name: string }, incoming: { __typename?: 'messages_aggregate', aggregate?: { __typename?: 'messages_aggregate_fields', count: number } | null }, outgoing: { __typename?: 'messages_aggregate', aggregate?: { __typename?: 'messages_aggregate_fields', count: number } | null }, conversation_tags: Array<{ __typename?: 'conversation_tags', tag: { __typename?: 'tags', name: string } }>, agent?: { __typename?: 'users', name: string } | null, inbox?: { __typename?: 'inboxes', channel_type: string } | null }>, contact_tags: Array<{ __typename?: 'contact_tags', tag: { __typename?: 'tags', id: number, color?: string | null, name: string } }>, total_conversations: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null }, total_tickets: { __typename?: 'ticket_aggregate', aggregate?: { __typename?: 'ticket_aggregate_fields', count: number } | null }, total_csats: { __typename?: 'csat_feedback_aggregate', aggregate?: { __typename?: 'csat_feedback_aggregate_fields', count: number } | null } } | null };

export type GET_CONTACT_BY_PHONE_NUMBERQueryVariables = Exact<{
  phone_number: Scalars['String'];
}>;


export type GET_CONTACT_BY_PHONE_NUMBERQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'contacts', id: number, name?: string | null, email?: string | null, phone_number?: string | null, source?: any | null, created_at: string, updated_at: string, account_id?: number | null, last_activity_at?: string | null, social_profiles?: any | null, profile_image?: any | null, total_conversations: { __typename?: 'conversations_aggregate', aggregate?: { __typename?: 'conversations_aggregate_fields', count: number } | null }, total_tickets: { __typename?: 'ticket_aggregate', aggregate?: { __typename?: 'ticket_aggregate_fields', count: number } | null }, total_csats: { __typename?: 'csat_feedback_aggregate', aggregate?: { __typename?: 'csat_feedback_aggregate_fields', count: number } | null } }> };

export type TICKET_CONTACTSQueryVariables = Exact<{
  search_contacts: Scalars['String'];
}>;


export type TICKET_CONTACTSQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'contacts', id: number, name?: string | null, email?: string | null, phone_number?: string | null, source?: any | null, created_at: string, updated_at: string, profile_image?: any | null }> };

export type GET_TICKET_FORM_LISTQueryVariables = Exact<{ [key: string]: never; }>;


export type GET_TICKET_FORM_LISTQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'ticket_forms', id: number, type: string, description: string, enabled: boolean, survey_form: any, account_id: number, created_at: string, updated_at: string }> };

export type GET_TICKET_FORM_BY_IDQueryVariables = Exact<{
  id: Scalars['bigint'];
}>;


export type GET_TICKET_FORM_BY_IDQuery = { __typename?: 'query_root', payload?: { __typename?: 'ticket_forms', id: number, survey_form: any, type: string, description: string } | null };

export type CREATE_TICKET_FORMMutationVariables = Exact<{
  object?: InputMaybe<ticket_forms_insert_input>;
}>;


export type CREATE_TICKET_FORMMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'ticket_forms', description: string, enabled: boolean, id: number, survey_form: any, type: string } | null };

export type UPDATE_TICKET_FORM_BY_IDMutationVariables = Exact<{
  id: Scalars['bigint'];
  survey_form?: InputMaybe<Scalars['json']>;
}>;


export type UPDATE_TICKET_FORM_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'ticket_forms', id: number, updated_at: string, survey_form: any, type: string } | null };

export type DELETE_TICKET_FORMMutationVariables = Exact<{
  id: Scalars['bigint'];
}>;


export type DELETE_TICKET_FORMMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'ticket_forms', id: number, type: string, description: string } | null };

export type GET_TICKET_BY_IDQueryVariables = Exact<{
  id: Scalars['bigint'];
}>;


export type GET_TICKET_BY_IDQuery = { __typename?: 'query_root', payload?: { __typename?: 'ticket', id: number, form_value: any, created_at: string, contact_id: number, assigned_agent?: number | null, account_id: number, type?: string | null, priority: number, resolution_time?: string | null, conversation_id?: number | null, status: number, subject: string, assigned_team?: number | null, ticket_form_id: number, updated_at: string, description?: string | null, created_by?: number | null, source?: string | null, team?: { __typename?: 'teams', id: number, name: string } | null, agent?: { __typename?: 'users', id: number, name: string } | null, contact: { __typename?: 'contacts', id: number, name?: string | null, email?: string | null, phone_number?: string | null, preferred_language: string, source?: any | null, created_at: string, updated_at: string, social_profiles?: any | null, profile_image?: any | null, conversations: Array<{ __typename?: 'conversations', id: number, messages: Array<{ __typename?: 'messages', id: number, message?: string | null }> }> }, created_user?: { __typename?: 'users', name: string } | null, ticket_shares: Array<{ __typename?: 'ticket_share', team: { __typename?: 'teams', id: number, name: string } }> } | null };

export type LINK_CONVERSATION_ID_TO_TICKETMutationVariables = Exact<{
  conversationId: Scalars['bigint'];
  ticketId: Scalars['bigint'];
}>;


export type LINK_CONVERSATION_ID_TO_TICKETMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'ticket', conversation_id?: number | null } | null };

export type CREATE_TICKETMutationVariables = Exact<{
  object?: InputMaybe<ticket_insert_input>;
}>;


export type CREATE_TICKETMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'ticket', id: number, form_value: any, created_at: string, contact_id: number, assigned_agent?: number | null, account_id: number, type?: string | null, priority: number, resolution_time?: string | null, status: number, subject: string, assigned_team?: number | null, ticket_form_id: number, updated_at: string, description?: string | null, created_by?: number | null, source?: string | null, team?: { __typename?: 'teams', id: number, name: string } | null, agent?: { __typename?: 'users', id: number, name: string } | null, ticket_shares: Array<{ __typename?: 'ticket_share', id: number, team_id: number, ticket_id: number }> } | null };

export type UPDATE_TICKETMutationVariables = Exact<{
  ticket_id: Scalars['Int'];
  teams_id?: InputMaybe<Array<Scalars['Int']> | Scalars['Int']>;
  ticket_share?: InputMaybe<Array<ticket_share_insert_input> | ticket_share_insert_input>;
  id: Scalars['bigint'];
  _set?: InputMaybe<ticket_set_input>;
}>;


export type UPDATE_TICKETMutation = { __typename?: 'mutation_root', delete_ticket_share?: { __typename?: 'ticket_share_mutation_response', returning: Array<{ __typename?: 'ticket_share', id: number, team_id: number, ticket_id: number }> } | null, insert_ticket_share?: { __typename?: 'ticket_share_mutation_response', returning: Array<{ __typename?: 'ticket_share', id: number, team_id: number, ticket_id: number }> } | null, updated_ticket?: { __typename?: 'ticket', id: number, form_value: any, created_at: string, contact_id: number, assigned_agent?: number | null, account_id: number, type?: string | null, priority: number, resolution_time?: string | null, status: number, subject: string, assigned_team?: number | null, ticket_form_id: number, updated_at: string, description?: string | null, created_by?: number | null, source?: string | null, team?: { __typename?: 'teams', id: number, name: string } | null, agent?: { __typename?: 'users', id: number, name: string } | null } | null };

export type DELETE_TICKETMutationVariables = Exact<{
  id: Scalars['bigint'];
}>;


export type DELETE_TICKETMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'ticket', id: number, form_value: any, created_at: string, contact_id: number, assigned_agent?: number | null, account_id: number, type?: string | null, priority: number, resolution_time?: string | null, status: number, subject: string, assigned_team?: number | null, ticket_form_id: number, updated_at: string, description?: string | null, created_by?: number | null, source?: string | null, team?: { __typename?: 'teams', id: number, name: string } | null, agent?: { __typename?: 'users', id: number, name: string } | null } | null };

export type GET_TICKET_BY_CONTACT_IDQueryVariables = Exact<{
  id: Scalars['bigint'];
}>;


export type GET_TICKET_BY_CONTACT_IDQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'ticket', id: number, description?: string | null, subject: string, source?: string | null, status: number, priority: number, created_at: string, updated_at: string, type?: string | null, form_value: any, assigned_agent?: number | null, agent?: { __typename?: 'users', name: string } | null, team?: { __typename?: 'teams', name: string, id: number } | null }> };

export type GET_TICKET_MESSAGES_BY_TICKET_IDQueryVariables = Exact<{
  ticket_id: Scalars['Int'];
  cursor?: InputMaybe<Int_comparison_exp>;
}>;


export type GET_TICKET_MESSAGES_BY_TICKET_IDQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'ticket_messages', id: number, content_attributes?: any | null, message_type?: number | null, internal?: boolean | null, sender_info?: any | null, status: number, source_id?: string | null, created_at: string, ticket_id?: number | null, message?: string | null, attachments: Array<{ __typename?: 'attachments', id: number, key?: string | null, file_name?: string | null, file_type?: string | null, extension?: string | null, url?: string | null }> }> };

export type GET_TICKET_MESSAGES_SUBSCRIPTIONSubscriptionVariables = Exact<{
  ticketId: Scalars['Int'];
}>;


export type GET_TICKET_MESSAGES_SUBSCRIPTIONSubscription = { __typename?: 'subscription_root', payload: Array<{ __typename?: 'ticket_messages', id: number }> };

export type GET_SEARCHED_TICKETSQueryVariables = Exact<{
  where?: InputMaybe<ticket_bool_exp>;
}>;


export type GET_SEARCHED_TICKETSQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'ticket', id: number, form_value: any, created_at: string, contact_id: number, assigned_agent?: number | null, account_id: number, type?: string | null, priority: number, resolution_time?: string | null, status: number, subject: string, assigned_team?: number | null, ticket_form_id: number, updated_at: string, description?: string | null, created_by?: number | null, source?: string | null, team?: { __typename?: 'teams', id: number, name: string } | null, agent?: { __typename?: 'users', id: number, name: string } | null }> };

export type GET_FILTERED_TICKETSQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ticket_bool_exp>;
  id?: InputMaybe<order_by>;
}>;


export type GET_FILTERED_TICKETSQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'ticket', id: number, form_value: any, created_at: string, contact_id: number, assigned_agent?: number | null, account_id: number, type?: string | null, priority: number, resolution_time?: string | null, status: number, subject: string, assigned_team?: number | null, ticket_form_id: number, updated_at: string, description?: string | null, created_by?: number | null, source?: string | null, team?: { __typename?: 'teams', id: number, name: string } | null, agent?: { __typename?: 'users', id: number, name: string } | null }> };

export type GET_TICKET_COUNT_SUBSCRIPTIONSubscriptionVariables = Exact<{
  where?: InputMaybe<ticket_bool_exp>;
}>;


export type GET_TICKET_COUNT_SUBSCRIPTIONSubscription = { __typename?: 'subscription_root', payload: { __typename?: 'ticket_aggregate', aggregate?: { __typename?: 'ticket_aggregate_fields', count: number } | null } };

export type GET_TICKETS_SUBSCRIPTIONSubscriptionVariables = Exact<{
  where?: InputMaybe<ticket_bool_exp>;
  offset?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<order_by>;
  offset1?: InputMaybe<Scalars['Int']>;
  created_at1?: InputMaybe<order_by>;
}>;


export type GET_TICKETS_SUBSCRIPTIONSubscription = { __typename?: 'subscription_root', ticket: Array<{ __typename?: 'ticket', id: number }> };

export type GET_TICKETS_COUNTSQueryVariables = Exact<{
  _and?: InputMaybe<Array<ticket_bool_exp> | ticket_bool_exp>;
}>;


export type GET_TICKETS_COUNTSQuery = { __typename?: 'query_root', mine: { __typename?: 'ticket_aggregate', aggregate?: { __typename?: 'ticket_aggregate_fields', count: number } | null }, team: { __typename?: 'ticket_aggregate', aggregate?: { __typename?: 'ticket_aggregate_fields', count: number } | null }, watching: { __typename?: 'ticket_aggregate', aggregate?: { __typename?: 'ticket_aggregate_fields', count: number } | null }, history: { __typename?: 'ticket_aggregate', aggregate?: { __typename?: 'ticket_aggregate_fields', count: number } | null }, unassigned: { __typename?: 'ticket_aggregate', aggregate?: { __typename?: 'ticket_aggregate_fields', count: number } | null } };

export type CREATE_CONTACTMutationVariables = Exact<{
  contact_values?: InputMaybe<contacts_insert_input>;
}>;


export type CREATE_CONTACTMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'contacts', id: number, name?: string | null, email?: string | null, phone_number?: string | null, gender?: string | null, city?: string | null, preferred_language: string, profile_twitter?: any | null } | null };

export type UPDATE_PHONE_NUMBERMutationVariables = Exact<{
  id: Scalars['Int'];
  set: Scalars['String'];
}>;


export type UPDATE_PHONE_NUMBERMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'contacts', id: number, phone_number?: string | null } | null };

export type GET_TWITTER_CHANNEL_PROFILESQueryVariables = Exact<{ [key: string]: never; }>;


export type GET_TWITTER_CHANNEL_PROFILESQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'channel_twitter_profiles', id: number, screen_name: string }> };

export type USER_PROFILE_INFOQueryVariables = Exact<{
  id: Scalars['bigint'];
}>;


export type USER_PROFILE_INFOQuery = { __typename?: 'query_root', payload?: { __typename?: 'users', availability?: number | null, email?: any | null, display_name?: string | null, id: number, hr_id: string, name: string, phone_number?: string | null, updated_at: string } | null };

export type GetAllPublishArticlesQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
}>;


export type GetAllPublishArticlesQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'knowledge_base_articles', id: number, name: string, body: string, language: string, article_status: string, category: { __typename?: 'knowledge_base_categories', name: string, id: number } }>, total: { __typename?: 'knowledge_base_articles_aggregate', aggregate?: { __typename?: 'knowledge_base_articles_aggregate_fields', count: number } | null } };

export type GET_PUBLISHED_ARTICLES_BY_IDQueryVariables = Exact<{
  id?: InputMaybe<Scalars['bigint']>;
}>;


export type GET_PUBLISHED_ARTICLES_BY_IDQuery = { __typename?: 'query_root', payload?: { __typename?: 'knowledge_base_articles', id: number, name: string, updated_at: string, body: string, meta_tags?: string | null, meta_description?: string | null, language: string, category: { __typename?: 'knowledge_base_categories', id: number, name: string } } | null };

export type GET_ALL_PUBLISHED_ARTICLES_BY_CATEGORIESQueryVariables = Exact<{
  categories: Scalars['String'];
}>;


export type GET_ALL_PUBLISHED_ARTICLES_BY_CATEGORIESQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'knowledge_base_articles', id: number, name: string, article_status: string, body: string, category: { __typename?: 'knowledge_base_categories', id: number, name: string } }> };

export type UPDATE_USER_PROFILE_BY_IDMutationVariables = Exact<{
  id: Scalars['bigint'];
  updated_values?: InputMaybe<users_set_input>;
}>;


export type UPDATE_USER_PROFILE_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'users', name: string, display_name?: string | null, email?: any | null, phone_number?: string | null } | null };

export type CREATE_KNOWLEDGE_BASE_CATEGORYMutationVariables = Exact<{
  object?: InputMaybe<knowledge_base_categories_insert_input>;
}>;


export type CREATE_KNOWLEDGE_BASE_CATEGORYMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'knowledge_base_categories', id: number, name: string, language: string, description: string, updated_at: string, is_enabled: boolean } | null };

export type GET_ALL_KNOWLEDGE_BASE_CATEGORIESQueryVariables = Exact<{ [key: string]: never; }>;


export type GET_ALL_KNOWLEDGE_BASE_CATEGORIESQuery = { __typename?: 'query_root', total: { __typename?: 'knowledge_base_categories_aggregate', aggregate?: { __typename?: 'knowledge_base_categories_aggregate_fields', count: number } | null }, payload: Array<{ __typename?: 'knowledge_base_categories', id: number, name: string, description: string, language: string, is_enabled: boolean, updated_at: string, created_at: string, created_by?: { __typename?: 'account_agents', name?: string | null } | null }> };

export type GET_CATEGORIES_BY_IDQueryVariables = Exact<{
  id?: InputMaybe<Scalars['bigint']>;
}>;


export type GET_CATEGORIES_BY_IDQuery = { __typename?: 'query_root', payload?: { __typename?: 'knowledge_base_categories', id: number, name: string, language: string, description: string } | null };

export type UPDATE_KNOWLEDGE_BASE_CATEGORIES_BY_IDMutationVariables = Exact<{
  id: Scalars['bigint'];
  updated_values?: InputMaybe<knowledge_base_categories_set_input>;
}>;


export type UPDATE_KNOWLEDGE_BASE_CATEGORIES_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'knowledge_base_categories', id: number, name: string } | null };

export type DELETE_KNOWLEDGE_BASE_CATEGORY_BY_IDMutationVariables = Exact<{
  id: Scalars['bigint'];
}>;


export type DELETE_KNOWLEDGE_BASE_CATEGORY_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'knowledge_base_categories', id: number } | null };

export type GET_ALL_KNOWLEDGE_BASE_ARTICLESQueryVariables = Exact<{
  search_content?: InputMaybe<Scalars['String']>;
  offset?: InputMaybe<Scalars['Int']>;
}>;


export type GET_ALL_KNOWLEDGE_BASE_ARTICLESQuery = { __typename?: 'query_root', total: { __typename?: 'knowledge_base_articles_aggregate', aggregate?: { __typename?: 'knowledge_base_articles_aggregate_fields', count: number } | null }, payload: Array<{ __typename?: 'knowledge_base_articles', id: number, name: string, body: string, article_status: string, permissions: string, read_count: number, is_enabled: boolean, language: string, meta_tags?: string | null, meta_description?: string | null, conversation_trigger?: string | null, category_id: number, created_at: string, updated_at: string, created_by: { __typename?: 'users', name: string }, category: { __typename?: 'knowledge_base_categories', name: string } }> };

export type CREATE_KNOWLEDGE_BASE_ARTICLEMutationVariables = Exact<{
  object?: InputMaybe<knowledge_base_articles_insert_input>;
}>;


export type CREATE_KNOWLEDGE_BASE_ARTICLEMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'knowledge_base_articles', id: number, name: string, body: string, read_count: number, permissions: string, language: string, is_enabled: boolean, created_at: string, updated_at: string, article_status: string, conversation_trigger?: string | null, meta_description?: string | null, meta_tags?: string | null, created_by: { __typename?: 'users', name: string } } | null };

export type GET_SPECIFIC_ARTICLE_BY_IDQueryVariables = Exact<{
  id: Scalars['bigint'];
}>;


export type GET_SPECIFIC_ARTICLE_BY_IDQuery = { __typename?: 'query_root', payload?: { __typename?: 'knowledge_base_articles', id: number, name: string, body: string, article_status: string, permissions: string, read_count: number, is_enabled: boolean, language: string, meta_tags?: string | null, meta_description?: string | null, conversation_trigger?: string | null, category_id: number, created_at: string, updated_at: string, created_by: { __typename?: 'users', name: string } } | null };

export type UPDATE_ARTICLE_BY_IDMutationVariables = Exact<{
  id?: InputMaybe<Scalars['bigint']>;
  updated_values?: InputMaybe<knowledge_base_articles_set_input>;
  read_count?: InputMaybe<Scalars['Int']>;
}>;


export type UPDATE_ARTICLE_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'knowledge_base_articles', id: number, name: string, read_count: number } | null };

export type DELETE_ARTICLE_BY_IDMutationVariables = Exact<{
  id?: InputMaybe<Scalars['bigint']>;
}>;


export type DELETE_ARTICLE_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'knowledge_base_articles', id: number } | null };

export type CREATE_TAGMutationVariables = Exact<{
  object?: InputMaybe<tags_insert_input>;
}>;


export type CREATE_TAGMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'tags', id: number, name: string, description?: string | null, level: any } | null };

export type GET_ALL_TAGSQueryVariables = Exact<{
  search_items: Scalars['String'];
}>;


export type GET_ALL_TAGSQuery = { __typename?: 'query_root', total: { __typename?: 'tags_aggregate', aggregate?: { __typename?: 'tags_aggregate_fields', count: number } | null }, payload: Array<{ __typename?: 'tags', id: number, name: string, description?: string | null, is_enabled: boolean, level: any, created_at: string, updated_at: string, smart_tags?: any | null, account_id: number, created_by?: { __typename?: 'account_agents', id?: number | null, name?: string | null } | null }> };

export type GET_A_TAG_BY_IDQueryVariables = Exact<{
  id?: InputMaybe<Scalars['bigint']>;
}>;


export type GET_A_TAG_BY_IDQuery = { __typename?: 'query_root', payload?: { __typename?: 'tags', id: number, name: string, description?: string | null, level: any, smart_tags?: any | null } | null };

export type UPDATED_TAGSMutationVariables = Exact<{
  updated_values?: InputMaybe<tags_set_input>;
  id?: InputMaybe<Scalars['bigint']>;
}>;


export type UPDATED_TAGSMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'tags', id: number, name: string, description?: string | null, is_enabled: boolean } | null };

export type DELETE_TAG_BY_IDMutationVariables = Exact<{
  id: Scalars['bigint'];
}>;


export type DELETE_TAG_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'tags', id: number, name: string, description?: string | null, level: any, is_enabled: boolean, created_at: string, updated_at: string } | null };

export type UPDATED_CONTACT_REASON_BY_IDMutationVariables = Exact<{
  id?: InputMaybe<Scalars['bigint']>;
  categories?: InputMaybe<Scalars['jsonb']>;
}>;


export type UPDATED_CONTACT_REASON_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'workflows_contact_reason', id: number, updated_at: string, contact_reason: string, categories: any } | null };

export type GET_ALL_CONTACT_REASONSQueryVariables = Exact<{ [key: string]: never; }>;


export type GET_ALL_CONTACT_REASONSQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'workflows_contact_reason', categories: any, contact_reason: string, created_at: string, id: number, updated_at: string }> };

export type UPDATE_LAST_ACTIVE_ATMutationVariables = Exact<{
  user_id: Scalars['bigint'];
}>;


export type UPDATE_LAST_ACTIVE_ATMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'account_users_mutation_response', returning: Array<{ __typename?: 'account_users', user_id: number, last_active_at?: string | null }> } | null };

export type ADD_AGENTMutationVariables = Exact<{
  object: account_users_insert_input;
}>;


export type ADD_AGENTMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'account_users', id: number, user_id: number } | null };

export type GET_CONVERSATION_CSATQueryVariables = Exact<{
  csat_id: Scalars['String'];
}>;


export type GET_CONVERSATION_CSATQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'conversations', id: number, contact_id?: number | null, csat_sent: boolean, csat_sent_at?: string | null, csat_language: string, csat_feedback?: { __typename?: 'csat_feedback', satisfaction_point: number, open_question_ans?: string | null } | null }> };

export type GET_TICKET_CSATQueryVariables = Exact<{
  csat_id: Scalars['String'];
}>;


export type GET_TICKET_CSATQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'ticket', id: number, contact_id: number, csat_sent: boolean, csat_sent_at?: string | null, csat_language: string, csat_feedback?: { __typename?: 'csat_feedback', satisfaction_point: number, open_question_ans?: string | null } | null }> };

export type ADD_CSAT_FEEDBACKMutationVariables = Exact<{
  object: csat_feedback_insert_input;
}>;


export type ADD_CSAT_FEEDBACKMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'csat_feedback', contact_id: number, conversation_id?: number | null, ticket_id?: number | null, satisfaction_point: number, open_question_ans?: string | null } | null };

export type GET_CSAT_SCOREQueryVariables = Exact<{
  where?: InputMaybe<csat_feedback_bool_exp>;
}>;


export type GET_CSAT_SCOREQuery = { __typename?: 'query_root', feedback: Array<{ __typename?: 'csat_feedback', satisfaction_point: number, open_question_ans?: string | null, conversation_id?: number | null, ticket_id?: number | null }>, aggregations: { __typename?: 'csat_feedback_aggregate', aggregate?: { __typename?: 'csat_feedback_aggregate_fields', count: number, sum?: { __typename?: 'csat_feedback_sum_fields', satisfaction_point?: number | null } | null } | null } };

export type GET_INSTAGRAM_PAGESQueryVariables = Exact<{ [key: string]: never; }>;


export type GET_INSTAGRAM_PAGESQuery = { __typename?: 'query_root', payload: Array<{ __typename?: 'channel_instagram', page_id: string }> };

export type UPDATE_INSTAGRAM_INBOX_BY_IDMutationVariables = Exact<{
  inbox_id: Scalars['Int'];
  inbox_update_values?: InputMaybe<inboxes_set_input>;
}>;


export type UPDATE_INSTAGRAM_INBOX_BY_IDMutation = { __typename?: 'mutation_root', payload?: { __typename?: 'inboxes', id: number, name: string, description?: string | null, is_enabled: boolean } | null };


export const GET_INBOXESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_INBOXES"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"inboxes_bool_exp"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"0"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"20"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"total"},"name":{"kind":"Name","value":"inboxes_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"inboxes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"asc"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"channel_type"}},{"kind":"Field","name":{"kind":"Name","value":"channel_id"}},{"kind":"Field","name":{"kind":"Name","value":"channel"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"reply_channel_id"}},{"kind":"Field","alias":{"kind":"Name","value":"total_conversations"},"name":{"kind":"Name","value":"conversations_aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GET_INBOXESQuery, GET_INBOXESQueryVariables>;
export const GET_INBOXES_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_INBOXES_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"inboxes_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"reply_channel_id"}},{"kind":"Field","name":{"kind":"Name","value":"channel_type"}},{"kind":"Field","name":{"kind":"Name","value":"channel"}}]}}]}}]} as unknown as DocumentNode<GET_INBOXES_BY_IDQuery, GET_INBOXES_BY_IDQueryVariables>;
export const UPDATE_INBOXES_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_INBOXES_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"inboxes_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_inboxes_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}}]}}]}}]} as unknown as DocumentNode<UPDATE_INBOXES_BY_IDMutation, UPDATE_INBOXES_BY_IDMutationVariables>;
export const UPDATE_EMAIL_INBOX_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_EMAIL_INBOX_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inbox_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"channel_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inbox_update_values"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"inboxes_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"channel_update_values"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"channel_email_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"updated_inbox"},"name":{"kind":"Name","value":"update_inboxes_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inbox_id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inbox_update_values"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"updated_channel"},"name":{"kind":"Name","value":"update_channel_email_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"channel_id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"channel_update_values"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"imap_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"imap_username"}},{"kind":"Field","name":{"kind":"Name","value":"imap_host_address"}},{"kind":"Field","name":{"kind":"Name","value":"imap_port"}},{"kind":"Field","name":{"kind":"Name","value":"smtp_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"smtp_username"}},{"kind":"Field","name":{"kind":"Name","value":"smtp_host_address"}},{"kind":"Field","name":{"kind":"Name","value":"smtp_port"}},{"kind":"Field","name":{"kind":"Name","value":"smtp_requires_ssl"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"smtp_email"}},{"kind":"Field","name":{"kind":"Name","value":"imap_password"}},{"kind":"Field","name":{"kind":"Name","value":"smtp_password"}}]}}]}}]} as unknown as DocumentNode<UPDATE_EMAIL_INBOX_BY_IDMutation, UPDATE_EMAIL_INBOX_BY_IDMutationVariables>;
export const UPDATE_WHATSAPP_INBOX_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_WHATSAPP_INBOX_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inbox_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"channel_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inbox_update_values"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"inboxes_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"channel_update_values"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"channel_whatsapp_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"updated_inbox"},"name":{"kind":"Name","value":"update_inboxes_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inbox_id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inbox_update_values"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"updated_channel"},"name":{"kind":"Name","value":"update_channel_whatsapp_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"channel_id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"channel_update_values"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number_id"}},{"kind":"Field","name":{"kind":"Name","value":"business_account_id"}},{"kind":"Field","name":{"kind":"Name","value":"access_token"}}]}}]}}]} as unknown as DocumentNode<UPDATE_WHATSAPP_INBOX_BY_IDMutation, UPDATE_WHATSAPP_INBOX_BY_IDMutationVariables>;
export const DELETE_INBOX_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_INBOX_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inboxId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_inboxes_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inboxId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"channel_type"}},{"kind":"Field","name":{"kind":"Name","value":"channel_id"}}]}}]}}]} as unknown as DocumentNode<DELETE_INBOX_BY_IDMutation, DELETE_INBOX_BY_IDMutationVariables>;
export const GET_CONVERSATION_LISTDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_CONVERSATION_LIST"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"conversations_bool_exp"}},"defaultValue":{"kind":"ObjectValue","fields":[]}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"0"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"created_at"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"order_by"}},"defaultValue":{"kind":"EnumValue","value":"desc"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"conversations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"10"}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"messages_aggregate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"max"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"created_at"},"value":{"kind":"Variable","name":{"kind":"Name","value":"created_at"}}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"inbox_id"}},{"kind":"Field","name":{"kind":"Name","value":"contact_id"}},{"kind":"Field","alias":{"kind":"Name","value":"conversation_type"},"name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"snoozed_until"}},{"kind":"Field","name":{"kind":"Name","value":"contact"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","alias":{"kind":"Name","value":"profile_image"},"name":{"kind":"Name","value":"source"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"path"},"value":{"kind":"StringValue","value":"profile_image","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"inbox"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"channel_type"}},{"kind":"Field","name":{"kind":"Name","value":"channel"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"unread_messages"},"name":{"kind":"Name","value":"messages_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"status"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"1"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"incoming"},"name":{"kind":"Name","value":"messages_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"message_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"0"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"outgoing"},"name":{"kind":"Name","value":"messages_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"message_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"1"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"messages"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"created_at"},"value":{"kind":"EnumValue","value":"desc"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"message_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_neq"},"value":{"kind":"IntValue","value":"2"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"message_type"}},{"kind":"Field","name":{"kind":"Name","value":"conversation_id"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"internal"}},{"kind":"Field","name":{"kind":"Name","value":"content_attributes"}},{"kind":"Field","name":{"kind":"Name","value":"approved_at"}},{"kind":"Field","name":{"kind":"Name","value":"source_id"}},{"kind":"Field","name":{"kind":"Name","value":"sender_id"}},{"kind":"Field","name":{"kind":"Name","value":"sender_info"}},{"kind":"Field","name":{"kind":"Name","value":"conversation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"inbox"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"channel"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"attachments"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"file_name"}},{"kind":"Field","name":{"kind":"Name","value":"file_type"}},{"kind":"Field","name":{"kind":"Name","value":"extension"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GET_CONVERSATION_LISTQuery, GET_CONVERSATION_LISTQueryVariables>;
export const GET_CONVERSATION_COUNTSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_CONVERSATION_COUNTS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"_and"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"conversations_bool_exp"}}}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"mine"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"tab_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_contains"},"value":{"kind":"StringValue","value":"mine","block":false}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"_and"},"value":{"kind":"Variable","name":{"kind":"Name","value":"_and"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"pending"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"tab_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_contains"},"value":{"kind":"StringValue","value":"pending","block":false}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"_and"},"value":{"kind":"Variable","name":{"kind":"Name","value":"_and"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"watching"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"tab_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_contains"},"value":{"kind":"StringValue","value":"watching","block":false}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"_and"},"value":{"kind":"Variable","name":{"kind":"Name","value":"_and"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"history"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"tab_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_contains"},"value":{"kind":"StringValue","value":"history","block":false}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"_and"},"value":{"kind":"Variable","name":{"kind":"Name","value":"_and"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"unassigned"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"tab_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_contains"},"value":{"kind":"StringValue","value":"unassigned","block":false}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"_and"},"value":{"kind":"Variable","name":{"kind":"Name","value":"_and"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]} as unknown as DocumentNode<GET_CONVERSATION_COUNTSQuery, GET_CONVERSATION_COUNTSQueryVariables>;
export const GET_SUBSCRIPTION_CONVERSATION_COUNTDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"GET_SUBSCRIPTION_CONVERSATION_COUNT"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"conversations_bool_exp"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]} as unknown as DocumentNode<GET_SUBSCRIPTION_CONVERSATION_COUNTSubscription, GET_SUBSCRIPTION_CONVERSATION_COUNTSubscriptionVariables>;
export const GET_CONVERSATIONS_SUBSCRIPTIONDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"GET_CONVERSATIONS_SUBSCRIPTION"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"conversations_bool_exp"}},"defaultValue":{"kind":"ObjectValue","fields":[]}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"0"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"created_at"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"order_by"}},"defaultValue":{"kind":"EnumValue","value":"desc"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"conversations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"messages_aggregate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"max"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"created_at"},"value":{"kind":"Variable","name":{"kind":"Name","value":"created_at"}}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<GET_CONVERSATIONS_SUBSCRIPTIONSubscription, GET_CONVERSATIONS_SUBSCRIPTIONSubscriptionVariables>;
export const GET_CONVERSATION_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_CONVERSATION_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conversationId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"conversations_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conversationId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"inbox_id"}},{"kind":"Field","name":{"kind":"Name","value":"contact_id"}},{"kind":"Field","alias":{"kind":"Name","value":"conversation_type"},"name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"snoozed_until"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"closing_contact_reason_value"}},{"kind":"Field","name":{"kind":"Name","value":"additional_attributes"}},{"kind":"Field","name":{"kind":"Name","value":"contact"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","name":{"kind":"Name","value":"preferred_language"}},{"kind":"Field","alias":{"kind":"Name","value":"profile_image"},"name":{"kind":"Name","value":"source"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"path"},"value":{"kind":"StringValue","value":"profile_image","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}},{"kind":"Field","name":{"kind":"Name","value":"agent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"display_name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}},{"kind":"Field","name":{"kind":"Name","value":"inbox"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"channel"}},{"kind":"Field","name":{"kind":"Name","value":"reply_channel"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"screen_name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"team_inboxes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"team"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"conversation_tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tag"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"color"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"assigned_team_member"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"team"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GET_CONVERSATION_BY_IDQuery, GET_CONVERSATION_BY_IDQueryVariables>;
export const GET_FILTERED_CONVERSATIONDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_FILTERED_CONVERSATION"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search_content"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}},"defaultValue":{"kind":"StringValue","value":"%%","block":false}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"conversations_bool_exp"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"conversations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"10"}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"messages_aggregate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"max"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"created_at"},"value":{"kind":"EnumValue","value":"desc"}}]}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"IntValue","value":"0"}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"inbox_id"}},{"kind":"Field","name":{"kind":"Name","value":"contact_id"}},{"kind":"Field","alias":{"kind":"Name","value":"conversation_type"},"name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"snoozed_until"}},{"kind":"Field","name":{"kind":"Name","value":"contact"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","alias":{"kind":"Name","value":"profile_image"},"name":{"kind":"Name","value":"source"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"path"},"value":{"kind":"StringValue","value":"profile_image","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"inbox"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"channel_type"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"unread_messages"},"name":{"kind":"Name","value":"messages_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"status"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"1"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"incoming"},"name":{"kind":"Name","value":"messages_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"message_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"0"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"outgoing"},"name":{"kind":"Name","value":"messages_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"message_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"1"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"messages"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"desc"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"message"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_content"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"message_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_in"},"value":{"kind":"ListValue","values":[{"kind":"IntValue","value":"0"},{"kind":"IntValue","value":"1"}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"message_type"}},{"kind":"Field","name":{"kind":"Name","value":"conversation_id"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"internal"}},{"kind":"Field","name":{"kind":"Name","value":"content_attributes"}},{"kind":"Field","name":{"kind":"Name","value":"approved_at"}},{"kind":"Field","name":{"kind":"Name","value":"source_id"}},{"kind":"Field","name":{"kind":"Name","value":"sender_id"}},{"kind":"Field","name":{"kind":"Name","value":"sender_info"}},{"kind":"Field","name":{"kind":"Name","value":"conversation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"inbox"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"channel"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"attachments"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"file_name"}},{"kind":"Field","name":{"kind":"Name","value":"file_type"}},{"kind":"Field","name":{"kind":"Name","value":"extension"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GET_FILTERED_CONVERSATIONQuery, GET_FILTERED_CONVERSATIONQueryVariables>;
export const GET_CONVERSATION_BY_CONTACT_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_CONVERSATION_BY_CONTACT_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"contact_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"conversations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"contact_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"contact_id"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"inbox_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_is_null"},"value":{"kind":"BooleanValue","value":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"inbox_id"}},{"kind":"Field","name":{"kind":"Name","value":"contact_id"}},{"kind":"Field","alias":{"kind":"Name","value":"conversation_type"},"name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"snoozed_until"}},{"kind":"Field","name":{"kind":"Name","value":"contact"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","alias":{"kind":"Name","value":"profile_image"},"name":{"kind":"Name","value":"source"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"path"},"value":{"kind":"StringValue","value":"profile_image","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"inbox"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"channel_type"}},{"kind":"Field","name":{"kind":"Name","value":"channel"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"unread_messages"},"name":{"kind":"Name","value":"messages_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"status"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"1"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"incoming"},"name":{"kind":"Name","value":"messages_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"message_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"0"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"outgoing"},"name":{"kind":"Name","value":"messages_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"message_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"1"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"messages"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"desc"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"message_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_neq"},"value":{"kind":"IntValue","value":"2"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"message_type"}},{"kind":"Field","name":{"kind":"Name","value":"conversation_id"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"internal"}},{"kind":"Field","name":{"kind":"Name","value":"content_attributes"}},{"kind":"Field","name":{"kind":"Name","value":"approved_at"}},{"kind":"Field","name":{"kind":"Name","value":"source_id"}},{"kind":"Field","name":{"kind":"Name","value":"sender_id"}},{"kind":"Field","name":{"kind":"Name","value":"sender_info"}},{"kind":"Field","name":{"kind":"Name","value":"attachments"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"file_name"}},{"kind":"Field","name":{"kind":"Name","value":"file_type"}},{"kind":"Field","name":{"kind":"Name","value":"extension"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"account"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"conversation_tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tag"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"color"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"agent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assigned_team_member"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GET_CONVERSATION_BY_CONTACT_IDQuery, GET_CONVERSATION_BY_CONTACT_IDQueryVariables>;
export const GET_CUSTOM_FILTERSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_CUSTOM_FILTERS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"type"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"custom_filters"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"filter_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"type"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"query"}},{"kind":"Field","name":{"kind":"Name","value":"filter_type"}}]}}]}}]} as unknown as DocumentNode<GET_CUSTOM_FILTERSQuery, GET_CUSTOM_FILTERSQueryVariables>;
export const GET_CUSTOM_FILTER_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_CUSTOM_FILTER_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"custom_filters_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"query"}},{"kind":"Field","name":{"kind":"Name","value":"filter_type"}}]}}]}}]} as unknown as DocumentNode<GET_CUSTOM_FILTER_BY_IDQuery, GET_CUSTOM_FILTER_BY_IDQueryVariables>;
export const CREATE_CUSTOM_FILTERDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CREATE_CUSTOM_FILTER"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"object"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"custom_filters_insert_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_custom_filters_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"object"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"query"}},{"kind":"Field","name":{"kind":"Name","value":"filter_type"}}]}}]}}]} as unknown as DocumentNode<CREATE_CUSTOM_FILTERMutation, CREATE_CUSTOM_FILTERMutationVariables>;
export const UPDATE_CUSTOM_FILTER_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_CUSTOM_FILTER_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"set"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"custom_filters_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_custom_filters_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"set"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"query"}},{"kind":"Field","name":{"kind":"Name","value":"filter_type"}}]}}]}}]} as unknown as DocumentNode<UPDATE_CUSTOM_FILTER_BY_IDMutation, UPDATE_CUSTOM_FILTER_BY_IDMutationVariables>;
export const DELETE_CUSTOM_FILTER_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_CUSTOM_FILTER_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}},"defaultValue":{"kind":"StringValue","value":"","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_custom_filters_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<DELETE_CUSTOM_FILTER_BY_IDMutation, DELETE_CUSTOM_FILTER_BY_IDMutationVariables>;
export const GET_MESSAGESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_MESSAGES"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conversationId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"messages"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"conversation_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conversationId"}}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"10"}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"created_at"},"value":{"kind":"EnumValue","value":"desc"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"message_type"}},{"kind":"Field","name":{"kind":"Name","value":"conversation_id"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"internal"}},{"kind":"Field","name":{"kind":"Name","value":"content_attributes"}},{"kind":"Field","name":{"kind":"Name","value":"approved_at"}},{"kind":"Field","name":{"kind":"Name","value":"source_id"}},{"kind":"Field","name":{"kind":"Name","value":"sender_id"}},{"kind":"Field","name":{"kind":"Name","value":"sender_info"}},{"kind":"Field","name":{"kind":"Name","value":"attachments"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"file_name"}},{"kind":"Field","name":{"kind":"Name","value":"file_type"}},{"kind":"Field","name":{"kind":"Name","value":"extension"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}},{"kind":"Field","name":{"kind":"Name","value":"reply_of_message"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"Field","name":{"kind":"Name","value":"conversation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"inbox"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"channel_type"}},{"kind":"Field","name":{"kind":"Name","value":"channel"}}]}},{"kind":"Field","name":{"kind":"Name","value":"contact"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","alias":{"kind":"Name","value":"profile_image"},"name":{"kind":"Name","value":"source"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"path"},"value":{"kind":"StringValue","value":"profile_image","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GET_MESSAGESQuery, GET_MESSAGESQueryVariables>;
export const GET_MESSAGES_SUBSCRIPTIONDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"GET_MESSAGES_SUBSCRIPTION"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conversationId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"messages"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"conversation_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conversationId"}}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"created_at"},"value":{"kind":"EnumValue","value":"desc"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<GET_MESSAGES_SUBSCRIPTIONSubscription, GET_MESSAGES_SUBSCRIPTIONSubscriptionVariables>;
export const GET_MESSAGES_COUNT_BY_CONVERSATION_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"GET_MESSAGES_COUNT_BY_CONVERSATION_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conversationId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}},"defaultValue":{"kind":"IntValue","value":"10"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"messages_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"conversation_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conversationId"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]} as unknown as DocumentNode<GET_MESSAGES_COUNT_BY_CONVERSATION_IDSubscription, GET_MESSAGES_COUNT_BY_CONVERSATION_IDSubscriptionVariables>;
export const READ_MESSAGESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"READ_MESSAGES"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_messages"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"conversation_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"status"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"1"}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"status"},"value":{"kind":"IntValue","value":"0"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"message_type"}},{"kind":"Field","name":{"kind":"Name","value":"conversation_id"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"internal"}},{"kind":"Field","name":{"kind":"Name","value":"content_attributes"}},{"kind":"Field","name":{"kind":"Name","value":"approved_at"}},{"kind":"Field","name":{"kind":"Name","value":"source_id"}},{"kind":"Field","name":{"kind":"Name","value":"sender_id"}},{"kind":"Field","name":{"kind":"Name","value":"sender_info"}},{"kind":"Field","name":{"kind":"Name","value":"attachments"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"file_name"}},{"kind":"Field","name":{"kind":"Name","value":"file_type"}},{"kind":"Field","name":{"kind":"Name","value":"extension"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}}]} as unknown as DocumentNode<READ_MESSAGESMutation, READ_MESSAGESMutationVariables>;
export const GET_AGENT_LISTDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_AGENT_LIST"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"account_agents_bool_exp"}},"defaultValue":{"kind":"ObjectValue","fields":[]}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"0"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"20"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"total"},"name":{"kind":"Name","value":"account_agents_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"account_agents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"desc"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"avatar_url"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"verified"}},{"kind":"Field","alias":{"kind":"Name","value":"team_list"},"name":{"kind":"Name","value":"team_members"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"team"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"user_id"}}]}}]}}]}}]} as unknown as DocumentNode<GET_AGENT_LISTQuery, GET_AGENT_LISTQueryVariables>;
export const GET_AGENT_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_AGENT_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"user_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"account_agents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"user_id"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","name":{"kind":"Name","value":"verified"}},{"kind":"Field","name":{"kind":"Name","value":"invited_by"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"team_members"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"team"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GET_AGENT_BY_IDQuery, GET_AGENT_BY_IDQueryVariables>;
export const UPDATE_AGENTDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_AGENT"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"agent_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"set_account_users"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"account_users_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"set_user"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"users_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"account_users"},"name":{"kind":"Name","value":"update_account_users"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"user_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"agent_id"}}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"set_account_users"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"user"},"name":{"kind":"Name","value":"update_users_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"agent_id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"set_user"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<UPDATE_AGENTMutation, UPDATE_AGENTMutationVariables>;
export const UPDATE_AGENT_STATUSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_AGENT_STATUS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"agent_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"is_enabled"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_account_users"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"user_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"agent_id"}}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"is_enabled"},"value":{"kind":"Variable","name":{"kind":"Name","value":"is_enabled"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user_id"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}}]}}]}}]}}]} as unknown as DocumentNode<UPDATE_AGENT_STATUSMutation, UPDATE_AGENT_STATUSMutationVariables>;
export const DELETE_AGENT_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_AGENT_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"agent_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_account_users"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"user_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"agent_id"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<DELETE_AGENT_BY_IDMutation, DELETE_AGENT_BY_IDMutationVariables>;
export const GET_TEAMSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TEAMS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"teams_bool_exp"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"0"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"20"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"teams"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"asc"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"team_members"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"auto_assign_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"approval_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"max_conversation_queue"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"team_inboxes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"inbox"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"total"},"name":{"kind":"Name","value":"teams_aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]} as unknown as DocumentNode<GET_TEAMSQuery, GET_TEAMSQueryVariables>;
export const GET_TEAM_BY_MEMBER_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TEAM_BY_MEMBER_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"agent_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"teams"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"team_members"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"user_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"agent_id"}}}]}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"team_inboxes"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"inbox"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"conversations"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}}}]}}]}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"allow_auto_assign"}}]}}]}}]} as unknown as DocumentNode<GET_TEAM_BY_MEMBER_IDQuery, GET_TEAM_BY_MEMBER_IDQueryVariables>;
export const GET_TEAM_BY_USER_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TEAM_BY_USER_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"user_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"teams"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"team_members"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"user_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"user_id"}}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<GET_TEAM_BY_USER_IDQuery, GET_TEAM_BY_USER_IDQueryVariables>;
export const CREATE_TEAMDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CREATE_TEAM"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"object"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"teams_insert_input"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_teams_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"object"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"team_members"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"auto_assign_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"approval_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"max_conversation_queue"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"team_inboxes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"inbox"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<CREATE_TEAMMutation, CREATE_TEAMMutationVariables>;
export const DELETE_TEAMDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_TEAM"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"team_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_teams_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"team_id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"team_members"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"team_inboxes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"inbox"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<DELETE_TEAMMutation, DELETE_TEAMMutationVariables>;
export const UPDATE_TEAM_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_TEAM_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"team_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"set"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"teams_set_input"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"member_ids"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inserted_team_members"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"team_members_insert_input"}}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inbox_ids"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inserted_team_inboxes"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"team_inboxes_insert_input"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"deleted_team_members"},"name":{"kind":"Name","value":"delete_team_members"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"team_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"team_id"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"user_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_nin"},"value":{"kind":"Variable","name":{"kind":"Name","value":"member_ids"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"team_id"}},{"kind":"Field","name":{"kind":"Name","value":"user_id"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"inserted_team_members"},"name":{"kind":"Name","value":"insert_team_members"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"objects"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inserted_team_members"}}},{"kind":"Argument","name":{"kind":"Name","value":"on_conflict"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"constraint"},"value":{"kind":"EnumValue","value":"team_members_team_id_user_id_key"}},{"kind":"ObjectField","name":{"kind":"Name","value":"update_columns"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"approval_enabled"},{"kind":"EnumValue","value":"auto_assign_enabled"},{"kind":"EnumValue","value":"max_conversation_queue"}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"team_id"}},{"kind":"Field","name":{"kind":"Name","value":"user_id"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"deleted_team_inboxes"},"name":{"kind":"Name","value":"delete_team_inboxes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"team_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"team_id"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"inbox_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_nin"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inbox_ids"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"team_id"}},{"kind":"Field","name":{"kind":"Name","value":"inbox_id"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"inserted_team_inboxes"},"name":{"kind":"Name","value":"insert_team_inboxes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"objects"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inserted_team_inboxes"}}},{"kind":"Argument","name":{"kind":"Name","value":"on_conflict"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"constraint"},"value":{"kind":"EnumValue","value":"team_inboxes_team_id_inbox_id_key"}},{"kind":"ObjectField","name":{"kind":"Name","value":"update_columns"},"value":{"kind":"ListValue","values":[]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"team_id"}},{"kind":"Field","name":{"kind":"Name","value":"inbox_id"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"updated_team"},"name":{"kind":"Name","value":"update_teams_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"team_id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"set"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"team_members"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"team_id"}},{"kind":"Field","name":{"kind":"Name","value":"user_id"}},{"kind":"Field","name":{"kind":"Name","value":"approval_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"auto_assign_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"max_conversation_queue"}}]}}]}}]}}]} as unknown as DocumentNode<UPDATE_TEAM_BY_IDMutation, UPDATE_TEAM_BY_IDMutationVariables>;
export const GET_TEAM_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TEAM_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"team_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"teams_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"team_id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"allow_auto_assign"}},{"kind":"Field","name":{"kind":"Name","value":"team_members"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"auto_assign_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"approval_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"max_conversation_queue"}}]}},{"kind":"Field","name":{"kind":"Name","value":"team_inboxes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"inbox"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GET_TEAM_BY_IDQuery, GET_TEAM_BY_IDQueryVariables>;
export const ADD_TEAM_MEMBERSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ADD_TEAM_MEMBERS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"objects"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"team_members_insert_input"}}}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_team_members"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"objects"},"value":{"kind":"Variable","name":{"kind":"Name","value":"objects"}}},{"kind":"Argument","name":{"kind":"Name","value":"on_conflict"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"constraint"},"value":{"kind":"EnumValue","value":"team_members_team_id_user_id_key"}},{"kind":"ObjectField","name":{"kind":"Name","value":"update_columns"},"value":{"kind":"ListValue","values":[]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"team_id"}},{"kind":"Field","name":{"kind":"Name","value":"user_id"}}]}}]}}]}}]} as unknown as DocumentNode<ADD_TEAM_MEMBERSMutation, ADD_TEAM_MEMBERSMutationVariables>;
export const DELETE_TEAM_MEMBERDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_TEAM_MEMBER"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"members"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_team_members"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"user_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_in"},"value":{"kind":"Variable","name":{"kind":"Name","value":"members"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"affected_rows"}},{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<DELETE_TEAM_MEMBERMutation, DELETE_TEAM_MEMBERMutationVariables>;
export const GET_TEAM_MEMBERS_BY_TEAM_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TEAM_MEMBERS_BY_TEAM_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"team_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"is_enabled"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"account_users_bool_exp"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"mine_id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint_comparison_exp"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"team_members"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"team_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"team_id"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"user"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"account_users"},"value":{"kind":"Variable","name":{"kind":"Name","value":"is_enabled"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"mine_id"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"agent"},"name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"display_name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}}]}}]}}]} as unknown as DocumentNode<GET_TEAM_MEMBERS_BY_TEAM_IDQuery, GET_TEAM_MEMBERS_BY_TEAM_IDQueryVariables>;
export const GET_TEAM_MEMBERS_BY_INBOX_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TEAM_MEMBERS_BY_INBOX_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inbox_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"teams"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"is_enabled"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"BooleanValue","value":true}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"team_inboxes"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"inbox_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inbox_id"}}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"team_members"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"agent"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"is_enabled"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"BooleanValue","value":true}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"team_id"}},{"kind":"Field","name":{"kind":"Name","value":"user_id"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"account_users"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availability"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"max_conversation_queue"}},{"kind":"Field","alias":{"kind":"Name","value":"total_conversations"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"inbox_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inbox_id"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GET_TEAM_MEMBERS_BY_INBOX_IDQuery, GET_TEAM_MEMBERS_BY_INBOX_IDQueryVariables>;
export const ASSIGN_TEAM_TO_INBOXDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ASSIGN_TEAM_TO_INBOX"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"objects"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"team_inboxes_insert_input"}}}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_team_inboxes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"objects"},"value":{"kind":"Variable","name":{"kind":"Name","value":"objects"}}},{"kind":"Argument","name":{"kind":"Name","value":"on_conflict"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"constraint"},"value":{"kind":"EnumValue","value":"team_inboxes_team_id_inbox_id_key"}},{"kind":"ObjectField","name":{"kind":"Name","value":"update_columns"},"value":{"kind":"ListValue","values":[]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"team_id"}},{"kind":"Field","name":{"kind":"Name","value":"inbox_id"}}]}}]}}]}}]} as unknown as DocumentNode<ASSIGN_TEAM_TO_INBOXMutation, ASSIGN_TEAM_TO_INBOXMutationVariables>;
export const ASSIGN_AGENT_TO_CONVERSATIONDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ASSIGN_AGENT_TO_CONVERSATION"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"agent_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"team_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_conversations_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"agent_id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"agent_id"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"assigned_team_id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"team_id"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_team_member"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"team"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<ASSIGN_AGENT_TO_CONVERSATIONMutation, ASSIGN_AGENT_TO_CONVERSATIONMutationVariables>;
export const GET_ALL_CANNED_RESPONSESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_ALL_CANNED_RESPONSES"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search_content"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}},"defaultValue":{"kind":"StringValue","value":"","block":false}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"0"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"20"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"total"},"name":{"kind":"Name","value":"canned_responses_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"short_code"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_content"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"content"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_content"}}}]}}]}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"canned_responses"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"short_code"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_content"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"content"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_content"}}}]}}]}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"short_code"}},{"kind":"Field","name":{"kind":"Name","value":"content"}},{"kind":"Field","name":{"kind":"Name","value":"content_html"}},{"kind":"Field","name":{"kind":"Name","value":"use_count"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"created_by"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}}]}}]} as unknown as DocumentNode<GET_ALL_CANNED_RESPONSESQuery, GET_ALL_CANNED_RESPONSESQueryVariables>;
export const DELETE_CANNED_RESPONSES_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_CANNED_RESPONSES_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_canned_responses_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<DELETE_CANNED_RESPONSES_BY_IDMutation, DELETE_CANNED_RESPONSES_BY_IDMutationVariables>;
export const CREATE_CANNED_RESPONSESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CREATE_CANNED_RESPONSES"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"object"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"canned_responses_insert_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_canned_responses_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"object"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"short_code"}},{"kind":"Field","name":{"kind":"Name","value":"content"}},{"kind":"Field","name":{"kind":"Name","value":"use_count"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}}]}}]} as unknown as DocumentNode<CREATE_CANNED_RESPONSESMutation, CREATE_CANNED_RESPONSESMutationVariables>;
export const UPDATED_CANNED_RESPONSES_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATED_CANNED_RESPONSES_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"canned_responses_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_canned_responses_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"short_code"}},{"kind":"Field","name":{"kind":"Name","value":"content"}},{"kind":"Field","name":{"kind":"Name","value":"content_html"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}}]}}]} as unknown as DocumentNode<UPDATED_CANNED_RESPONSES_BY_IDMutation, UPDATED_CANNED_RESPONSES_BY_IDMutationVariables>;
export const GET_All_CANNED_RESPONSE_CATEGORIESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_All_CANNED_RESPONSE_CATEGORIES"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"20"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"0"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"order_by"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"canned_responses_category_order_by"}}}},"defaultValue":{"kind":"ObjectValue","fields":[]}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"canned_responses_category_bool_exp"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"total"},"name":{"kind":"Name","value":"canned_responses_category_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"canned_responses_category"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"Variable","name":{"kind":"Name","value":"order_by"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"created_by"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<GET_All_CANNED_RESPONSE_CATEGORIESQuery, GET_All_CANNED_RESPONSE_CATEGORIESQueryVariables>;
export const CREATE_CANNED_CATEGORYDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CREATE_CANNED_CATEGORY"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"lang"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_canned_responses_category_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"language"},"value":{"kind":"Variable","name":{"kind":"Name","value":"lang"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}}]}}]} as unknown as DocumentNode<CREATE_CANNED_CATEGORYMutation, CREATE_CANNED_CATEGORYMutationVariables>;
export const UPDATE_CANNED_CATEGORY_by_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_CANNED_CATEGORY_by_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"canned_responses_category_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_canned_responses_category_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}}]}}]} as unknown as DocumentNode<UPDATE_CANNED_CATEGORY_by_IDMutation, UPDATE_CANNED_CATEGORY_by_IDMutationVariables>;
export const DELETE_CANNED_CATEGORY_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_CANNED_CATEGORY_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_canned_responses_category_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<DELETE_CANNED_CATEGORY_BY_IDMutation, DELETE_CANNED_CATEGORY_BY_IDMutationVariables>;
export const DELETE_CONTACTSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_CONTACTS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"contact_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_contacts_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"contact_id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","alias":{"kind":"Name","value":"profile_image"},"name":{"kind":"Name","value":"source"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"path"},"value":{"kind":"StringValue","value":"profile_image","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}}]}}]} as unknown as DocumentNode<DELETE_CONTACTSMutation, DELETE_CONTACTSMutationVariables>;
export const UPDATE_CONTACTDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_CONTACT"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"set"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"contacts_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_contacts_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"set"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","alias":{"kind":"Name","value":"profile_image"},"name":{"kind":"Name","value":"source"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"path"},"value":{"kind":"StringValue","value":"profile_image","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"gender"}},{"kind":"Field","name":{"kind":"Name","value":"preferred_language"}},{"kind":"Field","name":{"kind":"Name","value":"social_profiles"}}]}}]}}]} as unknown as DocumentNode<UPDATE_CONTACTMutation, UPDATE_CONTACTMutationVariables>;
export const UPDATE_CONVERSATION_STATUSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_CONVERSATION_STATUS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"updated_status"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"conversations_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_conversations_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"updated_status"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"closing_contact_reason_value"}}]}}]}}]} as unknown as DocumentNode<UPDATE_CONVERSATION_STATUSMutation, UPDATE_CONVERSATION_STATUSMutationVariables>;
export const DELETE_CONVERSATION_TAG_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_CONVERSATION_TAG_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"tag_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_conversation_tags"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"tag_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"tag_id"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"conversation_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"affected_rows"}}]}}]}}]} as unknown as DocumentNode<DELETE_CONVERSATION_TAG_BY_IDMutation, DELETE_CONVERSATION_TAG_BY_IDMutationVariables>;
export const SEND_NOTE_WITH_CONVERSATION_CLOSEDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SEND_NOTE_WITH_CONVERSATION_CLOSE"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"message"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}},"defaultValue":{"kind":"StringValue","value":"","block":false}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"message_type"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"10"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}},"defaultValue":{"kind":"StringValue","value":"","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_messages_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"message"},"value":{"kind":"Variable","name":{"kind":"Name","value":"message"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"message_type"},"value":{"kind":"Variable","name":{"kind":"Name","value":"message_type"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"conversation_id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"conversation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"message_type"}}]}}]}}]} as unknown as DocumentNode<SEND_NOTE_WITH_CONVERSATION_CLOSEMutation, SEND_NOTE_WITH_CONVERSATION_CLOSEMutationVariables>;
export const ADD_TAG_TO_CONVERSATIONDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ADD_TAG_TO_CONVERSATION"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"tag_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_conversation_tags_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"tag_id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"tag_id"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"conversation_id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conversation_id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"on_conflict"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"constraint"},"value":{"kind":"EnumValue","value":"conversation_tags_conversation_id_tag_id_key"}},{"kind":"ObjectField","name":{"kind":"Name","value":"update_columns"},"value":{"kind":"ListValue","values":[]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tag"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<ADD_TAG_TO_CONVERSATIONMutation, ADD_TAG_TO_CONVERSATIONMutationVariables>;
export const FILTER_CONTACT_LISTDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"FILTER_CONTACT_LIST"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"20"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"0"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"contacts_bool_exp"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"counts"},"name":{"kind":"Name","value":"contacts_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"contacts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"desc"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","alias":{"kind":"Name","value":"profile_image"},"name":{"kind":"Name","value":"source"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"path"},"value":{"kind":"StringValue","value":"profile_image","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"account_id"}},{"kind":"Field","name":{"kind":"Name","value":"last_activity_at"}},{"kind":"Field","name":{"kind":"Name","value":"social_profiles"}},{"kind":"Field","alias":{"kind":"Name","value":"total_conversations"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"inbox_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_is_null"},"value":{"kind":"BooleanValue","value":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"total_tickets"},"name":{"kind":"Name","value":"tickets_aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"total_csats"},"name":{"kind":"Name","value":"csat_feedbacks_aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]}}]} as unknown as DocumentNode<FILTER_CONTACT_LISTQuery, FILTER_CONTACT_LISTQueryVariables>;
export const GET_CONTACT_COUNTDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_CONTACT_COUNT"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"0"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"contacts_bool_exp"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"contacts_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"desc"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]} as unknown as DocumentNode<GET_CONTACT_COUNTQuery, GET_CONTACT_COUNTQueryVariables>;
export const REPORT_CONVERSATION_COUNTSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"REPORT_CONVERSATION_COUNTS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"date_range"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"timestamptz_comparison_exp"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"total"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"updated_at"},"value":{"kind":"Variable","name":{"kind":"Name","value":"date_range"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"open"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"status"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"0"}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"updated_at"},"value":{"kind":"Variable","name":{"kind":"Name","value":"date_range"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"assigned"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"agent_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_is_null"},"value":{"kind":"BooleanValue","value":false}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"updated_at"},"value":{"kind":"Variable","name":{"kind":"Name","value":"date_range"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"unassigned"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"agent_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_is_null"},"value":{"kind":"BooleanValue","value":true}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"updated_at"},"value":{"kind":"Variable","name":{"kind":"Name","value":"date_range"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"closed"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"status"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"1"}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"updated_at"},"value":{"kind":"Variable","name":{"kind":"Name","value":"date_range"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]} as unknown as DocumentNode<REPORT_CONVERSATION_COUNTSQuery, REPORT_CONVERSATION_COUNTSQueryVariables>;
export const GET_AUTOMATION_RULESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_AUTOMATION_RULES"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"automation_rules"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"asc"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"event_name"}},{"kind":"Field","name":{"kind":"Name","value":"conditions"}},{"kind":"Field","name":{"kind":"Name","value":"actions"}},{"kind":"Field","name":{"kind":"Name","value":"active"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}}]}}]}}]} as unknown as DocumentNode<GET_AUTOMATION_RULESQuery, GET_AUTOMATION_RULESQueryVariables>;
export const CREATE_AUTOMATION_RULESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CREATE_AUTOMATION_RULES"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"object"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"automation_rules_insert_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_automation_rules_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"object"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"event_name"}},{"kind":"Field","name":{"kind":"Name","value":"conditions"}},{"kind":"Field","name":{"kind":"Name","value":"actions"}},{"kind":"Field","name":{"kind":"Name","value":"active"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}}]}}]}}]} as unknown as DocumentNode<CREATE_AUTOMATION_RULESMutation, CREATE_AUTOMATION_RULESMutationVariables>;
export const UPDATED_AUTOMATION_RULESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATED_AUTOMATION_RULES"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"_set"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"automation_rules_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_automation_rules_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"_set"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"event_name"}},{"kind":"Field","name":{"kind":"Name","value":"conditions"}},{"kind":"Field","name":{"kind":"Name","value":"actions"}},{"kind":"Field","name":{"kind":"Name","value":"active"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}}]}}]}}]} as unknown as DocumentNode<UPDATED_AUTOMATION_RULESMutation, UPDATED_AUTOMATION_RULESMutationVariables>;
export const DELETE_AUTOMATION_RULESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_AUTOMATION_RULES"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_automation_rules_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"event_name"}},{"kind":"Field","name":{"kind":"Name","value":"conditions"}},{"kind":"Field","name":{"kind":"Name","value":"actions"}},{"kind":"Field","name":{"kind":"Name","value":"active"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}}]}}]}}]} as unknown as DocumentNode<DELETE_AUTOMATION_RULESMutation, DELETE_AUTOMATION_RULESMutationVariables>;
export const UPDATE_USER_STATUSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_USER_STATUS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"user_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"availability"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_account_users"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"user_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"user_id"}}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"availability"},"value":{"kind":"Variable","name":{"kind":"Name","value":"availability"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"affected_rows"}},{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user_id"}},{"kind":"Field","name":{"kind":"Name","value":"availability"}}]}}]}}]}}]} as unknown as DocumentNode<UPDATE_USER_STATUSMutation, UPDATE_USER_STATUSMutationVariables>;
export const GET_USER_STATUSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_USER_STATUS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"user_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"account_agents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"user_id"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"availability"}}]}}]}}]} as unknown as DocumentNode<GET_USER_STATUSQuery, GET_USER_STATUSQueryVariables>;
export const GET_CONTACT_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_CONTACT_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"contacts_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"gender"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"profile_twitter"}},{"kind":"Field","name":{"kind":"Name","value":"profile_instagram"}},{"kind":"Field","name":{"kind":"Name","value":"preferred_language"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","alias":{"kind":"Name","value":"profile_image"},"name":{"kind":"Name","value":"source"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"path"},"value":{"kind":"StringValue","value":"profile_image","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"last_activity_at"}},{"kind":"Field","name":{"kind":"Name","value":"conversations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"account"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","alias":{"kind":"Name","value":"incoming"},"name":{"kind":"Name","value":"messages_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"message_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"0"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"outgoing"},"name":{"kind":"Name","value":"messages_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"message_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"IntValue","value":"1"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"conversation_tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tag"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"agent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"inbox"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"channel_type"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"contact_tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tag"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"total_conversations"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"inbox_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_is_null"},"value":{"kind":"BooleanValue","value":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"total_tickets"},"name":{"kind":"Name","value":"tickets_aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"total_csats"},"name":{"kind":"Name","value":"csat_feedbacks_aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GET_CONTACT_BY_IDQuery, GET_CONTACT_BY_IDQueryVariables>;
export const GET_CONTACT_BY_PHONE_NUMBERDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_CONTACT_BY_PHONE_NUMBER"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"phone_number"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"contacts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"phone_number"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"phone_number"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","alias":{"kind":"Name","value":"profile_image"},"name":{"kind":"Name","value":"source"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"path"},"value":{"kind":"StringValue","value":"profile_image","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"account_id"}},{"kind":"Field","name":{"kind":"Name","value":"last_activity_at"}},{"kind":"Field","name":{"kind":"Name","value":"social_profiles"}},{"kind":"Field","alias":{"kind":"Name","value":"total_conversations"},"name":{"kind":"Name","value":"conversations_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"inbox_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_is_null"},"value":{"kind":"BooleanValue","value":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"total_tickets"},"name":{"kind":"Name","value":"tickets_aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"total_csats"},"name":{"kind":"Name","value":"csat_feedbacks_aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GET_CONTACT_BY_PHONE_NUMBERQuery, GET_CONTACT_BY_PHONE_NUMBERQueryVariables>;
export const TICKET_CONTACTSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TICKET_CONTACTS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search_contacts"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"contacts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_and"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"name"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_contacts"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"email"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_contacts"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"phone_number"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_contacts"}}}]}}]}]}}]}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","alias":{"kind":"Name","value":"profile_image"},"name":{"kind":"Name","value":"source"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"path"},"value":{"kind":"StringValue","value":"profile_image","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}}]}}]} as unknown as DocumentNode<TICKET_CONTACTSQuery, TICKET_CONTACTSQueryVariables>;
export const GET_TICKET_FORM_LISTDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TICKET_FORM_LIST"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"ticket_forms"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"enabled"}},{"kind":"Field","name":{"kind":"Name","value":"survey_form"}},{"kind":"Field","name":{"kind":"Name","value":"account_id"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}}]}}]} as unknown as DocumentNode<GET_TICKET_FORM_LISTQuery, GET_TICKET_FORM_LISTQueryVariables>;
export const GET_TICKET_FORM_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TICKET_FORM_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"ticket_forms_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"survey_form"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}}]} as unknown as DocumentNode<GET_TICKET_FORM_BY_IDQuery, GET_TICKET_FORM_BY_IDQueryVariables>;
export const CREATE_TICKET_FORMDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CREATE_TICKET_FORM"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"object"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ticket_forms_insert_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_ticket_forms_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"object"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"enabled"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"survey_form"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]} as unknown as DocumentNode<CREATE_TICKET_FORMMutation, CREATE_TICKET_FORMMutationVariables>;
export const UPDATE_TICKET_FORM_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_TICKET_FORM_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"survey_form"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"json"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_ticket_forms_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"survey_form"},"value":{"kind":"Variable","name":{"kind":"Name","value":"survey_form"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"survey_form"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]} as unknown as DocumentNode<UPDATE_TICKET_FORM_BY_IDMutation, UPDATE_TICKET_FORM_BY_IDMutationVariables>;
export const DELETE_TICKET_FORMDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_TICKET_FORM"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_ticket_forms_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}}]} as unknown as DocumentNode<DELETE_TICKET_FORMMutation, DELETE_TICKET_FORMMutationVariables>;
export const GET_TICKET_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TICKET_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"ticket_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"form_value"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"contact_id"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_agent"}},{"kind":"Field","name":{"kind":"Name","value":"account_id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"priority"}},{"kind":"Field","name":{"kind":"Name","value":"resolution_time"}},{"kind":"Field","name":{"kind":"Name","value":"conversation_id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_team"}},{"kind":"Field","name":{"kind":"Name","value":"ticket_form_id"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"created_by"}},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"team"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"agent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"contact"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","name":{"kind":"Name","value":"preferred_language"}},{"kind":"Field","alias":{"kind":"Name","value":"profile_image"},"name":{"kind":"Name","value":"source"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"path"},"value":{"kind":"StringValue","value":"profile_image","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"social_profiles"}},{"kind":"Field","name":{"kind":"Name","value":"conversations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"messages"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"created_user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"ticket_shares"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"team"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GET_TICKET_BY_IDQuery, GET_TICKET_BY_IDQueryVariables>;
export const LINK_CONVERSATION_ID_TO_TICKETDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"LINK_CONVERSATION_ID_TO_TICKET"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conversationId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"ticketId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_ticket_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"ticketId"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"conversation_id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conversationId"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"conversation_id"}}]}}]}}]} as unknown as DocumentNode<LINK_CONVERSATION_ID_TO_TICKETMutation, LINK_CONVERSATION_ID_TO_TICKETMutationVariables>;
export const CREATE_TICKETDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CREATE_TICKET"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"object"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ticket_insert_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_ticket_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"object"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"form_value"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"contact_id"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_agent"}},{"kind":"Field","name":{"kind":"Name","value":"account_id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"priority"}},{"kind":"Field","name":{"kind":"Name","value":"resolution_time"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_team"}},{"kind":"Field","name":{"kind":"Name","value":"ticket_form_id"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"created_by"}},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"team"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"agent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"ticket_shares"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"team_id"}},{"kind":"Field","name":{"kind":"Name","value":"ticket_id"}}]}}]}}]}}]} as unknown as DocumentNode<CREATE_TICKETMutation, CREATE_TICKETMutationVariables>;
export const UPDATE_TICKETDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_TICKET"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"ticket_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"teams_id"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"ticket_share"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ticket_share_insert_input"}}}},"defaultValue":{"kind":"ObjectValue","fields":[]}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"_set"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ticket_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"delete_ticket_share"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"ticket_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"ticket_id"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"team_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_nin"},"value":{"kind":"Variable","name":{"kind":"Name","value":"teams_id"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"team_id"}},{"kind":"Field","name":{"kind":"Name","value":"ticket_id"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"insert_ticket_share"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"on_conflict"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"constraint"},"value":{"kind":"EnumValue","value":"ticket_share_ticket_id_team_id_key"}},{"kind":"ObjectField","name":{"kind":"Name","value":"update_columns"},"value":{"kind":"ListValue","values":[]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"objects"},"value":{"kind":"Variable","name":{"kind":"Name","value":"ticket_share"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"team_id"}},{"kind":"Field","name":{"kind":"Name","value":"ticket_id"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"updated_ticket"},"name":{"kind":"Name","value":"update_ticket_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"_set"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"form_value"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"contact_id"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_agent"}},{"kind":"Field","name":{"kind":"Name","value":"account_id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"priority"}},{"kind":"Field","name":{"kind":"Name","value":"resolution_time"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_team"}},{"kind":"Field","name":{"kind":"Name","value":"ticket_form_id"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"created_by"}},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"team"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"agent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<UPDATE_TICKETMutation, UPDATE_TICKETMutationVariables>;
export const DELETE_TICKETDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_TICKET"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_ticket_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"form_value"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"contact_id"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_agent"}},{"kind":"Field","name":{"kind":"Name","value":"account_id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"priority"}},{"kind":"Field","name":{"kind":"Name","value":"resolution_time"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_team"}},{"kind":"Field","name":{"kind":"Name","value":"ticket_form_id"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"created_by"}},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"team"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"agent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<DELETE_TICKETMutation, DELETE_TICKETMutationVariables>;
export const GET_TICKET_BY_CONTACT_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TICKET_BY_CONTACT_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"ticket"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"contact_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"priority"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"form_value"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_agent"}},{"kind":"Field","name":{"kind":"Name","value":"agent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"team"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<GET_TICKET_BY_CONTACT_IDQuery, GET_TICKET_BY_CONTACT_IDQueryVariables>;
export const GET_TICKET_MESSAGES_BY_TICKET_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TICKET_MESSAGES_BY_TICKET_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"ticket_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int_comparison_exp"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"ticket_messages"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"ticket_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"ticket_id"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"20"}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"desc"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"message"},"name":{"kind":"Name","value":"content"}},{"kind":"Field","name":{"kind":"Name","value":"content_attributes"}},{"kind":"Field","name":{"kind":"Name","value":"message_type"}},{"kind":"Field","name":{"kind":"Name","value":"internal"}},{"kind":"Field","name":{"kind":"Name","value":"sender_info"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"source_id"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"ticket_id"}},{"kind":"Field","name":{"kind":"Name","value":"attachments"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"file_name"}},{"kind":"Field","name":{"kind":"Name","value":"file_type"}},{"kind":"Field","name":{"kind":"Name","value":"extension"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]} as unknown as DocumentNode<GET_TICKET_MESSAGES_BY_TICKET_IDQuery, GET_TICKET_MESSAGES_BY_TICKET_IDQueryVariables>;
export const GET_TICKET_MESSAGES_SUBSCRIPTIONDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"GET_TICKET_MESSAGES_SUBSCRIPTION"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"ticketId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"ticket_messages"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"ticket_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"ticketId"}}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"desc"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<GET_TICKET_MESSAGES_SUBSCRIPTIONSubscription, GET_TICKET_MESSAGES_SUBSCRIPTIONSubscriptionVariables>;
export const GET_SEARCHED_TICKETSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_SEARCHED_TICKETS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ticket_bool_exp"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"ticket"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"form_value"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"contact_id"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_agent"}},{"kind":"Field","name":{"kind":"Name","value":"account_id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"priority"}},{"kind":"Field","name":{"kind":"Name","value":"resolution_time"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_team"}},{"kind":"Field","name":{"kind":"Name","value":"ticket_form_id"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"created_by"}},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"team"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"agent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<GET_SEARCHED_TICKETSQuery, GET_SEARCHED_TICKETSQueryVariables>;
export const GET_FILTERED_TICKETSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_FILTERED_TICKETS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"0"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ticket_bool_exp"}},"defaultValue":{"kind":"ObjectValue","fields":[]}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"order_by"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"ticket"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"10"}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"form_value"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"contact_id"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_agent"}},{"kind":"Field","name":{"kind":"Name","value":"account_id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"priority"}},{"kind":"Field","name":{"kind":"Name","value":"resolution_time"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"subject"}},{"kind":"Field","name":{"kind":"Name","value":"assigned_team"}},{"kind":"Field","name":{"kind":"Name","value":"ticket_form_id"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"created_by"}},{"kind":"Field","name":{"kind":"Name","value":"source"}},{"kind":"Field","name":{"kind":"Name","value":"team"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"agent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<GET_FILTERED_TICKETSQuery, GET_FILTERED_TICKETSQueryVariables>;
export const GET_TICKET_COUNT_SUBSCRIPTIONDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"GET_TICKET_COUNT_SUBSCRIPTION"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ticket_bool_exp"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"ticket_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]} as unknown as DocumentNode<GET_TICKET_COUNT_SUBSCRIPTIONSubscription, GET_TICKET_COUNT_SUBSCRIPTIONSubscriptionVariables>;
export const GET_TICKETS_SUBSCRIPTIONDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"GET_TICKETS_SUBSCRIPTION"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ticket_bool_exp"}},"defaultValue":{"kind":"ObjectValue","fields":[]}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"0"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"created_at"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"order_by"}},"defaultValue":{"kind":"EnumValue","value":"desc"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset1"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"10"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"created_at1"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"order_by"}},"defaultValue":{"kind":"EnumValue","value":"asc"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ticket"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset1"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"messages_aggregate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"max"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"created_at"},"value":{"kind":"Variable","name":{"kind":"Name","value":"created_at1"}}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<GET_TICKETS_SUBSCRIPTIONSubscription, GET_TICKETS_SUBSCRIPTIONSubscriptionVariables>;
export const GET_TICKETS_COUNTSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TICKETS_COUNTS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"_and"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ticket_bool_exp"}}}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"mine"},"name":{"kind":"Name","value":"ticket_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"tab_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_contains"},"value":{"kind":"StringValue","value":"mine","block":false}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"_and"},"value":{"kind":"Variable","name":{"kind":"Name","value":"_and"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"team"},"name":{"kind":"Name","value":"ticket_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"tab_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_contains"},"value":{"kind":"StringValue","value":"team","block":false}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"_and"},"value":{"kind":"Variable","name":{"kind":"Name","value":"_and"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"watching"},"name":{"kind":"Name","value":"ticket_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"tab_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_contains"},"value":{"kind":"StringValue","value":"watching","block":false}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"_and"},"value":{"kind":"Variable","name":{"kind":"Name","value":"_and"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"history"},"name":{"kind":"Name","value":"ticket_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"tab_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_has_keys_any"},"value":{"kind":"ListValue","values":[{"kind":"StringValue","value":"history","block":false},{"kind":"StringValue","value":"shared","block":false}]}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"_and"},"value":{"kind":"Variable","name":{"kind":"Name","value":"_and"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"unassigned"},"name":{"kind":"Name","value":"ticket_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"tab_type"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_contains"},"value":{"kind":"StringValue","value":"unassigned","block":false}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"_and"},"value":{"kind":"Variable","name":{"kind":"Name","value":"_and"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]} as unknown as DocumentNode<GET_TICKETS_COUNTSQuery, GET_TICKETS_COUNTSQueryVariables>;
export const CREATE_CONTACTDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CREATE_CONTACT"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"contact_values"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"contacts_insert_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_contacts_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"contact_values"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","name":{"kind":"Name","value":"gender"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"preferred_language"}},{"kind":"Field","name":{"kind":"Name","value":"profile_twitter"}}]}}]}}]} as unknown as DocumentNode<CREATE_CONTACTMutation, CREATE_CONTACTMutationVariables>;
export const UPDATE_PHONE_NUMBERDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_PHONE_NUMBER"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"set"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_contacts_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"phone_number"},"value":{"kind":"Variable","name":{"kind":"Name","value":"set"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}}]}}]}}]} as unknown as DocumentNode<UPDATE_PHONE_NUMBERMutation, UPDATE_PHONE_NUMBERMutationVariables>;
export const GET_TWITTER_CHANNEL_PROFILESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TWITTER_CHANNEL_PROFILES"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"channel_twitter_profiles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"screen_name"}}]}}]}}]} as unknown as DocumentNode<GET_TWITTER_CHANNEL_PROFILESQuery, GET_TWITTER_CHANNEL_PROFILESQueryVariables>;
export const USER_PROFILE_INFODocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"USER_PROFILE_INFO"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"users_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availability"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"display_name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"hr_id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}}]}}]} as unknown as DocumentNode<USER_PROFILE_INFOQuery, USER_PROFILE_INFOQueryVariables>;
export const GetAllPublishArticlesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetAllPublishArticles"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"20"}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"0"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"knowledge_base_articles"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"article_status"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"StringValue","value":"published","block":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"body"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"article_status"}},{"kind":"Field","name":{"kind":"Name","value":"category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"total"},"name":{"kind":"Name","value":"knowledge_base_articles_aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]} as unknown as DocumentNode<GetAllPublishArticlesQuery, GetAllPublishArticlesQueryVariables>;
export const GET_PUBLISHED_ARTICLES_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_PUBLISHED_ARTICLES_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}},"defaultValue":{"kind":"StringValue","value":"","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"knowledge_base_articles_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"body"}},{"kind":"Field","name":{"kind":"Name","value":"meta_tags"}},{"kind":"Field","name":{"kind":"Name","value":"meta_description"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<GET_PUBLISHED_ARTICLES_BY_IDQuery, GET_PUBLISHED_ARTICLES_BY_IDQueryVariables>;
export const GET_ALL_PUBLISHED_ARTICLES_BY_CATEGORIESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_ALL_PUBLISHED_ARTICLES_BY_CATEGORIES"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"categories"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"knowledge_base_articles"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"article_status"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"StringValue","value":"published","block":false}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"_and"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"category"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"name"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"categories"}}}]}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"article_status"}},{"kind":"Field","name":{"kind":"Name","value":"body"}},{"kind":"Field","name":{"kind":"Name","value":"category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<GET_ALL_PUBLISHED_ARTICLES_BY_CATEGORIESQuery, GET_ALL_PUBLISHED_ARTICLES_BY_CATEGORIESQueryVariables>;
export const UPDATE_USER_PROFILE_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_USER_PROFILE_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"users_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_users_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"display_name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone_number"}}]}}]}}]} as unknown as DocumentNode<UPDATE_USER_PROFILE_BY_IDMutation, UPDATE_USER_PROFILE_BY_IDMutationVariables>;
export const CREATE_KNOWLEDGE_BASE_CATEGORYDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CREATE_KNOWLEDGE_BASE_CATEGORY"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"object"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"knowledge_base_categories_insert_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_knowledge_base_categories_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"object"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}}]}}]}}]} as unknown as DocumentNode<CREATE_KNOWLEDGE_BASE_CATEGORYMutation, CREATE_KNOWLEDGE_BASE_CATEGORYMutationVariables>;
export const GET_ALL_KNOWLEDGE_BASE_CATEGORIESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_ALL_KNOWLEDGE_BASE_CATEGORIES"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"total"},"name":{"kind":"Name","value":"knowledge_base_categories_aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"knowledge_base_categories"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"asc"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"created_by"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}}]}}]}}]} as unknown as DocumentNode<GET_ALL_KNOWLEDGE_BASE_CATEGORIESQuery, GET_ALL_KNOWLEDGE_BASE_CATEGORIESQueryVariables>;
export const GET_CATEGORIES_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_CATEGORIES_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}},"defaultValue":{"kind":"StringValue","value":"","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"knowledge_base_categories_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}}]} as unknown as DocumentNode<GET_CATEGORIES_BY_IDQuery, GET_CATEGORIES_BY_IDQueryVariables>;
export const UPDATE_KNOWLEDGE_BASE_CATEGORIES_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_KNOWLEDGE_BASE_CATEGORIES_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"knowledge_base_categories_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_knowledge_base_categories_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<UPDATE_KNOWLEDGE_BASE_CATEGORIES_BY_IDMutation, UPDATE_KNOWLEDGE_BASE_CATEGORIES_BY_IDMutationVariables>;
export const DELETE_KNOWLEDGE_BASE_CATEGORY_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_KNOWLEDGE_BASE_CATEGORY_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_knowledge_base_categories_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<DELETE_KNOWLEDGE_BASE_CATEGORY_BY_IDMutation, DELETE_KNOWLEDGE_BASE_CATEGORY_BY_IDMutationVariables>;
export const GET_ALL_KNOWLEDGE_BASE_ARTICLESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_ALL_KNOWLEDGE_BASE_ARTICLES"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search_content"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}},"defaultValue":{"kind":"StringValue","value":"","block":false}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"0"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"total"},"name":{"kind":"Name","value":"knowledge_base_articles_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"name"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_content"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"body"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_content"}}}]}}]}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"asc"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"knowledge_base_articles"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"name"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_content"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"body"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_content"}}}]}}]}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"asc"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"body"}},{"kind":"Field","name":{"kind":"Name","value":"article_status"}},{"kind":"Field","name":{"kind":"Name","value":"permissions"}},{"kind":"Field","name":{"kind":"Name","value":"read_count"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"meta_tags"}},{"kind":"Field","name":{"kind":"Name","value":"meta_description"}},{"kind":"Field","name":{"kind":"Name","value":"conversation_trigger"}},{"kind":"Field","name":{"kind":"Name","value":"category_id"}},{"kind":"Field","name":{"kind":"Name","value":"created_by"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<GET_ALL_KNOWLEDGE_BASE_ARTICLESQuery, GET_ALL_KNOWLEDGE_BASE_ARTICLESQueryVariables>;
export const CREATE_KNOWLEDGE_BASE_ARTICLEDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CREATE_KNOWLEDGE_BASE_ARTICLE"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"object"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"knowledge_base_articles_insert_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_knowledge_base_articles_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"object"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"body"}},{"kind":"Field","name":{"kind":"Name","value":"read_count"}},{"kind":"Field","name":{"kind":"Name","value":"permissions"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"article_status"}},{"kind":"Field","name":{"kind":"Name","value":"conversation_trigger"}},{"kind":"Field","name":{"kind":"Name","value":"meta_description"}},{"kind":"Field","name":{"kind":"Name","value":"meta_tags"}},{"kind":"Field","name":{"kind":"Name","value":"created_by"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<CREATE_KNOWLEDGE_BASE_ARTICLEMutation, CREATE_KNOWLEDGE_BASE_ARTICLEMutationVariables>;
export const GET_SPECIFIC_ARTICLE_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_SPECIFIC_ARTICLE_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"knowledge_base_articles_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"body"}},{"kind":"Field","name":{"kind":"Name","value":"article_status"}},{"kind":"Field","name":{"kind":"Name","value":"permissions"}},{"kind":"Field","name":{"kind":"Name","value":"read_count"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"meta_tags"}},{"kind":"Field","name":{"kind":"Name","value":"meta_description"}},{"kind":"Field","name":{"kind":"Name","value":"conversation_trigger"}},{"kind":"Field","name":{"kind":"Name","value":"category_id"}},{"kind":"Field","name":{"kind":"Name","value":"created_by"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}}]}}]} as unknown as DocumentNode<GET_SPECIFIC_ARTICLE_BY_IDQuery, GET_SPECIFIC_ARTICLE_BY_IDQueryVariables>;
export const UPDATE_ARTICLE_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_ARTICLE_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}},"defaultValue":{"kind":"StringValue","value":"","block":false}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"knowledge_base_articles_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"read_count"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_knowledge_base_articles_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}}},{"kind":"Argument","name":{"kind":"Name","value":"_inc"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"read_count"},"value":{"kind":"Variable","name":{"kind":"Name","value":"read_count"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"read_count"}}]}}]}}]} as unknown as DocumentNode<UPDATE_ARTICLE_BY_IDMutation, UPDATE_ARTICLE_BY_IDMutationVariables>;
export const DELETE_ARTICLE_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_ARTICLE_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}},"defaultValue":{"kind":"StringValue","value":"","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_knowledge_base_articles_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<DELETE_ARTICLE_BY_IDMutation, DELETE_ARTICLE_BY_IDMutationVariables>;
export const CREATE_TAGDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CREATE_TAG"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"object"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"tags_insert_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_tags_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"object"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"level"}}]}}]}}]} as unknown as DocumentNode<CREATE_TAGMutation, CREATE_TAGMutationVariables>;
export const GET_ALL_TAGSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_ALL_TAGS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search_items"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"total"},"name":{"kind":"Name","value":"tags_aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"tags"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"name"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_items"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"description"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search_items"}}}]}}]}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"asc"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"level"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"smart_tags"}},{"kind":"Field","name":{"kind":"Name","value":"account_id"}},{"kind":"Field","name":{"kind":"Name","value":"created_by"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<GET_ALL_TAGSQuery, GET_ALL_TAGSQueryVariables>;
export const GET_A_TAG_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_A_TAG_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}},"defaultValue":{"kind":"StringValue","value":"","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"tags_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"level"}},{"kind":"Field","name":{"kind":"Name","value":"smart_tags"}}]}}]}}]} as unknown as DocumentNode<GET_A_TAG_BY_IDQuery, GET_A_TAG_BY_IDQueryVariables>;
export const UPDATED_TAGSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATED_TAGS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"tags_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}},"defaultValue":{"kind":"StringValue","value":"","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_tags_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"updated_values"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}}]}}]}}]} as unknown as DocumentNode<UPDATED_TAGSMutation, UPDATED_TAGSMutationVariables>;
export const DELETE_TAG_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DELETE_TAG_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"delete_tags_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"level"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}}]}}]} as unknown as DocumentNode<DELETE_TAG_BY_IDMutation, DELETE_TAG_BY_IDMutationVariables>;
export const UPDATED_CONTACT_REASON_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATED_CONTACT_REASON_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}},"defaultValue":{"kind":"StringValue","value":"","block":false}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"categories"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"jsonb"}},"defaultValue":{"kind":"StringValue","value":"","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_workflows_contact_reason_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"categories"},"value":{"kind":"Variable","name":{"kind":"Name","value":"categories"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}},{"kind":"Field","name":{"kind":"Name","value":"contact_reason"}},{"kind":"Field","name":{"kind":"Name","value":"categories"}}]}}]}}]} as unknown as DocumentNode<UPDATED_CONTACT_REASON_BY_IDMutation, UPDATED_CONTACT_REASON_BY_IDMutationVariables>;
export const GET_ALL_CONTACT_REASONSDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_ALL_CONTACT_REASONS"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"workflows_contact_reason"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"categories"}},{"kind":"Field","name":{"kind":"Name","value":"contact_reason"}},{"kind":"Field","name":{"kind":"Name","value":"created_at"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"updated_at"}}]}}]}}]} as unknown as DocumentNode<GET_ALL_CONTACT_REASONSQuery, GET_ALL_CONTACT_REASONSQueryVariables>;
export const UPDATE_LAST_ACTIVE_ATDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_LAST_ACTIVE_AT"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"user_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_account_users"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"user_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"user_id"}}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"last_active_at"},"value":{"kind":"StringValue","value":"now()","block":false}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user_id"}},{"kind":"Field","name":{"kind":"Name","value":"last_active_at"}}]}}]}}]}}]} as unknown as DocumentNode<UPDATE_LAST_ACTIVE_ATMutation, UPDATE_LAST_ACTIVE_ATMutationVariables>;
export const ADD_AGENTDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ADD_AGENT"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"object"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"account_users_insert_input"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_account_users_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"object"}}},{"kind":"Argument","name":{"kind":"Name","value":"on_conflict"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"constraint"},"value":{"kind":"EnumValue","value":"account_users_account_id_user_id_key"}},{"kind":"ObjectField","name":{"kind":"Name","value":"update_columns"},"value":{"kind":"ListValue","values":[]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"user_id"}}]}}]}}]} as unknown as DocumentNode<ADD_AGENTMutation, ADD_AGENTMutationVariables>;
export const GET_CONVERSATION_CSATDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_CONVERSATION_CSAT"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"csat_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"conversations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"csat_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"csat_id"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"contact_id"}},{"kind":"Field","name":{"kind":"Name","value":"csat_sent"}},{"kind":"Field","name":{"kind":"Name","value":"csat_sent_at"}},{"kind":"Field","name":{"kind":"Name","value":"csat_language"}},{"kind":"Field","name":{"kind":"Name","value":"csat_feedback"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"satisfaction_point"}},{"kind":"Field","name":{"kind":"Name","value":"open_question_ans"}}]}}]}}]}}]} as unknown as DocumentNode<GET_CONVERSATION_CSATQuery, GET_CONVERSATION_CSATQueryVariables>;
export const GET_TICKET_CSATDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_TICKET_CSAT"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"csat_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"ticket"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"csat_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"csat_id"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"contact_id"}},{"kind":"Field","name":{"kind":"Name","value":"csat_sent"}},{"kind":"Field","name":{"kind":"Name","value":"csat_sent_at"}},{"kind":"Field","name":{"kind":"Name","value":"csat_language"}},{"kind":"Field","name":{"kind":"Name","value":"csat_feedback"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"satisfaction_point"}},{"kind":"Field","name":{"kind":"Name","value":"open_question_ans"}}]}}]}}]}}]} as unknown as DocumentNode<GET_TICKET_CSATQuery, GET_TICKET_CSATQueryVariables>;
export const ADD_CSAT_FEEDBACKDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ADD_CSAT_FEEDBACK"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"object"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"csat_feedback_insert_input"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"insert_csat_feedback_one"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"object"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"contact_id"}},{"kind":"Field","name":{"kind":"Name","value":"conversation_id"}},{"kind":"Field","name":{"kind":"Name","value":"ticket_id"}},{"kind":"Field","name":{"kind":"Name","value":"satisfaction_point"}},{"kind":"Field","name":{"kind":"Name","value":"open_question_ans"}}]}}]}}]} as unknown as DocumentNode<ADD_CSAT_FEEDBACKMutation, ADD_CSAT_FEEDBACKMutationVariables>;
export const GET_CSAT_SCOREDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_CSAT_SCORE"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"csat_feedback_bool_exp"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"feedback"},"name":{"kind":"Name","value":"csat_feedback"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"satisfaction_point"}},{"kind":"Field","name":{"kind":"Name","value":"open_question_ans"}},{"kind":"Field","name":{"kind":"Name","value":"conversation_id"}},{"kind":"Field","name":{"kind":"Name","value":"ticket_id"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"aggregations"},"name":{"kind":"Name","value":"csat_feedback_aggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"satisfaction_point"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GET_CSAT_SCOREQuery, GET_CSAT_SCOREQueryVariables>;
export const GET_INSTAGRAM_PAGESDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_INSTAGRAM_PAGES"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"channel_instagram"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"page_id"}}]}}]}}]} as unknown as DocumentNode<GET_INSTAGRAM_PAGESQuery, GET_INSTAGRAM_PAGESQueryVariables>;
export const UPDATE_INSTAGRAM_INBOX_BY_IDDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_INSTAGRAM_INBOX_BY_ID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inbox_id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inbox_update_values"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"inboxes_set_input"}},"defaultValue":{"kind":"ObjectValue","fields":[]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"update_inboxes_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inbox_id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inbox_update_values"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"is_enabled"}}]}}]}}]} as unknown as DocumentNode<UPDATE_INSTAGRAM_INBOX_BY_IDMutation, UPDATE_INSTAGRAM_INBOX_BY_IDMutationVariables>;